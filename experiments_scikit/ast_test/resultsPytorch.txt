"{\n   \"ASGD\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"lambd\",\n         \"alpha\",\n         \"t0\",\n         \"weight_decay\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"AbsTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ]\n   },\n   \"ActivationsQATTestModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ActivationsTestModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"Adadelta\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"rho\",\n         \"eps\",\n         \"weight_decay\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"AdadeltaOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"epsilon\",\n         \"decay\",\n         \"policy\",\n         \"sparse_dedup_aggregator\",\n         \"engine\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"Adagrad\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"lr_decay\",\n         \"weight_decay\",\n         \"initial_accumulator_value\",\n         \"eps\"\n      ],\n      \"share_memory\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"AdagradOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"epsilon\",\n         \"decay\",\n         \"weight_decay\",\n         \"policy\",\n         \"sparse_dedup_aggregator\",\n         \"rowWise\",\n         \"engine\",\n         \"lars\",\n         \"output_effective_lr\",\n         \"output_effective_lr_and_update\",\n         \"pruning_options\",\n         \"swa_options\",\n         \"weight_scale\"\n      ],\n      \"_process_pruning_options\": [\n         \"self\",\n         \"pruning_options\"\n      ],\n      \"_process_swa_options\": [\n         \"self\",\n         \"swa_options\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"Adam\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"betas\",\n         \"eps\",\n         \"weight_decay\",\n         \"amsgrad\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"AdamOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"beta1\",\n         \"beta2\",\n         \"epsilon\",\n         \"policy\",\n         \"use_lr_adaption\",\n         \"lr_alpha\",\n         \"normalized_lr_adaption\",\n         \"sparse_dedup_aggregator\",\n         \"rowWise\",\n         \"engine\",\n         \"enableRAdam\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"AdamW\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"betas\",\n         \"eps\",\n         \"weight_decay\",\n         \"amsgrad\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"Adamax\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"betas\",\n         \"eps\",\n         \"weight_decay\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"AdaptiveAvgPool1d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveAvgPool2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveAvgPool3d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveLogSoftmaxWithLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"in_features\",\n         \"n_classes\",\n         \"cutoffs\",\n         \"div_value\",\n         \"head_bias\"\n      ],\n      \"_get_full_log_prob\": [\n         \"self\",\n         \"input\",\n         \"head_output\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"input\"\n      ],\n      \"predict\": [\n         \"self\",\n         \"input\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"AdaptiveMaxPool1d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveMaxPool2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveMaxPool3d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AdaptiveWeight\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"optimizer\",\n         \"weights\",\n         \"enable_diagnose\",\n         \"estimation_method\",\n         \"pos_optim_method\",\n         \"reg_lambda\"\n      ],\n      \"_add_ops_impl\": [\n         \"self\",\n         \"net\",\n         \"enable_diagnose\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"concat_data\": [\n         \"self\",\n         \"net\"\n      ],\n      \"inv_var_init\": [\n         \"self\"\n      ],\n      \"inv_var_reg\": [\n         \"self\",\n         \"net\",\n         \"reg\"\n      ],\n      \"inv_var_weight\": [\n         \"self\",\n         \"x\",\n         \"net\",\n         \"weight\"\n      ],\n      \"log_std_init\": [\n         \"self\"\n      ],\n      \"log_std_reg\": [\n         \"self\",\n         \"net\",\n         \"reg\"\n      ],\n      \"log_std_weight\": [\n         \"self\",\n         \"x\",\n         \"net\",\n         \"weight\"\n      ]\n   },\n   \"AddBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"device\"\n      ]\n   },\n   \"AddBias\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"bias_init\",\n         \"bias_optim\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"AddmmBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"device\"\n      ]\n   },\n   \"AffineTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"event_dim\",\n         \"cache_size\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"sign\": [\n         \"self\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"AlphaDropout\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Analyzer\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"define_blob\": [\n         \"self\",\n         \"blob\"\n      ],\n      \"need_blob\": [\n         \"self\",\n         \"blob\"\n      ],\n      \"set_workspace\": [\n         \"self\",\n         \"node\",\n         \"ws\",\n         \"do_copy\"\n      ],\n      \"workspace\": [\n         \"self\"\n      ]\n   },\n   \"AnnotatedConvBnModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedConvBnReLUModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"fuse_model\": [\n         \"self\"\n      ]\n   },\n   \"AnnotatedConvModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedCustomConfigNestedModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedNestedModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedSingleLayerLinearModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedSkipQuantModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedSubNestedModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnnotatedTwoLayerLinearModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"AnyExpTrainer\": {\n      \"__init__\": [\n         \"self\",\n         \"opts\"\n      ],\n      \"add_metric\": [\n         \"self\",\n         \"name\",\n         \"calculator\",\n         \"is_train\"\n      ],\n      \"add_plot\": [\n         \"self\",\n         \"x\",\n         \"x_title\",\n         \"ys\",\n         \"y_title\"\n      ],\n      \"assembleAllOutputs\": [\n         \"self\"\n      ],\n      \"buildModelAndTrain\": [\n         \"self\",\n         \"opts\"\n      ],\n      \"checkpoint\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"createMetricsPlotsModelsOutputs\": [\n         \"self\"\n      ],\n      \"extendMetricsOutput\": [\n         \"self\"\n      ],\n      \"fun_conclude_operator\": [\n         \"self\",\n         \"opts\"\n      ],\n      \"fun_per_epoch_aftRunNet\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"fun_per_epoch_b4RunNet\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"fun_per_iter_aftRunNetAftTest\": [\n         \"self\",\n         \"epoch\",\n         \"epoch_iter\"\n      ],\n      \"fun_per_iter_aftRunNetB4Test\": [\n         \"self\",\n         \"epoch\",\n         \"epoch_iter\"\n      ],\n      \"fun_per_iter_b4RunNet\": [\n         \"self\",\n         \"epoch\",\n         \"epoch_iter\"\n      ],\n      \"gen_checkpoint_path\": [\n         \"self\",\n         \"is_checkpoint\",\n         \"epoch\"\n      ],\n      \"gen_forward_pass_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_input_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_optimizer_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_param_update_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_rendezvous_ctx\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"getMeterClass\": [\n         \"self\",\n         \"meterName\"\n      ],\n      \"get_input_dataset\": [\n         \"self\",\n         \"opts\"\n      ],\n      \"get_model_input_fun\": [\n         \"self\"\n      ],\n      \"init_logs\": [\n         \"self\"\n      ],\n      \"init_metrics\": [\n         \"self\"\n      ],\n      \"init_model\": [\n         \"self\"\n      ],\n      \"init_plots\": [\n         \"self\"\n      ],\n      \"list_of_epoch_iters\": [\n         \"self\"\n      ],\n      \"list_of_epochs\": [\n         \"self\"\n      ],\n      \"loadCheckpoint\": [\n         \"self\"\n      ],\n      \"planning_output\": [\n         \"self\"\n      ],\n      \"prep_a_data_parallel_model\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"prep_data_parallel_models\": [\n         \"self\"\n      ],\n      \"run_testing_net\": [\n         \"self\"\n      ],\n      \"run_training_net\": [\n         \"self\"\n      ]\n   },\n   \"AppDirs\": {\n      \"__init__\": [\n         \"self\",\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"roaming\",\n         \"multipath\"\n      ],\n      \"site_config_dir\": [\n         \"self\"\n      ],\n      \"site_data_dir\": [\n         \"self\"\n      ],\n      \"user_cache_dir\": [\n         \"self\"\n      ],\n      \"user_config_dir\": [\n         \"self\"\n      ],\n      \"user_data_dir\": [\n         \"self\"\n      ],\n      \"user_log_dir\": [\n         \"self\"\n      ],\n      \"user_state_dir\": [\n         \"self\"\n      ]\n   },\n   \"ArcCosineFeatureMap\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"s\",\n         \"scale\",\n         \"weight_init\",\n         \"bias_init\",\n         \"weight_optim\",\n         \"bias_optim\",\n         \"set_weight_as_global_constant\",\n         \"initialize_output_schema\",\n         \"name\"\n      ],\n      \"_heaviside_with_power\": [\n         \"self\",\n         \"net\",\n         \"input_features\",\n         \"output_blob\",\n         \"s\"\n      ],\n      \"_initialize_params\": [\n         \"self\",\n         \"w_name\",\n         \"b_name\",\n         \"w_init\",\n         \"b_init\",\n         \"w_optim\",\n         \"b_optim\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Argument\": {\n      \"__init__\": [\n         \"self\",\n         \"_type\",\n         \"name\",\n         \"is_optional\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"ArithmeticOpsTest\": {\n      \"_test_binary_op_graph\": [\n         \"self\",\n         \"name\"\n      ],\n      \"test_add_graph\": [\n         \"self\"\n      ],\n      \"test_div_graph\": [\n         \"self\"\n      ],\n      \"test_mul_graph\": [\n         \"self\"\n      ],\n      \"test_sub_graph\": [\n         \"self\"\n      ]\n   },\n   \"As_stridedBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"size\",\n         \"stride\",\n         \"storage_offset\",\n         \"device\"\n      ]\n   },\n   \"AssertNoJIT\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"AssignmentAlgorithm\": {},\n   \"AttentionCell\": {\n      \"__init__\": [\n         \"self\",\n         \"encoder_output_dim\",\n         \"encoder_outputs\",\n         \"encoder_lengths\",\n         \"decoder_cell\",\n         \"decoder_state_dim\",\n         \"attention_type\",\n         \"weighted_encoder_outputs\",\n         \"attention_memory_optimization\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"_prepare_output\": [\n         \"self\",\n         \"model\",\n         \"states\"\n      ],\n      \"_prepare_output_sequence\": [\n         \"self\",\n         \"model\",\n         \"state_outputs\"\n      ],\n      \"build_initial_coverage\": [\n         \"self\",\n         \"model\"\n      ],\n      \"get_attention_weights\": [\n         \"self\"\n      ],\n      \"get_output_dim\": [\n         \"self\"\n      ],\n      \"get_output_state_index\": [\n         \"self\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ],\n      \"prepare_input\": [\n         \"self\",\n         \"model\",\n         \"input_blob\"\n      ]\n   },\n   \"AttentionType\": {},\n   \"AutocastTestLists\": {\n      \"__init__\": [\n         \"self\",\n         \"dev\"\n      ]\n   },\n   \"AveragedModel\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"device\",\n         \"avg_fn\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"update_parameters\": [\n         \"self\",\n         \"model\"\n      ]\n   },\n   \"AvgPool1d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AvgPool2d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AvgPool3d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"d\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"AvgPoolBench\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"BCELoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"BCEWithLogitsLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\",\n         \"pos_weight\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"BFloat16Storage\": {},\n   \"BNReLU2d\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"BNReLU3d\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"BPRLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Backend\": {\n      \"__new__\": [\n         \"cls\",\n         \"name\"\n      ],\n      \"register_backend\": [\n         \"cls\",\n         \"name\",\n         \"func\"\n      ]\n   },\n   \"BackwardCFunction\": {\n      \"apply\": [\n         \"self\"\n      ]\n   },\n   \"BahdanauAttention\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"b\",\n         \"t_q\",\n         \"t_k\",\n         \"n\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"att_query\",\n         \"att_keys\",\n         \"normalize_bias\",\n         \"linear_att\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"BarModule\": {},\n   \"Barrier\": {\n      \"init\": [\n         \"cls\"\n      ],\n      \"sync\": [\n         \"cls\",\n         \"wait_for\",\n         \"timeout\"\n      ]\n   },\n   \"BaseException\": {},\n   \"BasePruningMethod\": {\n      \"__call__\": [\n         \"self\",\n         \"module\",\n         \"inputs\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\"\n      ],\n      \"apply_mask\": [\n         \"self\",\n         \"module\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ],\n      \"prune\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ],\n      \"remove\": [\n         \"self\",\n         \"module\"\n      ]\n   },\n   \"BaseTestCase\": {\n      \"createSummaryWriter\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ]\n   },\n   \"BaseTestClass\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ]\n   },\n   \"BasicRNNCell\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"forget_bias\",\n         \"memory_optimization\",\n         \"drop_states\",\n         \"initializer\",\n         \"activation\"\n      ],\n      \"apply_override\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"get_output_dim\": [\n         \"self\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ],\n      \"prepare_input\": [\n         \"self\",\n         \"model\",\n         \"input_blob\"\n      ]\n   },\n   \"BasicRNNCellTest\": {\n      \"test_basic_rnn\": [\n         \"self\",\n         \"seed\",\n         \"seq_length\",\n         \"batch_size\",\n         \"input_size\",\n         \"hidden_size\",\n         \"drop_states\",\n         \"sequence_lengths\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"BatchFeeder\": {\n      \"__init__\": [\n         \"self\",\n         \"net\",\n         \"input_blob_names\",\n         \"batch_size\",\n         \"device_option\",\n         \"namescope\",\n         \"input_source_name\",\n         \"queue\",\n         \"metrics\",\n         \"dont_rebatch\",\n         \"batch_columns\",\n         \"timeout\"\n      ],\n      \"_create_caffe2_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"_create_caffe2_queues\": [\n         \"self\",\n         \"net\"\n      ],\n      \"_enqueue\": [\n         \"self\",\n         \"blob_name\",\n         \"queue\",\n         \"data_arr\"\n      ],\n      \"_enqueue_batch\": [\n         \"self\",\n         \"data_input_coordinator\"\n      ],\n      \"_enqueue_batch_direct\": [\n         \"self\",\n         \"data_input_coordinator\"\n      ],\n      \"_get\": [\n         \"self\",\n         \"data_input_coordinator\"\n      ],\n      \"_init_scratch\": [\n         \"self\"\n      ],\n      \"_log_inputs_per_interval\": [\n         \"self\",\n         \"inputs\",\n         \"force\"\n      ],\n      \"_validate_chunk\": [\n         \"self\",\n         \"chunk\"\n      ],\n      \"cleanup\": [\n         \"self\"\n      ],\n      \"put\": [\n         \"self\",\n         \"chunk\",\n         \"data_input_coordinator\"\n      ],\n      \"start\": [\n         \"self\"\n      ],\n      \"stop\": [\n         \"self\"\n      ]\n   },\n   \"BatchHuberLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"delta\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BatchLRLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"average_loss\",\n         \"jsd_weight\",\n         \"pos_label_target\",\n         \"neg_label_target\",\n         \"homotopy_weighting\",\n         \"log_D_trick\",\n         \"unjoined_lr_loss\",\n         \"uncertainty_penalty\",\n         \"focal_gamma\",\n         \"stop_grad_in_focal_factor\",\n         \"task_gamma\",\n         \"task_gamma_lb\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"init_weight\": [\n         \"self\",\n         \"jsd_weight\",\n         \"homotopy_weighting\"\n      ],\n      \"update_weight\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BatchMSELoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BatchNorm1d\": {\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"BatchNorm2d\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"BatchNorm3d\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"BatchNormBench\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"BatchNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"device\"\n      ]\n   },\n   \"BatchNormNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"BatchNormalization\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"scale_optim\",\n         \"bias_optim\",\n         \"momentum\",\n         \"order\",\n         \"scale_init_value\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"is_test\",\n         \"out_blob\"\n      ],\n      \"add_eval_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BatchNormalizer\": {\n      \"__init__\": [\n         \"self\",\n         \"momentum\",\n         \"scale_init_value\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"layer_model\",\n         \"param\"\n      ]\n   },\n   \"BatchSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"sampler\",\n         \"batch_size\",\n         \"drop_last\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"BatchSigmoidCrossEntropyLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BatchSoftmaxLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"label_smoothing_matrix\",\n         \"label_prob\",\n         \"scale\",\n         \"average_by_batch_size\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"compute_smoothed_label\": [\n         \"self\",\n         \"net\"\n      ],\n      \"initialize_label_smoothing_constants\": [\n         \"self\"\n      ]\n   },\n   \"BatchnormTest\": {\n      \"test_bn\": [\n         \"self\",\n         \"seed\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\"\n      ]\n   },\n   \"BeamSearchForwardOnly\": {\n      \"__init__\": [\n         \"self\",\n         \"beam_size\",\n         \"model\",\n         \"eos_token_id\",\n         \"go_token_id\",\n         \"post_eos_penalty\"\n      ],\n      \"apply\": [\n         \"self\",\n         \"inputs\",\n         \"length\",\n         \"log_probs\",\n         \"attentions\",\n         \"state_configs\",\n         \"data_dependencies\",\n         \"word_rewards\",\n         \"possible_translation_tokens\",\n         \"go_token_id\"\n      ],\n      \"get_previous_tokens\": [\n         \"self\"\n      ],\n      \"get_step_model\": [\n         \"self\"\n      ],\n      \"get_timestep\": [\n         \"self\"\n      ]\n   },\n   \"Benchmark\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"display\": [\n         \"self\"\n      ]\n   },\n   \"BenchmarkMeta\": {\n      \"__new__\": [\n         \"metacls\",\n         \"name\",\n         \"bases\",\n         \"class_dict\"\n      ]\n   },\n   \"BenchmarkRunner\": {\n      \"__init__\": [\n         \"self\",\n         \"args\"\n      ],\n      \"_check_keep\": [\n         \"self\",\n         \"test_flag\",\n         \"cmd_flag\"\n      ],\n      \"_check_keep_list\": [\n         \"self\",\n         \"test_flag\",\n         \"cmd_flag_list\"\n      ],\n      \"_check_operator_first_char\": [\n         \"self\",\n         \"test_flag\",\n         \"cmd_flag\"\n      ],\n      \"_iteration_result_is_significant\": [\n         \"self\",\n         \"iters\",\n         \"run_time_sec\",\n         \"curr_test_total_time\",\n         \"has_explicit_iteration_count\"\n      ],\n      \"_keep_test\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"_launch_backward\": [\n         \"self\",\n         \"test_case\",\n         \"iters\",\n         \"print_per_iter\"\n      ],\n      \"_launch_forward\": [\n         \"self\",\n         \"test_case\",\n         \"iters\",\n         \"print_per_iter\"\n      ],\n      \"_measure_time\": [\n         \"self\",\n         \"launch_test\",\n         \"test_case\",\n         \"iters\",\n         \"print_per_iter\"\n      ],\n      \"_predict_num_iter_needed\": [\n         \"self\",\n         \"i\"\n      ],\n      \"_print_header\": [\n         \"self\"\n      ],\n      \"_print_perf_result\": [\n         \"self\",\n         \"reported_run_time_us\",\n         \"test_case\"\n      ],\n      \"_print_test_case_info\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"Bernoulli\": {\n      \"__init__\": [\n         \"self\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"Beta\": {\n      \"__init__\": [\n         \"self\",\n         \"concentration1\",\n         \"concentration0\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"concentration0\": [\n         \"self\"\n      ],\n      \"concentration1\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"BidirLSTMLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"cell\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"states\"\n      ]\n   },\n   \"Bilinear\": {\n      \"__init__\": [\n         \"self\",\n         \"in1_features\",\n         \"in2_features\",\n         \"out_features\",\n         \"bias\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input1\",\n         \"input2\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"BinaryOpBcastBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"in_one\",\n         \"in_two\",\n         \"dtype\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"BinaryOpBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"device\",\n         \"dtype_one\",\n         \"dtype_two\",\n         \"op_func\"\n      ]\n   },\n   \"Binomial\": {\n      \"__init__\": [\n         \"self\",\n         \"total_count\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"BlobDeallocationTest\": {\n      \"test\": [\n         \"self\"\n      ]\n   },\n   \"BlobReference\": {\n      \"GetNameScope\": [\n         \"self\"\n      ],\n      \"GetUnscopedName\": [\n         \"self\"\n      ],\n      \"Net\": [\n         \"self\"\n      ],\n      \"_CreateAndAddToNet\": [\n         \"self\",\n         \"op_type\",\n         \"inputs\"\n      ],\n      \"__add__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"op_type\"\n      ],\n      \"__hash__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"net\"\n      ],\n      \"__ne__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__radd__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ]\n   },\n   \"BlobWeightedSum\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"init_weights\",\n         \"weight_optim\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"BlobsQueueDBTest\": {\n      \"_add_blob_to_queue\": [\n         \"self\",\n         \"queue\",\n         \"data\",\n         \"blob\",\n         \"status\"\n      ],\n      \"_create_test_tensor_protos\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"_test_create_blobs_queue_db\": [\n         \"self\",\n         \"add_blobs_fun\"\n      ],\n      \"test_create_blobs_queue_db_string\": [\n         \"self\"\n      ],\n      \"test_create_blobs_queue_db_tensor\": [\n         \"self\"\n      ]\n   },\n   \"BoolStorage\": {},\n   \"BoundedGradientProjection\": {\n      \"__init__\": [\n         \"self\",\n         \"lb\",\n         \"ub\",\n         \"left_open\",\n         \"right_open\",\n         \"epsilon\"\n      ],\n      \"_run_after_optimizer\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"BrewGPUTest\": {\n      \"test_relu\": [\n         \"self\"\n      ],\n      \"test_tanh\": [\n         \"self\"\n      ]\n   },\n   \"BrewTest\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_arg_scope\": [\n         \"self\"\n      ],\n      \"test_arg_scope_nested\": [\n         \"self\"\n      ],\n      \"test_arg_scope_single\": [\n         \"self\"\n      ],\n      \"test_cnn_model_helper_deprecated\": [\n         \"self\"\n      ],\n      \"test_cond\": [\n         \"self\"\n      ],\n      \"test_double_register\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_fc\": [\n         \"self\"\n      ],\n      \"test_get_params\": [\n         \"self\"\n      ],\n      \"test_has_helper\": [\n         \"self\"\n      ],\n      \"test_loop\": [\n         \"self\"\n      ],\n      \"test_model_helper\": [\n         \"self\"\n      ],\n      \"test_param_consistence\": [\n         \"self\"\n      ],\n      \"test_relu\": [\n         \"self\"\n      ],\n      \"test_tanh\": [\n         \"self\"\n      ],\n      \"test_validate\": [\n         \"self\"\n      ]\n   },\n   \"Broadcast\": {\n      \"backward\": [\n         \"ctx\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"target_gpus\"\n      ]\n   },\n   \"BroadcastBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"_eval\": [\n         \"self\",\n         \"d1\",\n         \"d2\",\n         \"d3\",\n         \"d4\",\n         \"binary_op\",\n         \"unary_op\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"d1\",\n         \"d2\",\n         \"d3\",\n         \"d4\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [\n         \"cls\"\n      ],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"BroadcastColBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"BroadcastMidBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"BroadcastMulBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"case\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"d1\",\n         \"d2\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"BroadcastRowBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"BroadcastThreeArgs\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"L\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"d1\",\n         \"d2\",\n         \"d3\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"BroadcastingListCls\": {\n      \"__getitem__\": [\n         \"self\",\n         \"types\"\n      ]\n   },\n   \"BucketWeighted\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"max_score\",\n         \"bucket_boundaries\",\n         \"hash_buckets\",\n         \"weight_optim\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"get_memory_usage\": [\n         \"self\"\n      ]\n   },\n   \"BuildExtension\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_add_compile_flag\": [\n         \"self\",\n         \"extension\",\n         \"flag\"\n      ],\n      \"_add_gnu_cpp_abi_flag\": [\n         \"self\",\n         \"extension\"\n      ],\n      \"_check_abi\": [\n         \"self\"\n      ],\n      \"_define_torch_extension_name\": [\n         \"self\",\n         \"extension\"\n      ],\n      \"build_extensions\": [\n         \"self\"\n      ],\n      \"get_ext_filename\": [\n         \"self\",\n         \"ext_name\"\n      ],\n      \"with_options\": [\n         \"cls\"\n      ]\n   },\n   \"BuildType\": {\n      \"__init__\": [\n         \"self\",\n         \"cmake_build_type_env\"\n      ],\n      \"is_debug\": [\n         \"self\"\n      ],\n      \"is_rel_with_deb_info\": [\n         \"self\"\n      ],\n      \"is_release\": [\n         \"self\"\n      ]\n   },\n   \"Builder\": {\n      \"__call__\": [\n         \"self\",\n         \"ctx\",\n         \"node\"\n      ]\n   },\n   \"BulkLoadingDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"indices\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"length\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"BulkLoadingSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"batch_size\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"ByteStorage\": {},\n   \"BytesIOContext\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"C2SimpleNet\": {\n      \"__init__\": [\n         \"self\",\n         \"op_name\",\n         \"num_inputs\",\n         \"debug\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"niters\"\n      ]\n   },\n   \"CELU\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"CMake\": {\n      \"__init__\": [\n         \"self\",\n         \"build_dir\"\n      ],\n      \"_cmake_cache_file\": [\n         \"self\"\n      ],\n      \"_get_cmake_command\": [],\n      \"_get_version\": [\n         \"cmd\"\n      ],\n      \"build\": [\n         \"self\",\n         \"my_env\"\n      ],\n      \"defines\": [\n         \"args\"\n      ],\n      \"generate\": [\n         \"self\",\n         \"version\",\n         \"cmake_python_library\",\n         \"build_python\",\n         \"build_test\",\n         \"my_env\",\n         \"rerun\"\n      ],\n      \"get_cmake_cache_variables\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\",\n         \"args\",\n         \"env\"\n      ]\n   },\n   \"CNNModelHelper\": {\n      \"Accuracy\": [\n         \"self\"\n      ],\n      \"AddWeightDecay\": [\n         \"self\",\n         \"weight_decay\"\n      ],\n      \"AveragePool\": [\n         \"self\"\n      ],\n      \"CPU\": [\n         \"self\"\n      ],\n      \"Concat\": [\n         \"self\"\n      ],\n      \"ConstantInit\": [\n         \"self\",\n         \"value\"\n      ],\n      \"Conv\": [\n         \"self\"\n      ],\n      \"ConvNd\": [\n         \"self\"\n      ],\n      \"ConvTranspose\": [\n         \"self\"\n      ],\n      \"DepthConcat\": [\n         \"self\"\n      ],\n      \"Dropout\": [\n         \"self\"\n      ],\n      \"FC\": [\n         \"self\"\n      ],\n      \"FC_Decomp\": [\n         \"self\"\n      ],\n      \"FC_Prune\": [\n         \"self\"\n      ],\n      \"FC_Sparse\": [\n         \"self\"\n      ],\n      \"GPU\": [\n         \"self\",\n         \"gpu_id\"\n      ],\n      \"GroupConv\": [\n         \"self\"\n      ],\n      \"GroupConv_Deprecated\": [\n         \"self\"\n      ],\n      \"ImageInput\": [\n         \"self\",\n         \"blob_in\",\n         \"blob_out\",\n         \"use_gpu_transform\"\n      ],\n      \"InstanceNorm\": [\n         \"self\"\n      ],\n      \"Iter\": [\n         \"self\"\n      ],\n      \"LRN\": [\n         \"self\"\n      ],\n      \"MSRAInit\": [\n         \"self\"\n      ],\n      \"MaxPool\": [\n         \"self\"\n      ],\n      \"MaxPoolWithIndex\": [\n         \"self\"\n      ],\n      \"PRelu\": [\n         \"self\"\n      ],\n      \"PackedFC\": [\n         \"self\"\n      ],\n      \"PadImage\": [\n         \"self\",\n         \"blob_in\",\n         \"blob_out\"\n      ],\n      \"Relu\": [\n         \"self\"\n      ],\n      \"Softmax\": [\n         \"self\"\n      ],\n      \"SpatialBN\": [\n         \"self\"\n      ],\n      \"SpatialGN\": [\n         \"self\"\n      ],\n      \"Sum\": [\n         \"self\"\n      ],\n      \"Transpose\": [\n         \"self\"\n      ],\n      \"VideoInput\": [\n         \"self\",\n         \"blob_in\",\n         \"blob_out\"\n      ],\n      \"XavierInit\": [\n         \"self\"\n      ],\n      \"ZeroInit\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"order\",\n         \"name\",\n         \"use_cudnn\",\n         \"cudnn_exhaustive_search\",\n         \"ws_nbytes_limit\",\n         \"init_params\",\n         \"skip_sparse_optim\",\n         \"param_model\"\n      ]\n   },\n   \"CPUTestBase\": {},\n   \"CRFWithLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"num_classes\",\n         \"transitions_blob\"\n      ],\n      \"_crf_forward\": [\n         \"self\",\n         \"input_blob\",\n         \"initial_state\",\n         \"transitions_copy\",\n         \"seq_lengths\"\n      ],\n      \"_gather_entries_sum\": [\n         \"self\",\n         \"in_data\",\n         \"indices\",\n         \"index_size\"\n      ],\n      \"_path_binary_scores\": [\n         \"self\",\n         \"labels\",\n         \"transitions\",\n         \"seq_lengths\"\n      ],\n      \"build_crf_net\": [\n         \"self\",\n         \"input_blob\",\n         \"initial_state\",\n         \"transitions\"\n      ],\n      \"crf_loss\": [\n         \"self\",\n         \"predictions\",\n         \"labels\",\n         \"seq_lengths\"\n      ],\n      \"pad_labels\": [\n         \"labels\",\n         \"init_net\",\n         \"net\",\n         \"num_classes\"\n      ],\n      \"pad_predictions\": [\n         \"predictions\",\n         \"init_net\",\n         \"net\",\n         \"num_classes\"\n      ],\n      \"update_predictions\": [\n         \"self\",\n         \"classes\"\n      ]\n   },\n   \"CTCLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"blank\",\n         \"reduction\",\n         \"zero_infinity\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"log_probs\",\n         \"targets\",\n         \"input_lengths\",\n         \"target_lengths\"\n      ]\n   },\n   \"CTCOpsTest\": {\n      \"test_ctc_cost_cpu\": [\n         \"self\"\n      ],\n      \"test_ctc_cost_gpu\": [\n         \"self\"\n      ],\n      \"test_ctc_forward_only_cpu\": [\n         \"self\"\n      ],\n      \"test_ctc_forward_only_gpu\": [\n         \"self\"\n      ],\n      \"verify_cost\": [\n         \"self\",\n         \"device_option\",\n         \"is_test\",\n         \"skip_input_lengths\"\n      ]\n   },\n   \"CUDACountingDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"i\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"n\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"CUDAModule\": {\n      \"__init__\": [\n         \"self\",\n         \"m\"\n      ]\n   },\n   \"CUDATestBase\": {\n      \"get_all_devices\": [\n         \"cls\"\n      ],\n      \"get_primary_device\": [\n         \"cls\"\n      ],\n      \"has_cudnn\": [\n         \"self\"\n      ],\n      \"setUpClass\": [\n         \"cls\"\n      ]\n   },\n   \"CachedReader\": {\n      \"__init__\": [\n         \"self\",\n         \"original_reader\",\n         \"db_path\",\n         \"db_type\",\n         \"name\",\n         \"batch_size\",\n         \"loop_over\"\n      ],\n      \"_init_reader_schema\": [\n         \"self\"\n      ],\n      \"_save_field_blobs_to_db_file\": [\n         \"self\",\n         \"net\"\n      ],\n      \"build_cache_step\": [\n         \"self\",\n         \"overwrite\"\n      ]\n   },\n   \"Caffe2Backend\": {\n      \"_all_names_in_graph\": [\n         \"graph\"\n      ],\n      \"_common_onnx_node_to_caffe2_op\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"onnx_node\",\n         \"opset_version\"\n      ],\n      \"_create_control_op\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"n\",\n         \"opset_version\"\n      ],\n      \"_create_if\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"n\",\n         \"opset_version\"\n      ],\n      \"_create_loop\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"n\",\n         \"opset_version\"\n      ],\n      \"_create_rnn_variant\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"n\",\n         \"opset_version\"\n      ],\n      \"_create_tensor_filling_op\": [\n         \"cls\",\n         \"onnx_tensor\",\n         \"name\"\n      ],\n      \"_direct_initialize_inputs\": [\n         \"cls\",\n         \"inputs\",\n         \"initialized\",\n         \"ws\",\n         \"device_option\"\n      ],\n      \"_direct_initialize_parameters\": [\n         \"cls\",\n         \"initializer\",\n         \"ws\",\n         \"device_option\"\n      ],\n      \"_external_value_resolution_pass\": [\n         \"cls\",\n         \"model\",\n         \"raw_values_dict\"\n      ],\n      \"_graph_to_net\": [\n         \"cls\",\n         \"onnx_graph\",\n         \"opset_version\"\n      ],\n      \"_make_rnn_direction\": [\n         \"cls\",\n         \"input_blob\",\n         \"B\",\n         \"W\",\n         \"R\",\n         \"initial_states_and_names\",\n         \"sequence_lens\",\n         \"pred_mh\",\n         \"init_net\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_gates\",\n         \"direction_offset\",\n         \"Bi\",\n         \"Br\",\n         \"W_\",\n         \"R_\",\n         \"reform\",\n         \"make_cell\",\n         \"keep_outputs\"\n      ],\n      \"_onnx_model_to_caffe2_net\": [\n         \"cls\",\n         \"onnx_model\",\n         \"device\",\n         \"opset_version\",\n         \"include_initializers\"\n      ],\n      \"_onnx_node_to_caffe2_op\": [\n         \"cls\",\n         \"init_model\",\n         \"pred_model\",\n         \"node_def\",\n         \"opset_version\"\n      ],\n      \"_remove_ssa\": [\n         \"cls\",\n         \"net\",\n         \"remap_dict\"\n      ],\n      \"_rnn_reform_weights\": [\n         \"cls\",\n         \"reforms\",\n         \"name\",\n         \"hidden_size\",\n         \"init_net\",\n         \"gates\",\n         \"reorder_indices\"\n      ],\n      \"_substitute_raw_value\": [\n         \"cls\",\n         \"tp\",\n         \"raw_values_dict\"\n      ],\n      \"_visit_and_substitute_raw_values\": [\n         \"cls\",\n         \"nodes\",\n         \"raw_values_dict\"\n      ],\n      \"dummy_name\": [\n         \"cls\"\n      ],\n      \"is_compatible\": [\n         \"cls\",\n         \"model\",\n         \"device\"\n      ],\n      \"onnx_graph_to_caffe2_net\": [\n         \"cls\",\n         \"model\",\n         \"device\",\n         \"opset_version\"\n      ],\n      \"optimize_onnx\": [\n         \"input\",\n         \"init\",\n         \"predict\"\n      ],\n      \"prepare\": [\n         \"cls\",\n         \"model\",\n         \"device\",\n         \"raw_values_dict\"\n      ],\n      \"prepare_zip_archive\": [\n         \"cls\",\n         \"file\",\n         \"device\"\n      ],\n      \"run_node\": [\n         \"cls\",\n         \"node\",\n         \"inputs\",\n         \"device\",\n         \"opset_version\",\n         \"outputs_info\"\n      ],\n      \"supports_device\": [\n         \"cls\",\n         \"device_str\"\n      ]\n   },\n   \"Caffe2BenchmarkBase\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_device_option\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_set_backward_test\": [\n         \"self\",\n         \"is_backward\"\n      ],\n      \"_value_to_str\": [\n         \"self\",\n         \"value\"\n      ],\n      \"module_name\": [\n         \"self\"\n      ],\n      \"set_module_name\": [\n         \"self\",\n         \"name\"\n      ],\n      \"tensor\": [\n         \"self\",\n         \"shapes\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"test_name\": [\n         \"self\",\n         \"name_type\"\n      ]\n   },\n   \"Caffe2CppRep\": {\n      \"__init__\": [\n         \"self\",\n         \"cpp_rep\"\n      ],\n      \"external_inputs\": [\n         \"self\"\n      ],\n      \"external_outputs\": [\n         \"self\"\n      ],\n      \"init_net\": [\n         \"self\"\n      ],\n      \"pred_net\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\",\n         \"inputs\"\n      ]\n   },\n   \"Caffe2Frontend\": {\n      \"_all_names_in_net\": [\n         \"net\"\n      ],\n      \"_common_caffe2_arg_to_onnx_attr\": [\n         \"cls\",\n         \"op_def\",\n         \"arg\"\n      ],\n      \"_common_caffe2_op_to_onnx_node\": [\n         \"cls\",\n         \"op_def\",\n         \"shapes\"\n      ],\n      \"_extract_value_info\": [\n         \"tensor\"\n      ],\n      \"_filter_fake_init\": [\n         \"cls\",\n         \"init_net\",\n         \"value_info\"\n      ],\n      \"_ssa_rewrite\": [\n         \"cls\",\n         \"net\",\n         \"init_net\",\n         \"value_info\"\n      ],\n      \"caffe2_arg_to_onnx_attr\": [\n         \"cls\",\n         \"op_def\",\n         \"arg\"\n      ],\n      \"caffe2_init_net_to_initializer\": [\n         \"cls\",\n         \"init_net\"\n      ],\n      \"caffe2_net_to_onnx_graph\": [\n         \"cls\",\n         \"predict_net\",\n         \"init_net\",\n         \"value_info\"\n      ],\n      \"caffe2_net_to_onnx_model\": [\n         \"cls\"\n      ],\n      \"caffe2_op_to_onnx_node\": [\n         \"cls\",\n         \"op_def\",\n         \"shapes\"\n      ],\n      \"dummy_name\": [\n         \"cls\"\n      ],\n      \"ssa_rewrite\": [\n         \"cls\",\n         \"net\",\n         \"init_net\",\n         \"value_info\"\n      ]\n   },\n   \"Caffe2OperatorTestCase\": {\n      \"__init__\": [\n         \"self\",\n         \"op_bench\",\n         \"test_config\"\n      ],\n      \"_print_per_iter\": [\n         \"self\"\n      ],\n      \"run_backward\": [\n         \"self\",\n         \"num_runs\"\n      ],\n      \"run_forward\": [\n         \"self\",\n         \"num_runs\",\n         \"print_per_iter\"\n      ]\n   },\n   \"Caffe2Rep\": {\n      \"__init__\": [\n         \"self\",\n         \"init_net\",\n         \"predict_net\",\n         \"workspace\",\n         \"uninitialized\"\n      ],\n      \"_name_scope\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\",\n         \"inputs\"\n      ]\n   },\n   \"CatBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"sizes\",\n         \"N\",\n         \"dim\",\n         \"device\"\n      ]\n   },\n   \"CatTransform\": {\n      \"__init__\": [\n         \"self\",\n         \"tseq\",\n         \"dim\",\n         \"lengths\",\n         \"cache_size\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"bijective\": [\n         \"self\"\n      ],\n      \"codomain\": [\n         \"self\"\n      ],\n      \"domain\": [\n         \"self\"\n      ],\n      \"length\": [\n         \"self\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"Categorical\": {\n      \"__init__\": [\n         \"self\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"Cauchy\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"ChainDataset\": {\n      \"__init__\": [\n         \"self\",\n         \"datasets\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"ChannelShuffle\": {\n      \"__init__\": [\n         \"self\",\n         \"groups\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"ChannelShuffleOpsTest\": {\n      \"_channel_shuffle_nchw_ref\": [\n         \"self\",\n         \"X\",\n         \"group\"\n      ],\n      \"_channel_shuffle_nhwc_ref\": [\n         \"self\",\n         \"X\",\n         \"group\"\n      ],\n      \"test_channel_shuffle\": [\n         \"self\",\n         \"N\",\n         \"G\",\n         \"K\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"ChannelShuffleTest\": {\n      \"test_channel_shuffle\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"group\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"CharRNN\": {\n      \"CreateModel\": [\n         \"self\"\n      ],\n      \"GenerateText\": [\n         \"self\",\n         \"num_characters\",\n         \"ch\"\n      ],\n      \"TrainModel\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"args\"\n      ],\n      \"_idx_at_pos\": [\n         \"self\",\n         \"pos\"\n      ]\n   },\n   \"CharStorage\": {},\n   \"CheckpointFunction\": {\n      \"backward\": [\n         \"ctx\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"run_function\",\n         \"preserve_rng_state\"\n      ]\n   },\n   \"CheckpointManager\": {\n      \"__init__\": [\n         \"self\",\n         \"db_prefix\",\n         \"node_name\",\n         \"db_type\",\n         \"metadata_handler\"\n      ],\n      \"_timed_task\": [\n         \"self\",\n         \"cp_op_name\",\n         \"add_op\"\n      ],\n      \"blob_list\": [\n         \"self\"\n      ],\n      \"check_db_exists\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"collect_checkpoint_stats\": [\n         \"self\",\n         \"stats\"\n      ],\n      \"cp_accessible\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"get_resume_from_epoch_id\": [\n         \"self\",\n         \"user_epoch\"\n      ],\n      \"init\": [\n         \"self\",\n         \"nodes\",\n         \"retrieve_from_epoch\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"load\": [\n         \"self\",\n         \"epoch\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"load_blobs_from_checkpoint\": [\n         \"self\",\n         \"blob_names\",\n         \"epoch\"\n      ],\n      \"report_checkpoint_stats\": [\n         \"self\",\n         \"action_name\"\n      ],\n      \"save\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"set_params\": [\n         \"self\",\n         \"nodes\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"write_checkpoint_metadata\": [\n         \"self\",\n         \"epoch\"\n      ]\n   },\n   \"CheckpointTest\": {\n      \"testCheckpoint\": [\n         \"self\"\n      ]\n   },\n   \"Chi2\": {\n      \"__init__\": [\n         \"self\",\n         \"df\",\n         \"validate_args\"\n      ],\n      \"df\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ]\n   },\n   \"ChunkBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"chunks\",\n         \"device\"\n      ]\n   },\n   \"Cluster\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"add_node\": [\n         \"self\",\n         \"node\"\n      ],\n      \"node_kwargs\": [\n         \"self\"\n      ],\n      \"nodes\": [\n         \"self\"\n      ]\n   },\n   \"CodeTemplate\": {\n      \"__init__\": [\n         \"self\",\n         \"pattern\",\n         \"filename\"\n      ],\n      \"from_file\": [\n         \"filename\"\n      ],\n      \"substitute\": [\n         \"self\",\n         \"env\"\n      ]\n   },\n   \"CollectivesConcurrencyControl\": {\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"max_concurrent_context\",\n         \"param_init_net\",\n         \"rendezvous\"\n      ],\n      \"get_control_and_context\": [\n         \"self\",\n         \"control_output_blob\"\n      ]\n   },\n   \"CommTest\": {\n      \"_test_broadcast_coalesced\": [\n         \"self\",\n         \"process_group\",\n         \"device\"\n      ],\n      \"op_timeout_sec\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced_gloo_cpu\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced_gloo_cuda\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced_nccl\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"CompilationUnit\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"lang\",\n         \"_frames_up\"\n      ],\n      \"define\": [\n         \"self\",\n         \"lang\",\n         \"rcb\",\n         \"_frames_up\"\n      ]\n   },\n   \"CompiledRunnable\": {\n      \"__init__\": [\n         \"self\",\n         \"obj\",\n         \"session_class\"\n      ]\n   },\n   \"ComplexDoubleStorage\": {},\n   \"ComplexFloatStorage\": {},\n   \"ComposeTransform\": {\n      \"__call__\": [\n         \"self\",\n         \"x\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"parts\",\n         \"cache_size\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"bijective\": [\n         \"self\"\n      ],\n      \"codomain\": [\n         \"self\"\n      ],\n      \"domain\": [\n         \"self\"\n      ],\n      \"event_dim\": [\n         \"self\"\n      ],\n      \"inv\": [\n         \"self\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"sign\": [\n         \"self\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"CompositeReader\": {\n      \"__init__\": [\n         \"self\",\n         \"names\",\n         \"readers\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"reset\": [\n         \"self\",\n         \"net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"finish_net\"\n      ]\n   },\n   \"CompositeReaderBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"names\",\n         \"reader_builders\"\n      ],\n      \"new_reader\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"ComputeBucketAssignmentTest\": {\n      \"test_multi_limit_multi_dtype\": [\n         \"self\"\n      ],\n      \"test_multi_limit_single_dtype\": [\n         \"self\"\n      ],\n      \"test_single_limit_multi_dtype\": [\n         \"self\"\n      ],\n      \"test_single_limit_single_dtype\": [\n         \"self\"\n      ]\n   },\n   \"ComputeHistogramForBlobs\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs\",\n         \"logging_frequency\",\n         \"num_buckets\",\n         \"lower_bound\",\n         \"upper_bound\",\n         \"accumulate\"\n      ],\n      \"field_name_suffix\": [\n         \"self\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ]\n   },\n   \"ComputeHistogramForBlobsTest\": {\n      \"histogram\": [\n         \"self\",\n         \"X\",\n         \"lower_bound\",\n         \"upper_bound\",\n         \"num_buckets\"\n      ],\n      \"test_compute_histogram_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_histogram_for_blobs_modify_output_record\": [\n         \"self\"\n      ]\n   },\n   \"ComputeLoss\": {\n      \"Add\": [\n         \"self\"\n      ],\n      \"Compute\": [\n         \"self\"\n      ],\n      \"Reset\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"opts\",\n         \"blob_name\"\n      ]\n   },\n   \"ComputeNormForBlobs\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs\",\n         \"logging_frequency\",\n         \"p\",\n         \"compute_averaged_norm\",\n         \"row_index\"\n      ],\n      \"field_name_suffix\": [\n         \"self\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ]\n   },\n   \"ComputeNormForBlobsTest\": {\n      \"test_compute_averaged_norm_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_l1_averaged_norm_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_l1_norm_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_norm_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_norm_for_blobs_modify_output_record\": [\n         \"self\"\n      ],\n      \"test_compute_norm_for_blobs_no_print\": [\n         \"self\"\n      ],\n      \"test_compute_norm_row_index_for_blobs\": [\n         \"self\"\n      ]\n   },\n   \"ComputeStatisticsForBlobs\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs\",\n         \"logging_frequency\"\n      ],\n      \"field_name_suffix\": [\n         \"self\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ]\n   },\n   \"ComputeStatisticsForBlobsTest\": {\n      \"test_compute_statistics_for_blobs\": [\n         \"self\"\n      ],\n      \"test_compute_statistics_for_blobs_modify_output_record\": [\n         \"self\"\n      ]\n   },\n   \"ComputeTopKAccuracy\": {\n      \"Add\": [\n         \"self\"\n      ],\n      \"Compute\": [\n         \"self\"\n      ],\n      \"Reset\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"blob_name\",\n         \"opts\",\n         \"topk\"\n      ]\n   },\n   \"Concat\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"axis\",\n         \"add_axis\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"ConcatDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"datasets\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"cummulative_sizes\": [\n         \"self\"\n      ],\n      \"cumsum\": [\n         \"sequence\"\n      ]\n   },\n   \"ConcatNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"inputs\"\n      ]\n   },\n   \"ConcreteTypeStore\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"get_or_create_concrete_type\": [\n         \"self\",\n         \"nn_module\"\n      ]\n   },\n   \"Config\": {},\n   \"ConnectionWrapper\": {\n      \"__getattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"conn\"\n      ],\n      \"recv\": [\n         \"self\"\n      ],\n      \"send\": [\n         \"self\",\n         \"obj\"\n      ]\n   },\n   \"ConstMap\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"const_mapping\"\n      ]\n   },\n   \"ConstantNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"norm\"\n      ],\n      \"_run_after_optimizer\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"ConstantPad1d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\",\n         \"value\"\n      ]\n   },\n   \"ConstantPad2d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\",\n         \"value\"\n      ]\n   },\n   \"ConstantPad3d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\",\n         \"value\"\n      ]\n   },\n   \"ConstantWeight\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"weights\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Constraint\": {\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"ConstraintRegistry\": {\n      \"__call__\": [\n         \"self\",\n         \"constraint\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"register\": [\n         \"self\",\n         \"constraint\",\n         \"factory\"\n      ]\n   },\n   \"Container\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"ContextDecorator\": {\n      \"__call__\": [\n         \"self\",\n         \"func\"\n      ]\n   },\n   \"ContextProp\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"objtype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"getter\",\n         \"setter\"\n      ],\n      \"__set__\": [\n         \"self\",\n         \"obj\",\n         \"val\"\n      ]\n   },\n   \"ContinuousBernoulli\": {\n      \"__init__\": [\n         \"self\",\n         \"probs\",\n         \"logits\",\n         \"lims\",\n         \"validate_args\"\n      ],\n      \"_cont_bern_log_norm\": [\n         \"self\"\n      ],\n      \"_cut_probs\": [\n         \"self\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"_outside_unstable_region\": [\n         \"self\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"Conv\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dim\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_b\",\n         \"pad_l\",\n         \"pad_r\",\n         \"pad_t\",\n         \"order\",\n         \"kernel_init\",\n         \"bias_init\",\n         \"kernel_optim\",\n         \"bias_optim\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Conv1d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"bias\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"w\",\n         \"b\"\n      ],\n      \"weight\": [\n         \"self\"\n      ]\n   },\n   \"Conv1dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"L\",\n         \"device\"\n      ]\n   },\n   \"Conv2d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"bias\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"w\",\n         \"b\"\n      ],\n      \"weight\": [\n         \"self\"\n      ]\n   },\n   \"Conv2dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"H\",\n         \"W\",\n         \"G\",\n         \"pad\",\n         \"device\"\n      ]\n   },\n   \"Conv3d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"bias\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"w\",\n         \"b\"\n      ],\n      \"weight\": [\n         \"self\"\n      ]\n   },\n   \"Conv3dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"device\"\n      ]\n   },\n   \"ConvBNReLU\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"ConvBench\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"ConvBn2d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\",\n         \"eps\",\n         \"momentum\",\n         \"freeze_bn\",\n         \"qconfig\"\n      ]\n   },\n   \"ConvBn3d\": {\n      \"__init__\": [\n         \"self\",\n         \"conv\",\n         \"bn\"\n      ]\n   },\n   \"ConvBnModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ConvBnReLU2d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\",\n         \"eps\",\n         \"momentum\",\n         \"freeze_bn\",\n         \"qconfig\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\",\n         \"qconfig\"\n      ]\n   },\n   \"ConvBnReLU3d\": {\n      \"__init__\": [\n         \"self\",\n         \"conv\",\n         \"bn\",\n         \"relu\"\n      ]\n   },\n   \"ConvFusionTest\": {\n      \"test_convolution_affch_folding\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_bn_folding\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_grouped_sum_relu_fusion\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_relu_fusion\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_sum_fusion\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"sum_add\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_sum_relu_fusion\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"group\",\n         \"sum_add\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"ConvImplBench\": {\n      \"__init__\": [\n         \"self\",\n         \"case\",\n         \"mode\",\n         \"device\",\n         \"kernel_size\",\n         \"N\",\n         \"iC\",\n         \"H\",\n         \"W\",\n         \"oC\"\n      ],\n      \"compute_workload\": [\n         \"self\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ]\n   },\n   \"ConvModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ConvPackedParams\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"set_conv_params\": [\n         \"self\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"weight\",\n         \"bias\"\n      ]\n   },\n   \"ConvReLU2d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"ConvReLU3d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"ConvTest\": {\n      \"test_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"training_mode\",\n         \"group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_depthwise_convolution\": [\n         \"self\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_winograd_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"training_mode\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"ConvTranspose1d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"dilation\",\n         \"padding_mode\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"output_size\"\n      ]\n   },\n   \"ConvTranspose1dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"L\",\n         \"device\"\n      ]\n   },\n   \"ConvTranspose2d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"dilation\",\n         \"padding_mode\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"output_size\"\n      ]\n   },\n   \"ConvTranspose2dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"H\",\n         \"W\",\n         \"G\",\n         \"pad\",\n         \"device\"\n      ]\n   },\n   \"ConvTranspose3d\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"dilation\",\n         \"padding_mode\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"output_size\"\n      ]\n   },\n   \"ConvTranspose3dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"IC\",\n         \"OC\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"device\"\n      ]\n   },\n   \"ConvTransposeTest\": {\n      \"test_convolution_transpose_gradients\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"adj\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"training_mode\",\n         \"compute_dX\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"CopyOpsTest\": {\n      \"run_test_copy_gradient\": [\n         \"self\",\n         \"device_opt\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_copy_gradient_cpu\": [\n         \"self\"\n      ],\n      \"test_copy_gradient_gpu\": [\n         \"self\"\n      ],\n      \"test_copy_gradient_multiple_gpus\": [\n         \"self\"\n      ],\n      \"test_cpu2gpu_gpu2cpu_gradients\": [\n         \"self\"\n      ],\n      \"test_cpu2gpu_gpu2cpu_sparse_gradients\": [\n         \"self\"\n      ]\n   },\n   \"CopyTest\": {\n      \"_get_deep_device\": [\n         \"self\"\n      ],\n      \"test_copy_from_ideep\": [\n         \"self\"\n      ],\n      \"test_copy_from_ideep_fallthrough\": [\n         \"self\"\n      ],\n      \"test_copy_from_ideep_zero_dim\": [\n         \"self\"\n      ],\n      \"test_copy_to_ideep\": [\n         \"self\"\n      ],\n      \"test_copy_to_ideep_zero_dim\": [\n         \"self\"\n      ]\n   },\n   \"CosineAnnealingLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"T_max\",\n         \"eta_min\",\n         \"last_epoch\"\n      ],\n      \"_get_closed_form_lr\": [\n         \"self\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"CosineAnnealingWarmRestarts\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"T_0\",\n         \"T_mult\",\n         \"eta_min\",\n         \"last_epoch\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"epoch\"\n      ]\n   },\n   \"CosineEmbeddingLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input1\",\n         \"input2\",\n         \"target\"\n      ]\n   },\n   \"CosineSimilarity\": {\n      \"__init__\": [\n         \"self\",\n         \"dim\",\n         \"eps\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x1\",\n         \"x2\"\n      ]\n   },\n   \"CounterReader\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ]\n   },\n   \"CountingDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"i\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"n\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"CountingIterableDataset\": {\n      \"__init__\": [\n         \"self\",\n         \"n\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"CriterionTest\": {\n      \"__call__\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_do_extra_tests\": [\n         \"self\",\n         \"test_case\",\n         \"module\",\n         \"input\",\n         \"target\"\n      ],\n      \"_get_target\": [\n         \"self\"\n      ],\n      \"test_cuda\": [\n         \"self\",\n         \"test_case\"\n      ]\n   },\n   \"CrossEntropyLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"ignore_index\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"CrossMapLRN2d\": {\n      \"backward\": [\n         \"ctx\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"input\",\n         \"size\",\n         \"alpha\",\n         \"beta\",\n         \"k\"\n      ]\n   },\n   \"CudaCodeGenCreated\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"CudaCodeGenExecuted\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"CudaError\": {\n      \"__init__\": [\n         \"self\",\n         \"code\"\n      ]\n   },\n   \"CudaMemoryLeakCheck\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exec_type\",\n         \"exec_value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"testcase\",\n         \"name\"\n      ],\n      \"get_cuda_memory_usage\": []\n   },\n   \"CudaNonDefaultStream\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exec_type\",\n         \"exec_value\",\n         \"traceback\"\n      ]\n   },\n   \"CudaProfileOpsTest\": {\n      \"test_run\": [\n         \"self\"\n      ]\n   },\n   \"CudnnModule\": {\n      \"__init__\": [\n         \"self\",\n         \"m\",\n         \"name\"\n      ]\n   },\n   \"CustomError\": {},\n   \"CustomFromMask\": {\n      \"__init__\": [\n         \"self\",\n         \"mask\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\",\n         \"mask\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"CyclicLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"base_lr\",\n         \"max_lr\",\n         \"step_size_up\",\n         \"step_size_down\",\n         \"mode\",\n         \"gamma\",\n         \"scale_fn\",\n         \"scale_mode\",\n         \"cycle_momentum\",\n         \"base_momentum\",\n         \"max_momentum\",\n         \"last_epoch\"\n      ],\n      \"_exp_range_scale_fn\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_format_param\": [\n         \"self\",\n         \"name\",\n         \"optimizer\",\n         \"param\"\n      ],\n      \"_triangular2_scale_fn\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_triangular_scale_fn\": [\n         \"self\",\n         \"x\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"DBFileReader\": {\n      \"__init__\": [\n         \"self\",\n         \"db_path\",\n         \"db_type\",\n         \"name\",\n         \"batch_size\",\n         \"loop_over\",\n         \"field_names\"\n      ],\n      \"_extract_db_name_from_db_path\": [\n         \"self\"\n      ],\n      \"_feed_field_blobs_from_db_file\": [\n         \"self\",\n         \"net\"\n      ],\n      \"_init_field_blobs_as_empty\": [\n         \"self\",\n         \"init_net\"\n      ],\n      \"_init_name\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_init_reader_schema\": [\n         \"self\",\n         \"field_names\"\n      ],\n      \"read\": [\n         \"self\",\n         \"read_net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"finish_net\"\n      ]\n   },\n   \"DNNLowPAddOpTest\": {\n      \"test_dnnlowp_elementwise_add_broadcast\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_add_broadcast_axis\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_add_int\": [\n         \"self\",\n         \"N\",\n         \"is_empty\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPBatchMatMulOpTest\": {\n      \"test_dnnlowp_batch_matmul_int\": [\n         \"self\",\n         \"m\",\n         \"n\",\n         \"k\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_batch_matmul_int_constant_B\": [\n         \"self\",\n         \"m\",\n         \"n\",\n         \"k\",\n         \"C_1\",\n         \"C_2\",\n         \"A_quantized\",\n         \"B_quantized\",\n         \"out_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPBatchPermutationOpTest\": {\n      \"test_batch_permutation\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPChannelShuffleOpsTest\": {\n      \"test_channel_shuffle\": [\n         \"self\",\n         \"channels_per_group\",\n         \"groups\",\n         \"n\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_channel_shuffle_fast_path\": [\n         \"self\",\n         \"channels_per_group\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPConcatOpTest\": {\n      \"test_dnnlowp_concat_int\": [\n         \"self\",\n         \"dim1\",\n         \"dim2\",\n         \"axis\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPDequantizeOpTest\": {\n      \"test_dnnlowp_dequantize\": [\n         \"self\",\n         \"size\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPElementwiseLinearOpTest\": {\n      \"test_dnnlowp_elementwise_linear_int\": [\n         \"self\",\n         \"N\",\n         \"D\",\n         \"empty_batch\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPFullyConnectedAcc16OpTest\": {\n      \"test_dnnlowp_fully_connected_acc16_int\": [\n         \"self\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_fully_connected_acc16_outlier\": [\n         \"self\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"nbits_in_non_outlier\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"prepack_weight\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPFullyConnectedOpTest\": {\n      \"test_dnnlowp_fully_connected_int\": [\n         \"self\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"weight_quantized\",\n         \"prepack_weight\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"fuse_relu\",\n         \"output_packed_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPGatherOpTest\": {\n      \"test_dnnlowp_gather\": [\n         \"self\",\n         \"dim1\",\n         \"dim2\",\n         \"is_empty\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPLSTMUnitOpTest\": {\n      \"test_dnnlowp_lstm_unit\": [\n         \"self\",\n         \"N\",\n         \"D\",\n         \"forget_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPMulOpTest\": {\n      \"test_dnnlowp_elementwise_mul_broadcast\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_mul_broadcast_axis\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_mul_int\": [\n         \"self\",\n         \"N\",\n         \"is_empty\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpConvAcc16OpTest\": {\n      \"test_dnnlowp_conv_acc16_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"weight_quantized\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_conv_acc16_outlier\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"weight_quantized\",\n         \"prepack_weight\",\n         \"nbits_in_non_outlier\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpConvDepthWiseTest\": {\n      \"test_dnnlowp_depthwise_3x3_conv\": [\n         \"self\",\n         \"stride\",\n         \"size\",\n         \"group\",\n         \"batch_size\",\n         \"prepack_weight\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"quantize_groupwise\",\n         \"relu\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_depthwise_3x3x3_conv\": [\n         \"self\",\n         \"stride_0\",\n         \"stride_1\",\n         \"stride_2\",\n         \"size\",\n         \"group\",\n         \"batch_size\",\n         \"prepack_weight\",\n         \"fuse_relu\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"quantize_groupwise\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpConvTest\": {\n      \"_test_dnnlowp_nd_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernels\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"prepack_weight\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_conv1d_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernels\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"prepack_weight\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_conv3d_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"temporal_kernels\",\n         \"spatial_kernels\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"prepack_weight\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_conv_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"weight_quantized\",\n         \"prepack_weight\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_conv_relu_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"share_col_buffer\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpGroupNormTest\": {\n      \"test_dnnlowp_group_norm\": [\n         \"self\",\n         \"N\",\n         \"G\",\n         \"K\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"weight_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpPoolTest\": {\n      \"test_dnnlowp_average_pool\": [\n         \"self\",\n         \"ndim\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"in_quantized\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_max_pool\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"in_quantized\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpSpatialBNTest\": {\n      \"test_dnnlowp_spatial_bn_int\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"fuse_relu\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPOpSumOpTest\": {\n      \"test_dnnlowp_elementwise_sum_int\": [\n         \"self\",\n         \"N\",\n         \"M\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_sum_int_inplace\": [\n         \"self\",\n         \"N\",\n         \"M\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_sum_relu_int\": [\n         \"self\",\n         \"N\",\n         \"M\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dnnlowp_elementwise_sum_relu_int_inplace\": [\n         \"self\",\n         \"N\",\n         \"M\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPQuantizeOpTest\": {\n      \"test_dnnlowp_quantize\": [\n         \"self\",\n         \"size\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPReluOpTest\": {\n      \"test_dnnlowp_relu\": [\n         \"self\",\n         \"size\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPResizeNearest3DOpTest\": {\n      \"test_resize_nearest\": [\n         \"self\",\n         \"N\",\n         \"T\",\n         \"H\",\n         \"W\",\n         \"C\",\n         \"scale_t\",\n         \"scale_w\",\n         \"scale_h\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPResizeNearestOpTest\": {\n      \"test_resize_nearest\": [\n         \"self\",\n         \"N\",\n         \"H\",\n         \"W\",\n         \"C\",\n         \"scale_w\",\n         \"scale_h\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPSigmoidOpTest\": {\n      \"test_dnnlowp_sigmoid\": [\n         \"self\",\n         \"size\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DNNLowPTanhOpTest\": {\n      \"test_dnnlowp_tanh\": [\n         \"self\",\n         \"size\",\n         \"is_empty\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DataLoader\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"batch_size\",\n         \"shuffle\",\n         \"sampler\",\n         \"batch_sampler\",\n         \"num_workers\",\n         \"collate_fn\",\n         \"pin_memory\",\n         \"drop_last\",\n         \"timeout\",\n         \"worker_init_fn\",\n         \"multiprocessing_context\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"attr\",\n         \"val\"\n      ],\n      \"_auto_collation\": [\n         \"self\"\n      ],\n      \"_index_sampler\": [\n         \"self\"\n      ],\n      \"multiprocessing_context\": [\n         \"self\",\n         \"multiprocessing_context\"\n      ]\n   },\n   \"DataParallel\": {\n      \"__init__\": [\n         \"self\",\n         \"module\",\n         \"device_ids\",\n         \"output_device\",\n         \"dim\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"gather\": [\n         \"self\",\n         \"outputs\",\n         \"output_device\"\n      ],\n      \"parallel_apply\": [\n         \"self\",\n         \"replicas\",\n         \"inputs\",\n         \"kwargs\"\n      ],\n      \"replicate\": [\n         \"self\",\n         \"module\",\n         \"device_ids\"\n      ],\n      \"scatter\": [\n         \"self\",\n         \"inputs\",\n         \"kwargs\",\n         \"device_ids\"\n      ]\n   },\n   \"DataParallelModelTest\": {\n      \"_bn_check_op_level\": [\n         \"self\",\n         \"device_type\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"_test_multi_device_bn_net_lvl\": [\n         \"self\",\n         \"device_type\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"run_model\": [\n         \"self\",\n         \"devices\",\n         \"gpu\"\n      ],\n      \"run_test_locally\": [\n         \"self\",\n         \"fn\",\n         \"device_option\"\n      ],\n      \"test_checkpoint_params\": [\n         \"self\"\n      ],\n      \"test_device_scope_check\": [\n         \"self\"\n      ],\n      \"test_equiv\": [\n         \"self\"\n      ],\n      \"test_multi_device_bn_net_lvl_cpu\": [\n         \"self\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"test_multi_device_bn_net_lvl_gpu\": [\n         \"self\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"test_multi_device_bn_op_level_cpu\": [\n         \"self\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"test_multi_device_bn_op_level_gpu\": [\n         \"self\",\n         \"seed\",\n         \"batch_size\"\n      ],\n      \"test_net_conversion_and_append_net\": [\n         \"self\"\n      ],\n      \"test_net_transformer_function\": [\n         \"self\"\n      ],\n      \"test_pre_train_synchronization_barrier\": [\n         \"self\"\n      ],\n      \"test_synchronization_barrier\": [\n         \"self\"\n      ]\n   },\n   \"DataType\": {},\n   \"DataWorker\": {\n      \"__init__\": [\n         \"self\",\n         \"coordinator\",\n         \"worker_id\",\n         \"worker_fun\",\n         \"metrics\",\n         \"batch_size\",\n         \"batch_feeder\"\n      ],\n      \"finish\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"DataWorkersTest\": {\n      \"testInputOrder\": [\n         \"self\"\n      ],\n      \"testNonParallelModel\": [\n         \"self\"\n      ],\n      \"testRNNInput\": [\n         \"self\"\n      ]\n   },\n   \"Dataset\": {\n      \"__add__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"index\"\n      ]\n   },\n   \"DeQuantStub\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"DeQuantize\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"Xq\"\n      ],\n      \"from_float\": [\n         \"mod\"\n      ]\n   },\n   \"DebugMode\": {\n      \"run\": [\n         \"cls\",\n         \"func\"\n      ]\n   },\n   \"DeferredCudaCallError\": {},\n   \"Depthwise3x3ConvOpsTest\": {\n      \"test_convolution_gradients\": [\n         \"self\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DepthwiseConvBench\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"DerivedStateModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_pack\": [\n         \"self\"\n      ],\n      \"_unpack\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"DeterminationTest\": {\n      \"determined_tests\": [\n         \"cls\",\n         \"changed_files\"\n      ],\n      \"test_caffe2_file\": [\n         \"self\"\n      ],\n      \"test_config_change_only\": [\n         \"self\"\n      ],\n      \"test_cpp_file\": [\n         \"self\"\n      ],\n      \"test_new_folder\": [\n         \"self\"\n      ],\n      \"test_new_test_script\": [\n         \"self\"\n      ],\n      \"test_non_code_change\": [\n         \"self\"\n      ],\n      \"test_run_test\": [\n         \"self\"\n      ],\n      \"test_test_file\": [\n         \"self\"\n      ],\n      \"test_test_internal_file\": [\n         \"self\"\n      ],\n      \"test_torch_file\": [\n         \"self\"\n      ]\n   },\n   \"DeviceChecker\": {\n      \"CheckNet\": [\n         \"self\",\n         \"net\",\n         \"inputs\",\n         \"blobs_to_check\",\n         \"ignore\"\n      ],\n      \"CheckSimple\": [\n         \"self\",\n         \"op\",\n         \"inputs\",\n         \"outputs_to_check\",\n         \"input_device_options\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"threshold\",\n         \"device_options\"\n      ]\n   },\n   \"DeviceTypeTestBase\": {\n      \"_get_dtypes\": [\n         \"cls\",\n         \"test\"\n      ],\n      \"_get_precision_override\": [\n         \"self\",\n         \"test\",\n         \"dtype\"\n      ],\n      \"get_all_devices\": [\n         \"cls\"\n      ],\n      \"get_primary_device\": [\n         \"cls\"\n      ],\n      \"instantiate_test\": [\n         \"cls\",\n         \"name\",\n         \"test\"\n      ],\n      \"precision\": [\n         \"self\",\n         \"prec\"\n      ]\n   },\n   \"DiagBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dim\",\n         \"M\",\n         \"N\",\n         \"diagonal\",\n         \"out\",\n         \"device\"\n      ]\n   },\n   \"DiagonalTensor\": {\n      \"__array__\": [\n         \"self\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"N\",\n         \"value\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__torch_function__\": [\n         \"self\",\n         \"func\",\n         \"types\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"tensor\": [\n         \"self\"\n      ]\n   },\n   \"DictDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"ndx\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"Dirichlet\": {\n      \"__init__\": [\n         \"self\",\n         \"concentration\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"DisableCuDNN\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"DistAutogradTest\": {\n      \"_check_rpc_done\": [\n         \"self\",\n         \"rank_distance\"\n      ],\n      \"_complex_python_udf\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"_exec_func\": [\n         \"self\",\n         \"exec_mode\",\n         \"method\"\n      ],\n      \"_exec_func_with_dst\": [\n         \"self\",\n         \"dst\",\n         \"exec_mode\",\n         \"method\"\n      ],\n      \"_nested_python_udf\": [\n         \"t1\",\n         \"t2\",\n         \"dst\"\n      ],\n      \"_nested_rpc_call_backward_error\": [\n         \"t1\",\n         \"t2\",\n         \"dst\"\n      ],\n      \"_next_rank\": [\n         \"self\"\n      ],\n      \"_python_udf_with_backward_error\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"_run_test_backward_unused_send_function_in_thread\": [\n         \"self\"\n      ],\n      \"_test_backward_rref\": [\n         \"self\",\n         \"callee\",\n         \"rref_owner\"\n      ],\n      \"_test_backward_simple\": [\n         \"self\",\n         \"dst\"\n      ],\n      \"_test_grad_only_on_return_value\": [\n         \"self\",\n         \"exec_mode\"\n      ],\n      \"_test_graph\": [\n         \"self\",\n         \"fn\",\n         \"exec_mode\"\n      ],\n      \"_test_graph_for_py_nested_call\": [\n         \"self\",\n         \"exec_mode\"\n      ],\n      \"_test_graph_for_py_nested_call_itself\": [\n         \"self\",\n         \"exec_mode\"\n      ],\n      \"_test_no_graph_with_tensors_not_require_grad\": [\n         \"self\",\n         \"exec_mode\"\n      ],\n      \"_test_rpc_complex_args\": [\n         \"self\",\n         \"exec_mode\"\n      ],\n      \"_test_trainer_ps\": [\n         \"self\",\n         \"create_ref_fn\",\n         \"trainer_fn\"\n      ],\n      \"_verify_backwards\": [\n         \"self\",\n         \"exec_mode\",\n         \"tensors\",\n         \"context_id\",\n         \"local_grads\"\n      ],\n      \"_verify_backwards_remote\": [\n         \"self\",\n         \"tensors\",\n         \"context_id\",\n         \"local_grads\"\n      ],\n      \"_verify_graph_for_first_rpc_call\": [\n         \"self\",\n         \"send_function\",\n         \"recv_function\",\n         \"t1\",\n         \"t2\",\n         \"ret\"\n      ],\n      \"_verify_graph_for_nested_rpc_call\": [\n         \"self\",\n         \"ctx\"\n      ],\n      \"_verify_graph_for_rpc_call_exec\": [\n         \"self\",\n         \"send_function\"\n      ],\n      \"context_cleanup_test_helper\": [\n         \"self\",\n         \"rpc_args\",\n         \"func\",\n         \"nested\"\n      ],\n      \"test_autograd_context\": [\n         \"self\"\n      ],\n      \"test_backward_autograd_engine_error\": [\n         \"self\"\n      ],\n      \"test_backward_complex_python_udf\": [\n         \"self\"\n      ],\n      \"test_backward_different_dtypes\": [\n         \"self\"\n      ],\n      \"test_backward_different_tensor_dims\": [\n         \"self\"\n      ],\n      \"test_backward_invalid_args\": [\n         \"self\"\n      ],\n      \"test_backward_multiple_output_tensors\": [\n         \"self\"\n      ],\n      \"test_backward_multiple_roots\": [\n         \"self\"\n      ],\n      \"test_backward_multiple_round_trips\": [\n         \"self\"\n      ],\n      \"test_backward_no_grad_on_tensor\": [\n         \"self\"\n      ],\n      \"test_backward_node_failure\": [\n         \"self\"\n      ],\n      \"test_backward_node_failure_python_udf\": [\n         \"self\"\n      ],\n      \"test_backward_python_udf_error\": [\n         \"self\"\n      ],\n      \"test_backward_rref\": [\n         \"self\"\n      ],\n      \"test_backward_rref_multi\": [\n         \"self\"\n      ],\n      \"test_backward_rref_nested\": [\n         \"self\"\n      ],\n      \"test_backward_simple\": [\n         \"self\"\n      ],\n      \"test_backward_simple_python_udf\": [\n         \"self\"\n      ],\n      \"test_backward_simple_script_call\": [\n         \"self\"\n      ],\n      \"test_backward_simple_self\": [\n         \"self\"\n      ],\n      \"test_backward_unused_send_function\": [\n         \"self\"\n      ],\n      \"test_backward_unused_tensors\": [\n         \"self\"\n      ],\n      \"test_backward_without_context\": [\n         \"self\"\n      ],\n      \"test_backward_without_rpc\": [\n         \"self\"\n      ],\n      \"test_backwards_nested_python_udf\": [\n         \"self\"\n      ],\n      \"test_context_cleanup_nested_rpc\": [\n         \"self\"\n      ],\n      \"test_context_cleanup_no_tensors\": [\n         \"self\"\n      ],\n      \"test_context_cleanup_tensor_no_grad\": [\n         \"self\"\n      ],\n      \"test_context_cleanup_tensor_with_grad\": [\n         \"self\"\n      ],\n      \"test_dist_autograd_profiling\": [\n         \"self\"\n      ],\n      \"test_error_in_context\": [\n         \"self\"\n      ],\n      \"test_grad_only_on_return_value\": [\n         \"self\"\n      ],\n      \"test_grad_only_on_return_value_remote\": [\n         \"self\"\n      ],\n      \"test_graph_for_builtin_call\": [\n         \"self\"\n      ],\n      \"test_graph_for_builtin_remote_call\": [\n         \"self\"\n      ],\n      \"test_graph_for_py_nested_call\": [\n         \"self\"\n      ],\n      \"test_graph_for_py_nested_call_itself\": [\n         \"self\"\n      ],\n      \"test_graph_for_py_nested_remote_call\": [\n         \"self\"\n      ],\n      \"test_graph_for_py_nested_remote_call_itself\": [\n         \"self\"\n      ],\n      \"test_graph_for_python_call\": [\n         \"self\"\n      ],\n      \"test_graph_for_python_remote_call\": [\n         \"self\"\n      ],\n      \"test_nested_context\": [\n         \"self\"\n      ],\n      \"test_no_graph_with_tensors_not_require_grad\": [\n         \"self\"\n      ],\n      \"test_no_graph_with_tensors_not_require_grad_remote\": [\n         \"self\"\n      ],\n      \"test_remote_complex_args\": [\n         \"self\"\n      ],\n      \"test_rpc_complex_args\": [\n         \"self\"\n      ],\n      \"test_trainer_ps\": [\n         \"self\"\n      ],\n      \"test_trainer_ps_torchscript_functions\": [\n         \"self\"\n      ],\n      \"test_worker_ids_recorded\": [\n         \"self\"\n      ]\n   },\n   \"DistAutogradTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"DistOptimizerTest\": {\n      \"test_dist_optim\": [\n         \"self\"\n      ],\n      \"test_dist_optim_exception\": [\n         \"self\"\n      ],\n      \"test_dist_optim_exception_on_constructor\": [\n         \"self\"\n      ]\n   },\n   \"DistOptimizerTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"DistanceTest\": {\n      \"test_L1_distance\": [\n         \"self\",\n         \"n\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_L2_distance\": [\n         \"self\",\n         \"n\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cosine_similarity\": [\n         \"self\",\n         \"n\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dot_product\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DistributedDataParallel\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"module\",\n         \"device_ids\",\n         \"output_device\",\n         \"dim\",\n         \"broadcast_buffers\",\n         \"process_group\",\n         \"bucket_cap_mb\",\n         \"find_unused_parameters\",\n         \"check_reduction\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_check_default_group\": [\n         \"self\"\n      ],\n      \"_ddp_init_helper\": [\n         \"self\"\n      ],\n      \"_distributed_broadcast_coalesced\": [\n         \"self\",\n         \"tensors\",\n         \"buffer_size\"\n      ],\n      \"_passing_sync_batchnorm_handle\": [\n         \"self\",\n         \"module_copies\"\n      ],\n      \"_sync_params\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"gather\": [\n         \"self\",\n         \"outputs\",\n         \"output_device\"\n      ],\n      \"no_sync\": [\n         \"self\"\n      ],\n      \"parallel_apply\": [\n         \"self\",\n         \"replicas\",\n         \"inputs\",\n         \"kwargs\"\n      ],\n      \"scatter\": [\n         \"self\",\n         \"inputs\",\n         \"kwargs\",\n         \"device_ids\"\n      ],\n      \"train\": [\n         \"self\",\n         \"mode\"\n      ]\n   },\n   \"DistributedDataParallelSingleProcessTest\": {\n      \"_test_base\": [\n         \"self\",\n         \"net\",\n         \"inp\",\n         \"check_allclose\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_cpu\": [\n         \"self\"\n      ],\n      \"test_cuda\": [\n         \"self\"\n      ],\n      \"test_rnn\": [\n         \"self\"\n      ]\n   },\n   \"DistributedDataParallelTest\": {\n      \"_prepare_multi_device_module\": [\n         \"self\",\n         \"process_group\",\n         \"devices\",\n         \"device_ids\",\n         \"global_batch_size\"\n      ],\n      \"_prepare_single_device_module\": [\n         \"self\",\n         \"process_group\",\n         \"devices\",\n         \"device_ids\",\n         \"global_batch_size\"\n      ],\n      \"_test_ddp_with_process_group\": [\n         \"self\",\n         \"process_group\",\n         \"devices\",\n         \"device_ids\",\n         \"multi_device\"\n      ],\n      \"_test_gloo_backend\": [\n         \"self\",\n         \"devices\",\n         \"device_ids\",\n         \"multi_device\"\n      ],\n      \"_test_nccl_backend\": [\n         \"self\",\n         \"devices\",\n         \"device_ids\",\n         \"multi_device\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_accumulate_gradients_module\": [\n         \"self\"\n      ],\n      \"test_accumulate_gradients_no_sync\": [\n         \"self\"\n      ],\n      \"test_arbitrary_forward_return_value\": [\n         \"self\"\n      ],\n      \"test_ddp_multi_device_module_config\": [\n         \"self\"\n      ],\n      \"test_dist_broadcast_coalesced_gloo\": [\n         \"self\"\n      ],\n      \"test_dist_broadcast_coalesced_nccl\": [\n         \"self\"\n      ],\n      \"test_failure_recovery\": [\n         \"self\"\n      ],\n      \"test_find_unused_parameters_kwarg\": [\n         \"self\"\n      ],\n      \"test_fp16\": [\n         \"self\"\n      ],\n      \"test_global_local_unused_params_grad\": [\n         \"self\"\n      ],\n      \"test_gloo_backend_1gpu_module_device_ids_integer_list\": [\n         \"self\"\n      ],\n      \"test_gloo_backend_1gpu_module_device_ids_torch_device_list\": [\n         \"self\"\n      ],\n      \"test_gloo_backend_2gpu_module\": [\n         \"self\"\n      ],\n      \"test_gloo_backend_4gpu_module\": [\n         \"self\"\n      ],\n      \"test_gloo_backend_cpu_module\": [\n         \"self\"\n      ],\n      \"test_ignored_output\": [\n         \"self\"\n      ],\n      \"test_ignored_output_with_unused_parameters\": [\n         \"self\"\n      ],\n      \"test_multiple_outputs_multiple_backward\": [\n         \"self\"\n      ],\n      \"test_nccl_backend_1gpu_module_device_ids_integer_list\": [\n         \"self\"\n      ],\n      \"test_nccl_backend_1gpu_module_device_ids_torch_device_list\": [\n         \"self\"\n      ],\n      \"test_nccl_backend_2gpu_module\": [\n         \"self\"\n      ],\n      \"test_nccl_backend_4gpu_module\": [\n         \"self\"\n      ],\n      \"test_no_grad\": [\n         \"self\"\n      ],\n      \"test_queue_reduction\": [\n         \"self\"\n      ],\n      \"test_sparse_gradients\": [\n         \"self\"\n      ],\n      \"test_sync_params_no_buffers\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_sync_params_with_buffers\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_sync_reduction\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"DistributedOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer_class\",\n         \"params_rref\"\n      ],\n      \"step\": [\n         \"self\",\n         \"context_id\"\n      ]\n   },\n   \"DistributedSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"num_replicas\",\n         \"rank\",\n         \"shuffle\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"set_epoch\": [\n         \"self\",\n         \"epoch\"\n      ]\n   },\n   \"DistributedTest\": {\n      \"_test_bmuf_distributed\": [\n         \"self\",\n         \"cpu_device\",\n         \"nesterov\"\n      ],\n      \"test_bmuf_distributed\": [\n         \"self\",\n         \"cpu_device\",\n         \"nesterov\"\n      ]\n   },\n   \"Distribution\": {\n      \"__init__\": [\n         \"self\",\n         \"batch_shape\",\n         \"event_shape\",\n         \"validate_args\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_extended_shape\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"_get_checked_instance\": [\n         \"self\",\n         \"cls\",\n         \"_instance\"\n      ],\n      \"_validate_sample\": [\n         \"self\",\n         \"value\"\n      ],\n      \"arg_constraints\": [\n         \"self\"\n      ],\n      \"batch_shape\": [\n         \"self\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"event_shape\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"perplexity\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample_n\": [\n         \"self\",\n         \"n\"\n      ],\n      \"set_default_validate_args\": [\n         \"value\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"DoOpTest\": {\n      \"test_operator\": [\n         \"self\"\n      ],\n      \"test_reuse_workspace\": [\n         \"self\"\n      ]\n   },\n   \"DocGenerator\": {\n      \"__init__\": [\n         \"self\",\n         \"formatter\",\n         \"uploader\"\n      ],\n      \"create_body\": [\n         \"self\"\n      ],\n      \"update\": [\n         \"self\"\n      ]\n   },\n   \"DocUploader\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"upload\": [\n         \"self\",\n         \"text\"\n      ]\n   },\n   \"DoubleGpuNet\": {\n      \"__init__\": [\n         \"self\",\n         \"gpus\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"DoubleStorage\": {},\n   \"Dropout\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Dropout2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Dropout3d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"DropoutCell\": {\n      \"__init__\": [\n         \"self\",\n         \"internal_cell\",\n         \"dropout_ratio\",\n         \"use_cudnn\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"_apply_dropout\": [\n         \"self\",\n         \"model\",\n         \"output\"\n      ],\n      \"_prepare_output\": [\n         \"self\",\n         \"model\",\n         \"states\"\n      ],\n      \"_prepare_output_sequence\": [\n         \"self\",\n         \"model\",\n         \"state_outputs\"\n      ]\n   },\n   \"DropoutTest\": {\n      \"test_dropout_is_test\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"ratio\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dropout_ratio0\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"output_mask\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"DummyContext\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"DummyNet\": {\n      \"__init__\": [\n         \"self\",\n         \"num_classes\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"DummyObserver\": {\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"DummyOptions\": {},\n   \"DumpUnpickler\": {\n      \"dump\": [\n         \"cls\",\n         \"in_stream\",\n         \"out_stream\"\n      ],\n      \"find_class\": [\n         \"self\",\n         \"module\",\n         \"name\"\n      ],\n      \"persistent_load\": [\n         \"self\",\n         \"pid\"\n      ]\n   },\n   \"ELU\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"EditHistory\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"adjust_lineno\": [\n         \"self\",\n         \"fn\",\n         \"lineno\"\n      ],\n      \"record_edit\": [\n         \"self\",\n         \"fn\",\n         \"lineno\",\n         \"delta\"\n      ],\n      \"seen_file\": [\n         \"self\",\n         \"fn\"\n      ]\n   },\n   \"ElasticNet\": {\n      \"__init__\": [\n         \"self\",\n         \"l1\",\n         \"l2\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"ElasticNetL1NormTrimmed\": {\n      \"__init__\": [\n         \"self\",\n         \"l1\",\n         \"l2\",\n         \"k\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"ElementBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"N\"\n      ],\n      \"_eval\": [\n         \"self\",\n         \"d1\",\n         \"d2\",\n         \"d3\",\n         \"d4\",\n         \"binary_op\",\n         \"unary_op\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"d1\",\n         \"d2\",\n         \"d3\",\n         \"d4\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [\n         \"cls\"\n      ],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"ElementwiseSumTest\": {\n      \"test_elementwise_sum\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inputs\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_sum_fallback\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inputs\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_int8_elementwise_sum\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inputs\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Embedding\": {\n      \"__init__\": [\n         \"self\",\n         \"num_embeddings\",\n         \"embedding_dim\",\n         \"padding_idx\",\n         \"max_norm\",\n         \"norm_type\",\n         \"scale_grad_by_freq\",\n         \"sparse\",\n         \"_weight\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_pretrained\": [\n         \"cls\",\n         \"embeddings\",\n         \"freeze\",\n         \"padding_idx\",\n         \"max_norm\",\n         \"norm_type\",\n         \"scale_grad_by_freq\",\n         \"sparse\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"EmbeddingBag\": {\n      \"__init__\": [\n         \"self\",\n         \"num_embeddings\",\n         \"embedding_dim\",\n         \"max_norm\",\n         \"norm_type\",\n         \"scale_grad_by_freq\",\n         \"mode\",\n         \"sparse\",\n         \"_weight\",\n         \"include_last_offset\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"offsets\",\n         \"per_sample_weights\"\n      ],\n      \"from_pretrained\": [\n         \"cls\",\n         \"embeddings\",\n         \"freeze\",\n         \"max_norm\",\n         \"norm_type\",\n         \"scale_grad_by_freq\",\n         \"mode\",\n         \"sparse\",\n         \"include_last_offset\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"EmbeddingBagBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"embeddingbags\",\n         \"dim\",\n         \"mode\",\n         \"input_size\",\n         \"offset\",\n         \"sparse\",\n         \"device\"\n      ]\n   },\n   \"EnforceUnique\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"see\": [\n         \"self\"\n      ]\n   },\n   \"Error\": {\n      \"__init__\": [\n         \"self\",\n         \"lines\"\n      ]\n   },\n   \"ErrorDataset\": {\n      \"__init__\": [\n         \"self\",\n         \"size\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"ErrorIterableDataset\": {\n      \"__iter__\": [\n         \"self\"\n      ]\n   },\n   \"ErrorTrackingProcess\": {\n      \"__init__\": [\n         \"self\",\n         \"disable_stderr\"\n      ],\n      \"exception\": [\n         \"self\"\n      ],\n      \"print_traces_of_all_threads\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\"\n      ],\n      \"send_signal\": [\n         \"self\",\n         \"signum\",\n         \"ignore_ESRCH\"\n      ]\n   },\n   \"Errors\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"msg\",\n         \"rtol\",\n         \"atol\"\n      ],\n      \"addErr\": [\n         \"self\",\n         \"msg\"\n      ],\n      \"addErrCtxt\": [\n         \"self\",\n         \"msg\"\n      ],\n      \"almostEqualAndThen\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\",\n         \"k\"\n      ],\n      \"checkAlmostEqual\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\"\n      ],\n      \"checkEqual\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\"\n      ],\n      \"equalAndThen\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\",\n         \"k\"\n      ],\n      \"fail\": [\n         \"self\"\n      ],\n      \"failIfErrs\": [\n         \"self\"\n      ],\n      \"failWith\": [\n         \"self\",\n         \"msg\"\n      ],\n      \"multiLineEqualAndThen\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\",\n         \"k\"\n      ],\n      \"recover\": [\n         \"self\"\n      ],\n      \"requireAlmostEqual\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\"\n      ],\n      \"requireEqual\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\"\n      ],\n      \"requireMultiLineEqual\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"msg\"\n      ]\n   },\n   \"EvalEnv\": {\n      \"__getitem__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"rcb\"\n      ]\n   },\n   \"EvalModeForLoadedModule\": {\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"Event\": {\n      \"__new__\": [\n         \"cls\",\n         \"enable_timing\",\n         \"blocking\",\n         \"interprocess\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_as_parameter_\": [\n         \"self\"\n      ],\n      \"elapsed_time\": [\n         \"self\",\n         \"end_event\"\n      ],\n      \"from_ipc_handle\": [\n         \"cls\",\n         \"device\",\n         \"handle\"\n      ],\n      \"ipc_handle\": [\n         \"self\"\n      ],\n      \"query\": [\n         \"self\"\n      ],\n      \"record\": [\n         \"self\",\n         \"stream\"\n      ],\n      \"synchronize\": [\n         \"self\"\n      ],\n      \"wait\": [\n         \"self\",\n         \"stream\"\n      ]\n   },\n   \"EventList\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"cpu_children_populated\": [\n         \"self\"\n      ],\n      \"export_chrome_trace\": [\n         \"self\",\n         \"path\"\n      ],\n      \"key_averages\": [\n         \"self\",\n         \"group_by_input_shapes\"\n      ],\n      \"populate_cpu_children\": [\n         \"self\"\n      ],\n      \"self_cpu_time_total\": [\n         \"self\"\n      ],\n      \"table\": [\n         \"self\",\n         \"sort_by\",\n         \"row_limit\",\n         \"header\"\n      ],\n      \"total_average\": [\n         \"self\"\n      ]\n   },\n   \"ExceptionWrapper\": {\n      \"__init__\": [\n         \"self\",\n         \"exc_info\",\n         \"where\"\n      ],\n      \"reraise\": [\n         \"self\"\n      ]\n   },\n   \"ExecMode\": {},\n   \"ExecutionCounter\": {\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"elapsed_value\": [\n         \"self\"\n      ],\n      \"try_get_trigger_value\": [\n         \"self\"\n      ]\n   },\n   \"ExecutionStats\": {\n      \"__init__\": [\n         \"self\",\n         \"c_stats\",\n         \"benchmark_config\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"iters_per_second\": [\n         \"self\"\n      ],\n      \"latency_avg_ms\": [\n         \"self\"\n      ],\n      \"num_iters\": [\n         \"self\"\n      ],\n      \"total_time_seconds\": [\n         \"self\"\n      ]\n   },\n   \"ExecutionStep\": {\n      \"AddNet\": [\n         \"self\",\n         \"net\"\n      ],\n      \"AddSubstep\": [\n         \"self\",\n         \"substep\"\n      ],\n      \"HasNets\": [\n         \"self\"\n      ],\n      \"HasSubsteps\": [\n         \"self\"\n      ],\n      \"Name\": [\n         \"self\"\n      ],\n      \"Nets\": [\n         \"self\"\n      ],\n      \"Proto\": [\n         \"self\"\n      ],\n      \"RunEveryMillis\": [\n         \"self\",\n         \"interval\"\n      ],\n      \"SetConcurrentSubsteps\": [\n         \"self\",\n         \"concurrent_substeps\"\n      ],\n      \"SetCreateWorkspace\": [\n         \"self\",\n         \"create_workspace\"\n      ],\n      \"SetIter\": [\n         \"self\",\n         \"num_iter\"\n      ],\n      \"SetNumConcurrentInstances\": [\n         \"self\",\n         \"num_concurrent_instances\"\n      ],\n      \"SetOnlyOnce\": [\n         \"self\",\n         \"only_once\"\n      ],\n      \"SetReportNet\": [\n         \"self\",\n         \"report_net\",\n         \"report_interval\"\n      ],\n      \"SetShouldStopBlob\": [\n         \"self\",\n         \"should_stop_blob\"\n      ],\n      \"Substeps\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"nets\",\n         \"num_iter\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_assert_can_mutate\": [\n         \"self\"\n      ],\n      \"_get_next_step_name\": [\n         \"basename\"\n      ],\n      \"_notify_is_used\": [\n         \"self\"\n      ],\n      \"create_from_proto\": [\n         \"cls\",\n         \"step_proto\",\n         \"net_obj_dict\",\n         \"net_proto_dict\"\n      ],\n      \"get_all_attributes\": [\n         \"self\",\n         \"name\"\n      ],\n      \"get_net\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"ExecutorCPUConvNetTest\": {\n      \"test_executor\": [\n         \"self\",\n         \"executor\",\n         \"model_name\",\n         \"batch_size\",\n         \"num_workers\"\n      ]\n   },\n   \"ExecutorFailingOpTest\": {\n      \"test_failing_op\": [\n         \"self\"\n      ]\n   },\n   \"ExecutorGPUResNetTest\": {\n      \"test_executor\": [\n         \"self\",\n         \"executor\",\n         \"num_workers\"\n      ]\n   },\n   \"ExecutorTestBase\": {\n      \"compare_executors\": [\n         \"self\",\n         \"model\",\n         \"ref_executor\",\n         \"test_executor\",\n         \"model_run_func\"\n      ]\n   },\n   \"ExpRelaxedCategorical\": {\n      \"__init__\": [\n         \"self\",\n         \"temperature\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ]\n   },\n   \"ExpTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"ExpandDimsSqueezeTest\": {\n      \"test_expand_dims\": [\n         \"self\",\n         \"squeeze_dims\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_expand_dims_fallback\": [\n         \"self\",\n         \"squeeze_dims\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_squeeze\": [\n         \"self\",\n         \"squeeze_dims\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_squeeze_fallback\": [\n         \"self\",\n         \"squeeze_dims\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Exponential\": {\n      \"__init__\": [\n         \"self\",\n         \"rate\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"ExponentialFamily\": {\n      \"_log_normalizer\": [\n         \"self\"\n      ],\n      \"_mean_carrier_measure\": [\n         \"self\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ]\n   },\n   \"ExponentialLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"gamma\",\n         \"last_epoch\"\n      ],\n      \"_get_closed_form_lr\": [\n         \"self\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"ExportTypes\": {},\n   \"ExprBuilder\": {\n      \"build_Attribute\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_BinOp\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_BoolOp\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Call\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Compare\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Constant\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Dict\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Ellipsis\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_IfExp\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_JoinedStr\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_List\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_ListComp\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Name\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_NameConstant\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Num\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Starred\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Str\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Subscript\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_Tuple\": [\n         \"ctx\",\n         \"expr\"\n      ],\n      \"build_UnaryOp\": [\n         \"ctx\",\n         \"expr\"\n      ]\n   },\n   \"ExtensionVersioner\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"bump_version_if_changed\": [\n         \"self\",\n         \"name\",\n         \"source_files\",\n         \"build_arguments\",\n         \"build_directory\",\n         \"with_cuda\"\n      ],\n      \"get_version\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"ExternalInitializer\": {\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"init_net\",\n         \"shape\"\n      ]\n   },\n   \"ExternalLogger\": {\n      \"log\": [\n         \"self\",\n         \"log_dict\"\n      ],\n      \"set_runtime_args\": [\n         \"self\",\n         \"runtime_args\"\n      ]\n   },\n   \"FC\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"weight_init\",\n         \"bias_init\",\n         \"weight_optim\",\n         \"bias_optim\",\n         \"name\",\n         \"weight_reg\",\n         \"bias_reg\",\n         \"clip_param\",\n         \"max_fc_size\",\n         \"axis\",\n         \"transposed\",\n         \"uniform_weight_init_scale_numerator\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"params\",\n         \"version\"\n      ],\n      \"_insert_fc_ops\": [\n         \"self\",\n         \"net\",\n         \"params\",\n         \"outputs\",\n         \"version\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"calculate_fc_output_dims\": [\n         \"max_fc_size\",\n         \"input_dim\",\n         \"output_dim\"\n      ],\n      \"get_fp16_compatible_parameters\": [\n         \"self\"\n      ],\n      \"param_blobs\": [\n         \"self\"\n      ]\n   },\n   \"FCTest\": {\n      \"test_clip\": [\n         \"self\"\n      ],\n      \"test_fc_exercise\": [\n         \"self\"\n      ],\n      \"test_fc_num0\": [\n         \"self\",\n         \"seed\"\n      ],\n      \"test_fc_numeric_cases\": [\n         \"self\"\n      ]\n   },\n   \"FCWithBootstrap\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"num_bootstrap\",\n         \"weight_init\",\n         \"bias_init\",\n         \"weight_optim\",\n         \"bias_optim\",\n         \"name\",\n         \"weight_reg\",\n         \"bias_reg\",\n         \"clip_param\",\n         \"axis\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"features\",\n         \"iteration\",\n         \"params\",\n         \"version\"\n      ],\n      \"_bootstrap_ops\": [\n         \"self\",\n         \"net\",\n         \"copied_cur_layer\",\n         \"indices\",\n         \"iteration\"\n      ],\n      \"_generate_bootstrapped_indices\": [\n         \"self\",\n         \"net\",\n         \"copied_cur_layer\",\n         \"iteration\"\n      ],\n      \"_insert_fc_ops\": [\n         \"self\",\n         \"net\",\n         \"features\",\n         \"params\",\n         \"outputs\",\n         \"version\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"get_fp16_compatible_parameters\": [\n         \"self\"\n      ],\n      \"param_blobs\": [\n         \"self\"\n      ]\n   },\n   \"FCWithoutBias\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"weight_init\",\n         \"weight_optim\",\n         \"name\",\n         \"uniform_weight_init_scale_numerator\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"params\"\n      ],\n      \"param_blobs\": [\n         \"self\"\n      ]\n   },\n   \"FP16SgdOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"base_learning_rate\",\n         \"momentum\",\n         \"policy\",\n         \"nesterov\",\n         \"weight_decay\",\n         \"sparse_dedup_aggregator\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\",\n         \"fp32_update\"\n      ]\n   },\n   \"FailingOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"params\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"FakeClass\": {\n      \"__call__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"module\",\n         \"name\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"fake_new\": [\n         \"self\"\n      ]\n   },\n   \"FakeObject\": {\n      \"__init__\": [\n         \"self\",\n         \"module\",\n         \"name\",\n         \"args\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"pp_format\": [\n         \"printer\",\n         \"obj\",\n         \"stream\",\n         \"indent\",\n         \"allowance\",\n         \"context\",\n         \"level\"\n      ]\n   },\n   \"FakeQuantize\": {\n      \"__init__\": [\n         \"self\",\n         \"observer\",\n         \"quant_min\",\n         \"quant_max\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"disable_fake_quant\": [\n         \"self\"\n      ],\n      \"disable_observer\": [\n         \"self\"\n      ],\n      \"enable_fake_quant\": [\n         \"self\",\n         \"enabled\"\n      ],\n      \"enable_observer\": [\n         \"self\",\n         \"enabled\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"X\"\n      ]\n   },\n   \"FakeQuantizeBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"C\",\n         \"M\",\n         \"N\"\n      ]\n   },\n   \"FaultyAgentDistAutogradTest\": {\n      \"context_cleanup_test_helper\": [\n         \"self\",\n         \"rpc_args\",\n         \"func\"\n      ],\n      \"test_context_cleanup_tensor_with_grad\": [\n         \"self\"\n      ],\n      \"test_verify_backend_options\": [\n         \"self\"\n      ]\n   },\n   \"FaultyAgentDistAutogradTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"FaultyAgentRpcTest\": {\n      \"test_check_failed_messages\": [\n         \"self\"\n      ],\n      \"test_custom_faulty_messages\": [\n         \"self\"\n      ],\n      \"test_custom_messages_to_delay\": [\n         \"self\"\n      ],\n      \"test_no_faulty_messages\": [\n         \"self\"\n      ],\n      \"test_rpc_builtin_timeout\": [\n         \"self\"\n      ],\n      \"test_rpc_script_timeout\": [\n         \"self\"\n      ],\n      \"test_verify_backend_options\": [\n         \"self\"\n      ]\n   },\n   \"FaultyAgentRpcTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"FaultyRpcAgentTestFixture\": {\n      \"default_messages_to_delay\": [\n         \"self\"\n      ],\n      \"num_fail_sends\": [\n         \"self\"\n      ],\n      \"retryable_message_types\": [\n         \"self\"\n      ],\n      \"rpc_backend\": [\n         \"self\"\n      ]\n   },\n   \"FcTest\": {\n      \"test_fc_2_dims\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_fc_4_dims\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_fc_4_dims_src\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_fc_with_axis\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"axis\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_fc_with_axis_w\": [\n         \"self\",\n         \"n\",\n         \"o\",\n         \"i\",\n         \"h\",\n         \"w\",\n         \"axis_w\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_int8_fc_4_dims\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"FeatureAlphaDropout\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"FeatureSparseToDense\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"input_specs\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"get_accessed_features\": [\n         \"self\"\n      ],\n      \"get_metadata\": [\n         \"self\"\n      ]\n   },\n   \"Field\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"children\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_child_base_id\": [\n         \"self\",\n         \"child_index\"\n      ],\n      \"_pprint_impl\": [\n         \"self\",\n         \"indent\",\n         \"str_buffer\"\n      ],\n      \"_set_parent\": [\n         \"self\",\n         \"parent\",\n         \"relative_id\"\n      ],\n      \"all_scalars\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\",\n         \"keep_blobs\"\n      ],\n      \"clone_schema\": [\n         \"self\"\n      ],\n      \"field_blobs\": [\n         \"self\"\n      ],\n      \"field_metadata\": [\n         \"self\"\n      ],\n      \"field_names\": [\n         \"self\"\n      ],\n      \"field_types\": [\n         \"self\"\n      ],\n      \"has_blobs\": [\n         \"self\"\n      ],\n      \"slice\": [\n         \"self\"\n      ]\n   },\n   \"FileBaton\": {\n      \"__init__\": [\n         \"self\",\n         \"lock_file_path\",\n         \"wait_seconds\"\n      ],\n      \"release\": [\n         \"self\"\n      ],\n      \"try_acquire\": [\n         \"self\"\n      ],\n      \"wait\": [\n         \"self\"\n      ]\n   },\n   \"FileManager\": {\n      \"__init__\": [\n         \"self\",\n         \"install_dir\"\n      ],\n      \"_write_if_changed\": [\n         \"self\",\n         \"filename\",\n         \"contents\"\n      ],\n      \"check_all_files_written\": [\n         \"self\"\n      ],\n      \"will_write\": [\n         \"self\",\n         \"filename\"\n      ],\n      \"write\": [\n         \"self\",\n         \"filename\",\n         \"s\",\n         \"env\"\n      ],\n      \"write_outputs\": [\n         \"self\",\n         \"filename\"\n      ]\n   },\n   \"FileSetup\": {\n      \"shutdown\": [\n         \"self\"\n      ]\n   },\n   \"FileStoreTest\": {\n      \"_create_store\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"FileWriter\": {\n      \"__init__\": [\n         \"self\",\n         \"log_dir\",\n         \"max_queue\",\n         \"flush_secs\",\n         \"filename_suffix\"\n      ],\n      \"add_event\": [\n         \"self\",\n         \"event\",\n         \"step\",\n         \"walltime\"\n      ],\n      \"add_graph\": [\n         \"self\",\n         \"graph_profile\",\n         \"walltime\"\n      ],\n      \"add_onnx_graph\": [\n         \"self\",\n         \"graph\",\n         \"walltime\"\n      ],\n      \"add_summary\": [\n         \"self\",\n         \"summary\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"close\": [\n         \"self\"\n      ],\n      \"flush\": [\n         \"self\"\n      ],\n      \"get_logdir\": [\n         \"self\"\n      ],\n      \"reopen\": [\n         \"self\"\n      ]\n   },\n   \"FilelikeMock\": {\n      \"__init__\": [\n         \"self\",\n         \"data\",\n         \"has_fileno\",\n         \"has_readinto\"\n      ],\n      \"fileno_opt\": [\n         \"self\"\n      ],\n      \"readinto_opt\": [\n         \"self\",\n         \"view\"\n      ],\n      \"was_called\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"Fill_Benchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"device\",\n         \"dtype\"\n      ]\n   },\n   \"FinalCls\": {\n      \"__getitem__\": [\n         \"self\",\n         \"types\"\n      ]\n   },\n   \"FinalInstance\": {\n      \"__init__\": [\n         \"self\",\n         \"types\"\n      ]\n   },\n   \"Fire\": {\n      \"__init__\": [\n         \"self\",\n         \"inplanes\",\n         \"squeeze_planes\",\n         \"expand1x1_planes\",\n         \"expand3x3_planes\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"FisherSnedecor\": {\n      \"__init__\": [\n         \"self\",\n         \"df1\",\n         \"df2\",\n         \"validate_args\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"Flatten\": {\n      \"__init__\": [\n         \"self\",\n         \"start_dim\",\n         \"end_dim\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"FloatFunctional\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_relu\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"cat\": [\n         \"self\",\n         \"x\",\n         \"dim\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"mul\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"mul_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"FloatStorage\": {},\n   \"Fold\": {\n      \"__init__\": [\n         \"self\",\n         \"output_size\",\n         \"kernel_size\",\n         \"dilation\",\n         \"padding\",\n         \"stride\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Foo\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"FooCollector\": {\n      \"__init__\": [\n         \"self\",\n         \"ml\"\n      ],\n      \"foo_sum\": [\n         \"self\"\n      ]\n   },\n   \"FooModule\": {\n      \"ten\": [\n         \"self\"\n      ]\n   },\n   \"FooSameName\": {\n      \"__init__\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"FooToPickle\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"FooUniqueName\": {\n      \"__init__\": [\n         \"self\",\n         \"y\"\n      ]\n   },\n   \"ForkTest\": {},\n   \"FormattedTimesMixin\": {\n      \"cpu_time\": [\n         \"self\"\n      ],\n      \"cuda_time\": [\n         \"self\"\n      ]\n   },\n   \"Formatter\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"addBreak\": [\n         \"self\"\n      ],\n      \"addCode\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addCodeLink\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addEmphasis\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addHeader\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addLine\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addLinebreak\": [\n         \"self\"\n      ],\n      \"addLink\": [\n         \"self\",\n         \"text\",\n         \"url\"\n      ],\n      \"addList\": [\n         \"self\",\n         \"textList\"\n      ],\n      \"addRaw\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addTable\": [\n         \"self\",\n         \"table\"\n      ],\n      \"clone\": [\n         \"self\"\n      ],\n      \"dump\": [\n         \"self\"\n      ],\n      \"parseAndAdd\": [\n         \"self\",\n         \"text\"\n      ]\n   },\n   \"FractionalMaxPool2d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"FractionalMaxPool3d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"FrontendError\": {\n      \"__init__\": [\n         \"self\",\n         \"source_range\",\n         \"msg\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ]\n   },\n   \"FrontendTypeError\": {},\n   \"FtrlOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"beta\",\n         \"lambda1\",\n         \"lambda2\",\n         \"sparse_dedup_aggregator\",\n         \"engine\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"FullyConnectedFP16Test\": {\n      \"test_fully_connected\": [\n         \"self\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"empty_batch\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"FuncModule\": {\n      \"__init__\": [\n         \"self\",\n         \"f\",\n         \"params\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"Function\": {\n      \"__call__\": [\n         \"self\"\n      ],\n      \"backward\": [\n         \"ctx\"\n      ],\n      \"forward\": [\n         \"ctx\"\n      ]\n   },\n   \"FunctionEvent\": {\n      \"__init__\": [\n         \"self\",\n         \"id\",\n         \"name\",\n         \"thread\",\n         \"cpu_start\",\n         \"cpu_end\",\n         \"input_shapes\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"append_cpu_child\": [\n         \"self\",\n         \"child\"\n      ],\n      \"append_kernel\": [\n         \"self\",\n         \"name\",\n         \"device\",\n         \"start\",\n         \"end\"\n      ],\n      \"cpu_time_total\": [\n         \"self\"\n      ],\n      \"cuda_time_total\": [\n         \"self\"\n      ],\n      \"key\": [\n         \"self\"\n      ],\n      \"self_cpu_time_total\": [\n         \"self\"\n      ]\n   },\n   \"FunctionEventAvg\": {\n      \"__iadd__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"other\",\n         \"group_by_input_shapes\"\n      ]\n   },\n   \"FunctionMeta\": {\n      \"__init__\": [\n         \"cls\",\n         \"name\",\n         \"bases\",\n         \"attrs\"\n      ]\n   },\n   \"FunctionModifiers\": {},\n   \"Functional\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_names_or_num\",\n         \"function\",\n         \"name\",\n         \"output_dtypes\",\n         \"tags\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Future\": {\n      \"__init__\": [\n         \"self\",\n         \"types\"\n      ]\n   },\n   \"GELU\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"GFtrlOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"beta\",\n         \"lambda1\",\n         \"lambda2\",\n         \"sparse_dedup_aggregator\",\n         \"engine\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"GHMarkdown\": {\n      \"addDocHeader\": [\n         \"self\"\n      ],\n      \"addHeader\": [\n         \"self\",\n         \"text\",\n         \"h\"\n      ],\n      \"addTable\": [\n         \"self\",\n         \"table\",\n         \"noTitle\"\n      ],\n      \"addTableHTML\": [\n         \"self\",\n         \"table\",\n         \"noTitle\"\n      ]\n   },\n   \"GHOpDocGenerator\": {\n      \"createBody\": [\n         \"self\"\n      ],\n      \"getOperatorDoc\": [\n         \"self\",\n         \"name\",\n         \"schema\",\n         \"priority\"\n      ],\n      \"getOperatorEngine\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"GHOpDocUploader\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"upload\": [\n         \"self\",\n         \"content_body\"\n      ]\n   },\n   \"GHOperatorDoc\": {\n      \"generateCodeLink\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateSchema\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"getInfo\": [\n         \"self\",\n         \"formatter\",\n         \"name\",\n         \"impl\"\n      ]\n   },\n   \"GHOperatorEngine\": {\n      \"generateDoc\": [\n         \"self\",\n         \"formatter\"\n      ]\n   },\n   \"GLU\": {\n      \"__init__\": [\n         \"self\",\n         \"dim\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"GRU\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"GRUCell\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"bias\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"GRUCellTest\": {\n      \"gru_base\": [\n         \"self\",\n         \"create_rnn\",\n         \"ref\",\n         \"outputs_with_grads\",\n         \"input_tensor\",\n         \"fwd_only\",\n         \"drop_states\",\n         \"linear_before_reset\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gru_main\": [\n         \"self\",\n         \"seed\"\n      ],\n      \"test_gru_unit_op\": [\n         \"self\",\n         \"seed\",\n         \"input_tensor\",\n         \"fwd_only\",\n         \"drop_states\",\n         \"sequence_lengths\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Gamma\": {\n      \"__init__\": [\n         \"self\",\n         \"concentration\",\n         \"rate\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"Gather\": {\n      \"backward\": [\n         \"ctx\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"target_device\",\n         \"dim\"\n      ]\n   },\n   \"GatherBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"dim\",\n         \"device\"\n      ]\n   },\n   \"GatherRecord\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\"\n      ],\n      \"_dispatch\": [\n         \"self\",\n         \"net\",\n         \"record\",\n         \"lengths_blob\",\n         \"output_record\"\n      ],\n      \"_gather_list\": [\n         \"self\",\n         \"net\",\n         \"record\",\n         \"lengths_blob\",\n         \"output_record\"\n      ],\n      \"_gather_scalar\": [\n         \"self\",\n         \"net\",\n         \"record\",\n         \"lengths_blob\",\n         \"output_record\"\n      ],\n      \"_gather_struct\": [\n         \"self\",\n         \"net\",\n         \"record\",\n         \"lengths_blob\",\n         \"output_record\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"GeneratedFileCleaner\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"keep_intermediates\"\n      ],\n      \"makedirs\": [\n         \"self\",\n         \"dn\",\n         \"exist_ok\"\n      ],\n      \"open\": [\n         \"self\",\n         \"fn\"\n      ]\n   },\n   \"Geometric\": {\n      \"__init__\": [\n         \"self\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"GetEntryFromBlobs\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs\",\n         \"logging_frequency\",\n         \"i1\",\n         \"i2\"\n      ],\n      \"field_name_suffix\": [\n         \"self\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ]\n   },\n   \"GetEntryFromBlobsTest\": {\n      \"test_get_entry_from_blobs\": [\n         \"self\"\n      ],\n      \"test_get_entry_from_blobs_modify_output_record\": [\n         \"self\"\n      ]\n   },\n   \"GlobalCoordinator\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"get_queue\": [\n         \"self\",\n         \"queue_name\",\n         \"max_buffered_batches\"\n      ],\n      \"reset_data_input\": [\n         \"self\",\n         \"namescope\",\n         \"name\",\n         \"net\",\n         \"batch_size\"\n      ]\n   },\n   \"GlobalWorkerCoordinator\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"coordinator\"\n      ],\n      \"get_new_worker_id\": [\n         \"self\"\n      ],\n      \"get_worker_ids\": [\n         \"self\"\n      ],\n      \"register_shutdown_handler\": [\n         \"self\"\n      ],\n      \"start\": [\n         \"self\"\n      ],\n      \"stop\": [\n         \"self\"\n      ],\n      \"stop_coordinator\": [\n         \"self\",\n         \"worker_name\"\n      ]\n   },\n   \"GradScaler\": {\n      \"__init__\": [\n         \"self\",\n         \"init_scale\",\n         \"growth_factor\",\n         \"backoff_factor\",\n         \"growth_interval\",\n         \"enabled\"\n      ],\n      \"_check_inf_per_device\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"_check_scale_growth_tracker\": [\n         \"self\",\n         \"funcname\"\n      ],\n      \"_found_inf_per_device\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"_get_growth_tracker\": [\n         \"self\"\n      ],\n      \"_get_scale_async\": [\n         \"self\"\n      ],\n      \"_lazy_init_scale_growth_tracker\": [\n         \"self\",\n         \"dev\"\n      ],\n      \"_unscale_grads_\": [\n         \"self\",\n         \"optimizer\",\n         \"inv_scale\",\n         \"found_inf\",\n         \"allow_fp16\"\n      ],\n      \"get_backoff_factor\": [\n         \"self\"\n      ],\n      \"get_growth_factor\": [\n         \"self\"\n      ],\n      \"get_growth_interval\": [\n         \"self\"\n      ],\n      \"get_scale\": [\n         \"self\"\n      ],\n      \"is_enabled\": [\n         \"self\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"scale\": [\n         \"self\",\n         \"outputs\"\n      ],\n      \"set_backoff_factor\": [\n         \"self\",\n         \"new_factor\"\n      ],\n      \"set_growth_factor\": [\n         \"self\",\n         \"new_factor\"\n      ],\n      \"set_growth_interval\": [\n         \"self\",\n         \"new_interval\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"unscale_\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"update\": [\n         \"self\",\n         \"new_scale\"\n      ]\n   },\n   \"GradientChecker\": {\n      \"CheckSimple\": [\n         \"self\",\n         \"op\",\n         \"inputs\",\n         \"input_to_check\",\n         \"outputs_with_grads\",\n         \"grad_ops\",\n         \"input_device_options\",\n         \"ensure_outputs_are_inferred\"\n      ],\n      \"GetLossAndGrad\": [\n         \"self\",\n         \"op\",\n         \"grad_ops\",\n         \"inputs\",\n         \"input_names\",\n         \"input_to_check\",\n         \"grad_name\",\n         \"outputs_with_grads\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"stepsize\",\n         \"threshold\",\n         \"device_option\",\n         \"workspace_name\",\n         \"input_device_options\"\n      ],\n      \"_assertInferTensorChecks\": [\n         \"self\",\n         \"op\",\n         \"grad_ops\"\n      ]\n   },\n   \"GradientClipping\": {\n      \"__init__\": [\n         \"self\",\n         \"grad_clip_method\",\n         \"clip_norm_type\",\n         \"clip_threshold\",\n         \"use_parameter_norm\",\n         \"compute_norm_ratio\",\n         \"clip_max\",\n         \"clip_min\",\n         \"blobs_to_include\",\n         \"blobs_to_exclude\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ]\n   },\n   \"GradientClippingTest\": {\n      \"test_gradient_clipping_by_norm\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_norm_compute_norm_ratio\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_norm_excluding_blobs\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_norm_including_blobs\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_norm_l1_norm\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_norm_using_param_norm\": [\n         \"self\"\n      ],\n      \"test_gradient_clipping_by_value\": [\n         \"self\"\n      ]\n   },\n   \"GradientRegistry\": {\n      \"GetBackwardPass\": [\n         \"cls\",\n         \"operators\",\n         \"ys\",\n         \"ys_generate_gradient\"\n      ],\n      \"GetGradientForOp\": [\n         \"cls\",\n         \"op\",\n         \"g_output\"\n      ],\n      \"RegisterGradient\": [\n         \"cls\",\n         \"op_type\"\n      ],\n      \"_GetGradientForOpCC\": [\n         \"cls\",\n         \"op_def\",\n         \"g_output\"\n      ]\n   },\n   \"GraphPy\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"append\": [\n         \"self\",\n         \"x\"\n      ],\n      \"find_common_root\": [\n         \"self\"\n      ],\n      \"populate_namespace_from_OP_to_IO\": [\n         \"self\"\n      ],\n      \"printall\": [\n         \"self\"\n      ],\n      \"to_proto\": [\n         \"self\"\n      ]\n   },\n   \"GroupL1Norm\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\",\n         \"groups\",\n         \"stabilizing_val\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"GroupMember\": {},\n   \"GroupNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"num_groups\",\n         \"num_channels\",\n         \"eps\",\n         \"affine\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"GroupNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\",\n         \"num_groups\"\n      ]\n   },\n   \"GroupWiseDNNLowPOpConvAcc16OpTest\": {\n      \"test_groupwise_dnnlowp_conv_acc16_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"share_col_buffer\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_groupwise_dnnlowp_conv_acc16_outlier\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"prepack_weight\",\n         \"nbits_in_non_outlier\",\n         \"share_col_buffer\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"GroupWiseDNNLowPOpConvTest\": {\n      \"test_groupwise_dnnlowp_conv_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"prepack_weight\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_groupwise_dnnlowp_conv_relu_int\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Gumbel\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"HalfCauchy\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"prob\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"scale\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"HalfNormal\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"prob\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"scale\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"HalfStorage\": {},\n   \"Hardshrink\": {\n      \"__init__\": [\n         \"self\",\n         \"lambd\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Hardsigmoid\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"HardsigmoidBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"Hardswish\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"mod\"\n      ]\n   },\n   \"HardswishBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"Hardtanh\": {\n      \"__init__\": [\n         \"self\",\n         \"min_val\",\n         \"max_val\",\n         \"inplace\",\n         \"min_value\",\n         \"max_value\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"HelperWrapper\": {\n      \"Register\": [\n         \"self\",\n         \"helper\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"helper_name\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"wrapped\"\n      ],\n      \"has_helper\": [\n         \"self\",\n         \"helper_or_helper_name\"\n      ]\n   },\n   \"HingeEmbeddingLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"HistogramObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"bins\",\n         \"upsample_rate\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"_adjust_min_max\": [\n         \"self\",\n         \"combined_min\",\n         \"combined_max\",\n         \"upsample_rate\"\n      ],\n      \"_combine_histograms\": [\n         \"self\",\n         \"orig_hist\",\n         \"new_hist\",\n         \"upsample_rate\",\n         \"downsample_rate\",\n         \"start_idx\",\n         \"Nbins\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_non_linear_param_search\": [\n         \"self\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x_orig\"\n      ]\n   },\n   \"HomotopyWeight\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"min_weight\",\n         \"max_weight\",\n         \"half_life\",\n         \"quad_life\",\n         \"atomic_iter\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"create_atomic_iter\": [\n         \"self\"\n      ],\n      \"solve_inv_lr_params\": [\n         \"self\",\n         \"half_life\",\n         \"quad_life\"\n      ],\n      \"update_weight\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"HypothesisTestCase\": {\n      \"_assertGradReferenceChecks\": [\n         \"self\",\n         \"op\",\n         \"inputs\",\n         \"ref_outputs\",\n         \"output_to_grad\",\n         \"grad_reference\",\n         \"threshold\"\n      ],\n      \"_assertInferTensorChecks\": [\n         \"self\",\n         \"name\",\n         \"shapes\",\n         \"types\",\n         \"output\",\n         \"ensure_output_is_inferred\"\n      ],\n      \"assertDeviceChecks\": [\n         \"self\",\n         \"device_options\",\n         \"op\",\n         \"inputs\",\n         \"outputs_to_check\",\n         \"input_device_options\",\n         \"threshold\"\n      ],\n      \"assertGradientChecks\": [\n         \"self\",\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"outputs_to_check\",\n         \"outputs_with_grads\",\n         \"grad_ops\",\n         \"threshold\",\n         \"stepsize\",\n         \"input_device_options\",\n         \"ensure_outputs_are_inferred\"\n      ],\n      \"assertReferenceChecks\": [\n         \"self\",\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"reference\",\n         \"input_device_options\",\n         \"threshold\",\n         \"output_to_grad\",\n         \"grad_reference\",\n         \"atol\",\n         \"outputs_to_check\",\n         \"ensure_outputs_are_inferred\"\n      ],\n      \"assertRunOpRaises\": [\n         \"self\",\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"input_device_options\",\n         \"exception\",\n         \"regexp\"\n      ],\n      \"assertValidationChecks\": [\n         \"self\",\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"validator\",\n         \"input_device_options\",\n         \"as_kwargs\",\n         \"init_net\"\n      ]\n   },\n   \"IR\": {\n      \"AppendSparseGenerators\": [\n         \"self\",\n         \"sparse_generators\"\n      ],\n      \"BuildGradientGenerators\": [\n         \"self\",\n         \"fwd_op_idx\",\n         \"gradient_ops\",\n         \"g_output\",\n         \"g_input\"\n      ],\n      \"CheckGradientOperatorInput\": [\n         \"self\",\n         \"grad_op_input\",\n         \"g_output\",\n         \"fwd_op_idx\",\n         \"locally_generated_blobs\"\n      ],\n      \"DoGradientAccumulation\": [\n         \"self\",\n         \"fwd_op_idx\"\n      ],\n      \"GetBackwardPass\": [\n         \"self\",\n         \"ys\"\n      ],\n      \"Play\": [\n         \"self\",\n         \"op\"\n      ],\n      \"SanityCheck\": [\n         \"self\",\n         \"operators\"\n      ],\n      \"_AppendAutoGradGenerator\": [\n         \"self\",\n         \"y\",\n         \"grad\",\n         \"autograd_op\"\n      ],\n      \"_CheckSumOpsConflict\": [\n         \"self\",\n         \"out_base_name\",\n         \"g\"\n      ],\n      \"_DisambiguateGradOpOutput\": [\n         \"self\",\n         \"grad_op\",\n         \"idx\",\n         \"cnt\"\n      ],\n      \"_GenerateGradientsForForwardOp\": [\n         \"self\",\n         \"forward_op_idx\",\n         \"input_to_grad\"\n      ],\n      \"_GetInitGradients\": [\n         \"self\",\n         \"ys\"\n      ],\n      \"_GetSumOpOutputName\": [\n         \"self\",\n         \"generator\",\n         \"input_name\"\n      ],\n      \"_MakeDenseSumOps\": [\n         \"self\",\n         \"generators\",\n         \"out_base_name\"\n      ],\n      \"_MakeSparseSumOps\": [\n         \"self\",\n         \"generators\",\n         \"out_base_name\"\n      ],\n      \"_MakeSumOps\": [\n         \"self\",\n         \"input_name\",\n         \"input_version\"\n      ],\n      \"_SetSumOpsDeviceOption\": [\n         \"self\",\n         \"sum_ops\",\n         \"generators\"\n      ],\n      \"_VerifyGradientGenerators\": [\n         \"self\",\n         \"generator\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"operators\"\n      ]\n   },\n   \"Identity\": {\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"Independent\": {\n      \"__init__\": [\n         \"self\",\n         \"base_distribution\",\n         \"reinterpreted_batch_ndims\",\n         \"validate_args\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"has_enumerate_support\": [\n         \"self\"\n      ],\n      \"has_rsample\": [\n         \"self\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"InflatableArg\": {},\n   \"Initializer\": {\n      \"__init__\": [\n         \"self\",\n         \"operator_name\"\n      ],\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"init_net\",\n         \"shape\"\n      ],\n      \"update\": [\n         \"self\",\n         \"operator_name\",\n         \"kwargs\"\n      ]\n   },\n   \"InitializerTest\": {\n      \"test_fc_external_initializer\": [\n         \"self\"\n      ],\n      \"test_fc_fp16_initializer\": [\n         \"self\"\n      ],\n      \"test_fc_initializer\": [\n         \"self\"\n      ]\n   },\n   \"InnerModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"InplaceFunction\": {\n      \"__init__\": [\n         \"self\",\n         \"inplace\"\n      ]\n   },\n   \"InputError\": {\n      \"__init__\": [\n         \"self\",\n         \"message\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ]\n   },\n   \"InputVariableMixin\": {\n      \"_get_input\": [\n         \"self\"\n      ]\n   },\n   \"InstanceNorm1d\": {\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"InstanceNorm2d\": {\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"InstanceNorm3d\": {\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"InstanceNormBench\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"is_supported\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"InstanceNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\"\n      ]\n   },\n   \"InstantiationContext\": {},\n   \"IntStorage\": {},\n   \"Interval\": {\n      \"__init__\": [\n         \"self\",\n         \"start\",\n         \"end\"\n      ],\n      \"elapsed_us\": [\n         \"self\"\n      ]\n   },\n   \"IterableDataset\": {\n      \"__add__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ]\n   },\n   \"JitDistAutogradTest\": {\n      \"test_get_gradients\": [\n         \"self\"\n      ],\n      \"test_jit_fork_within_context\": [\n         \"self\"\n      ],\n      \"test_restore_context_after_swtich_to_jit_thread\": [\n         \"self\"\n      ]\n   },\n   \"JitDistAutogradTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"JitRpcAsyncOpTest\": {\n      \"test_all_kwargs_are_populated_by_defaults\": [\n         \"self\"\n      ],\n      \"test_args_and_kwargs_contain_different_types\": [\n         \"self\"\n      ],\n      \"test_args_kwargs_are_neither_passed\": [\n         \"self\"\n      ],\n      \"test_call_python_function_remotely_from_script_not_supported\": [\n         \"self\"\n      ],\n      \"test_call_script_function_that_not_exists_remotely_from_script\": [\n         \"self\"\n      ],\n      \"test_call_script_function_that_raises_remotely_from_script\": [\n         \"self\"\n      ],\n      \"test_kwargs_in_the_front_can_be_specified_by_extra_args\": [\n         \"self\"\n      ],\n      \"test_kwargs_not_passed\": [\n         \"self\"\n      ],\n      \"test_less_than_needed_args_are_specified\": [\n         \"self\"\n      ],\n      \"test_more_than_needed_args_are_specified\": [\n         \"self\"\n      ],\n      \"test_no_kwargs_are_populated_by_defaults\": [\n         \"self\"\n      ],\n      \"test_some_kwargs_are_populated_by_defaults\": [\n         \"self\"\n      ],\n      \"test_unexepected_kwarg_is_specified\": [\n         \"self\"\n      ]\n   },\n   \"JitRpcTest\": {\n      \"_create_rref\": [\n         \"self\"\n      ],\n      \"test_async_script_throw\": [\n         \"self\"\n      ],\n      \"test_async_script_udf\": [\n         \"self\"\n      ],\n      \"test_call_fork_in_jit_with_profiling\": [\n         \"self\"\n      ],\n      \"test_call_rpc_with_profiling\": [\n         \"self\"\n      ],\n      \"test_my_script_module_with_rrefs\": [\n         \"self\"\n      ],\n      \"test_python_future_with_jit\": [\n         \"self\"\n      ],\n      \"test_record_function_jit_end_callbacks_with_fork\": [\n         \"self\"\n      ],\n      \"test_remote_script_module\": [\n         \"self\"\n      ],\n      \"test_remote_script_throw\": [\n         \"self\"\n      ],\n      \"test_remote_script_udf\": [\n         \"self\"\n      ],\n      \"test_rref_as_arg_and_return\": [\n         \"self\"\n      ],\n      \"test_rref_jit_pickle_not_supported\": [\n         \"self\"\n      ],\n      \"test_rref_python_annotation\": [\n         \"self\"\n      ],\n      \"test_torchscript_function\": [\n         \"self\"\n      ],\n      \"test_torchscript_function_exception\": [\n         \"self\"\n      ],\n      \"test_torchscript_functions_not_supported\": [\n         \"self\"\n      ],\n      \"test_user_rrefs_confirmed\": [\n         \"self\"\n      ],\n      \"test_user_rrefs_confirmed_remote\": [\n         \"self\"\n      ]\n   },\n   \"JitRpcTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"JitTestCase\": {},\n   \"Job\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"init_group\",\n         \"epoch_group\",\n         \"download_group\",\n         \"exit_group\",\n         \"stop_conditions\",\n         \"nodes_to_checkpoint\"\n      ],\n      \"add_stop_condition\": [\n         \"self\",\n         \"output\"\n      ],\n      \"compile\": [\n         \"self\",\n         \"session_class\"\n      ],\n      \"nodes_to_checkpoint\": [\n         \"self\"\n      ]\n   },\n   \"JobRunner\": {\n      \"__init__\": [\n         \"self\",\n         \"job\",\n         \"checkpoint_manager\",\n         \"resume_from_epoch\",\n         \"upload_task_group_builder\"\n      ],\n      \"load_blobs_from_checkpoints\": [\n         \"self\",\n         \"blob_names\",\n         \"epoch\",\n         \"session\"\n      ],\n      \"save_checkpoints\": [\n         \"self\",\n         \"epoch\",\n         \"session\"\n      ],\n      \"train\": [\n         \"self\",\n         \"session\"\n      ]\n   },\n   \"KLDivLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\",\n         \"log_target\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"KeyErrorMessage\": {\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"L0ApproxNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\",\n         \"alpha\",\n         \"budget\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"L1Loss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"L1Norm\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"L1NormTrimmed\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\",\n         \"k\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"L1Unstructured\": {\n      \"__init__\": [\n         \"self\",\n         \"amount\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\",\n         \"amount\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"L2Norm\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"LBFGS\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"max_iter\",\n         \"max_eval\",\n         \"tolerance_grad\",\n         \"tolerance_change\",\n         \"history_size\",\n         \"line_search_fn\"\n      ],\n      \"_add_grad\": [\n         \"self\",\n         \"step_size\",\n         \"update\"\n      ],\n      \"_clone_param\": [\n         \"self\"\n      ],\n      \"_directional_evaluate\": [\n         \"self\",\n         \"closure\",\n         \"x\",\n         \"t\",\n         \"d\"\n      ],\n      \"_gather_flat_grad\": [\n         \"self\"\n      ],\n      \"_numel\": [\n         \"self\"\n      ],\n      \"_set_param\": [\n         \"self\",\n         \"params_data\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"LLVMCodeGenCreated\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"LLVMCodeGenExecuted\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"LOBPCG\": {\n      \"__init__\": [\n         \"self\",\n         \"A\",\n         \"B\",\n         \"X\",\n         \"iK\",\n         \"iparams\",\n         \"fparams\",\n         \"bparams\",\n         \"method\",\n         \"tracker\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_get_ortho\": [\n         \"self\",\n         \"U\",\n         \"V\"\n      ],\n      \"_get_rayleigh_ritz_transform\": [\n         \"self\",\n         \"S\"\n      ],\n      \"_get_svqb\": [\n         \"self\",\n         \"U\",\n         \"drop\",\n         \"tau\"\n      ],\n      \"_update_basic\": [\n         \"self\"\n      ],\n      \"_update_ortho\": [\n         \"self\"\n      ],\n      \"call_tracker\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\"\n      ],\n      \"stop_iteration\": [\n         \"self\"\n      ],\n      \"update\": [\n         \"self\"\n      ],\n      \"update_converged_count\": [\n         \"self\"\n      ],\n      \"update_residual\": [\n         \"self\"\n      ]\n   },\n   \"LPPool1d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"LPPool2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"LRModificationTestBase\": {\n      \"_gradient_ratio_reference\": [\n         \"self\",\n         \"model\",\n         \"params\",\n         \"max_gradient_norm\"\n      ],\n      \"test_global_norm_based_gradient_clipping\": [\n         \"self\"\n      ],\n      \"test_lr_injection\": [\n         \"self\"\n      ]\n   },\n   \"LRNTest\": {\n      \"test_LRN\": [\n         \"self\",\n         \"input_channels\",\n         \"batch_size\",\n         \"im_size\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"LSTM\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"check_forward_args\": [\n         \"self\",\n         \"input\",\n         \"hidden\",\n         \"batch_sizes\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_impl\": [\n         \"self\",\n         \"input\",\n         \"hx\",\n         \"batch_sizes\",\n         \"max_batch_size\",\n         \"sorted_indices\"\n      ],\n      \"forward_packed\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_tensor\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"permute_hidden\": [\n         \"self\",\n         \"hx\",\n         \"permutation\"\n      ]\n   },\n   \"LSTMBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"I\",\n         \"H\",\n         \"NL\",\n         \"B\",\n         \"D\",\n         \"dtype\"\n      ]\n   },\n   \"LSTMCell\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"bias\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"LSTMDynamicModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"LSTMInitializer\": {\n      \"__init__\": [\n         \"self\",\n         \"hidden_size\"\n      ],\n      \"create_states\": [\n         \"self\",\n         \"model\"\n      ]\n   },\n   \"LSTMLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"cell\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"state\"\n      ]\n   },\n   \"LSTMWithAttentionCell\": {\n      \"__init__\": [\n         \"self\",\n         \"encoder_output_dim\",\n         \"encoder_outputs\",\n         \"encoder_lengths\",\n         \"decoder_input_dim\",\n         \"decoder_state_dim\",\n         \"name\",\n         \"attention_type\",\n         \"weighted_encoder_outputs\",\n         \"forget_bias\",\n         \"lstm_memory_optimization\",\n         \"attention_memory_optimization\",\n         \"forward_only\"\n      ]\n   },\n   \"LSTMWithAttentionDecoder\": {\n      \"__init__\": [\n         \"self\",\n         \"encoder_outputs\",\n         \"encoder_output_dim\",\n         \"encoder_lengths\",\n         \"vocab_size\",\n         \"attention_type\",\n         \"embedding_size\",\n         \"decoder_num_units\",\n         \"decoder_cells\",\n         \"residual_output_layers\",\n         \"name\",\n         \"weighted_encoder_outputs\"\n      ],\n      \"_get_attention_type\": [\n         \"self\",\n         \"attention_type_as_string\"\n      ],\n      \"apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\"\n      ],\n      \"apply_over_sequence\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"seq_lengths\",\n         \"initial_states\"\n      ],\n      \"get_attention_weights\": [\n         \"self\"\n      ],\n      \"get_output_dim\": [\n         \"self\"\n      ],\n      \"get_outputs_with_grads\": [\n         \"self\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ],\n      \"scope\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"LabelSmooth\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"label\",\n         \"smooth_matrix\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_for_binary_prob_label\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_for_categorical_label\": [\n         \"self\",\n         \"net\"\n      ],\n      \"set_dim\": [\n         \"self\",\n         \"smooth_matrix\"\n      ],\n      \"set_smooth_matrix\": [\n         \"self\",\n         \"smooth_matrix\"\n      ]\n   },\n   \"LambdaLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"lr_lambda\",\n         \"last_epoch\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ]\n   },\n   \"LambdaLRTestObject\": {\n      \"__call__\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"Laplace\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"LastNWindowCollector\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"num_to_collect\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"LayerModelHelper\": {\n      \"NoOptim\": [\n         \"self\"\n      ],\n      \"_GetOne\": [\n         \"self\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"layer\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"input_feature_schema\",\n         \"trainer_extra_schema\",\n         \"keep_blobs\",\n         \"use_attribution\"\n      ],\n      \"_add_global_constants\": [\n         \"self\",\n         \"init_net\"\n      ],\n      \"_get_global_constant_initializer_op\": [\n         \"blob_name\",\n         \"array\",\n         \"dtype\",\n         \"initializer\"\n      ],\n      \"_init_global_constants\": [\n         \"self\"\n      ],\n      \"_validate_param_optim\": [\n         \"self\",\n         \"param_name\",\n         \"optim\"\n      ],\n      \"_validate_param_shape\": [\n         \"self\",\n         \"param_name\",\n         \"shape\"\n      ],\n      \"add_ad_hoc_plot_blob\": [\n         \"self\",\n         \"blob\",\n         \"dtype\"\n      ],\n      \"add_final_net_modifiers\": [\n         \"self\",\n         \"modifier\"\n      ],\n      \"add_global_constant\": [\n         \"self\",\n         \"name\",\n         \"array\",\n         \"dtype\",\n         \"initializer\"\n      ],\n      \"add_layer\": [\n         \"self\",\n         \"layer\"\n      ],\n      \"add_loss\": [\n         \"self\",\n         \"loss\",\n         \"name\"\n      ],\n      \"add_metric_field\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ],\n      \"add_output_schema\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ],\n      \"add_post_grad_net_modifiers\": [\n         \"self\",\n         \"modifier\"\n      ],\n      \"add_prediction\": [\n         \"self\",\n         \"prediction\",\n         \"weight\"\n      ],\n      \"add_trainer_extra_schema\": [\n         \"self\",\n         \"trainer_extra_schema\"\n      ],\n      \"apply_final_net_modifiers\": [\n         \"self\",\n         \"trainer_net\",\n         \"trainer_init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ],\n      \"apply_optimizers\": [\n         \"self\",\n         \"train_net\",\n         \"train_init_net\",\n         \"grad_map\",\n         \"blob_to_device\"\n      ],\n      \"apply_post_grad_net_modifiers\": [\n         \"self\",\n         \"trainer_net\",\n         \"trainer_init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ],\n      \"apply_regularizers_after_optimizer\": [\n         \"self\",\n         \"train_net\",\n         \"train_init_net\",\n         \"grad_map\",\n         \"blob_to_device\"\n      ],\n      \"apply_regularizers_on_loss\": [\n         \"self\",\n         \"train_net\",\n         \"train_init_net\",\n         \"blob_to_device\"\n      ],\n      \"apply_seed\": [\n         \"self\",\n         \"net\"\n      ],\n      \"breakdown_map\": [\n         \"self\",\n         \"breakdown_map\"\n      ],\n      \"clear_output_schema\": [\n         \"self\"\n      ],\n      \"create_init_net\": [\n         \"self\",\n         \"name\"\n      ],\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"shape\",\n         \"initializer\",\n         \"optimizer\",\n         \"ps_param\",\n         \"regularizer\"\n      ],\n      \"default_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"filter_metrics_schema\": [\n         \"self\",\n         \"white_set\"\n      ],\n      \"get_parameter_blobs\": [\n         \"self\"\n      ],\n      \"has_loss\": [\n         \"self\"\n      ],\n      \"input_feature_schema\": [\n         \"self\"\n      ],\n      \"layers\": [\n         \"self\"\n      ],\n      \"loss\": [\n         \"self\",\n         \"loss\"\n      ],\n      \"maybe_add_global_constant\": [\n         \"self\",\n         \"name\"\n      ],\n      \"metrics_schema\": [\n         \"self\"\n      ],\n      \"next_layer_name\": [\n         \"self\",\n         \"prefix\"\n      ],\n      \"output_schema\": [\n         \"self\",\n         \"schema\"\n      ],\n      \"prediction\": [\n         \"self\"\n      ],\n      \"preproc_output_schema\": [\n         \"self\",\n         \"schema\"\n      ],\n      \"seed\": [\n         \"self\"\n      ],\n      \"sequence_seed\": [\n         \"self\"\n      ],\n      \"set_initialize_params\": [\n         \"self\",\n         \"initialize_params\"\n      ],\n      \"store_seed\": [\n         \"self\",\n         \"seed\",\n         \"sequence_seed\"\n      ],\n      \"trainer_extra_schema\": [\n         \"self\"\n      ],\n      \"transfer_learning_blob_name_mappings\": [\n         \"self\",\n         \"blob_name_mappings\"\n      ]\n   },\n   \"LayerNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"normalized_shape\",\n         \"weight\",\n         \"bias\",\n         \"scale\",\n         \"zero_point\",\n         \"eps\",\n         \"elementwise_affine\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"LayerNormBench\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"LayerNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\"\n      ]\n   },\n   \"LayerNormLSTMCell\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"forget_bias\",\n         \"memory_optimization\",\n         \"drop_states\",\n         \"initializer\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"get_input_params\": [\n         \"self\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ],\n      \"prepare_input\": [\n         \"self\",\n         \"model\",\n         \"input_blob\"\n      ]\n   },\n   \"LayerNormMILSTMCell\": {\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ]\n   },\n   \"LayerNormalization\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"scale_optim\",\n         \"bias_optim\",\n         \"epsilon\",\n         \"axis\",\n         \"use_layer_norm_op\",\n         \"scale_init_value\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_with_layer_norm_op\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_without_layer_norm_op\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"LayerNormalizer\": {\n      \"__init__\": [\n         \"self\",\n         \"epsilon\",\n         \"use_layer_norm_op\",\n         \"scale_init_value\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"layer_model\",\n         \"param\"\n      ]\n   },\n   \"LayerParameter\": {\n      \"__init__\": [\n         \"self\",\n         \"parameter\",\n         \"optimizer\",\n         \"initializer\",\n         \"ps_param\",\n         \"regularizer\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_infer_shape_from_initializer\": [\n         \"self\"\n      ],\n      \"initializer\": [\n         \"self\",\n         \"op\"\n      ],\n      \"shape\": [\n         \"self\",\n         \"shape\"\n      ]\n   },\n   \"LayersTestCase\": {\n      \"assertArgsEqual\": [\n         \"self\",\n         \"spec_args\",\n         \"op_args\"\n      ],\n      \"assertBlobsEqual\": [\n         \"self\",\n         \"spec_blobs\",\n         \"op_blobs\"\n      ],\n      \"assertNetContainOps\": [\n         \"self\",\n         \"net\",\n         \"op_specs\"\n      ],\n      \"get_eval_net\": [\n         \"self\"\n      ],\n      \"get_predict_net\": [\n         \"self\"\n      ],\n      \"get_training_nets\": [\n         \"self\",\n         \"add_constants\"\n      ],\n      \"new_record\": [\n         \"self\",\n         \"schema_obj\"\n      ],\n      \"reset_model\": [\n         \"self\",\n         \"input_feature_schema\",\n         \"trainer_extra_schema\"\n      ],\n      \"run_train_net\": [\n         \"self\"\n      ],\n      \"run_train_net_forward_only\": [\n         \"self\",\n         \"num_iter\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"setup_example\": [\n         \"self\"\n      ]\n   },\n   \"LeakyReLU\": {\n      \"__init__\": [\n         \"self\",\n         \"negative_slope\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"LeakyReluTest\": {\n      \"_feed_inputs\": [\n         \"self\",\n         \"input_blobs\",\n         \"device_option\"\n      ],\n      \"_get_inputs\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\"\n      ],\n      \"_get_op\": [\n         \"self\",\n         \"device_option\",\n         \"alpha\",\n         \"order\",\n         \"inplace\"\n      ],\n      \"test_leaky_relu_gradients\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"alpha\",\n         \"seed\"\n      ],\n      \"test_leaky_relu_model_helper_helper\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"alpha\",\n         \"seed\"\n      ]\n   },\n   \"LengthsTester\": {\n      \"split\": [\n         \"self\",\n         \"data\",\n         \"lengths\",\n         \"indices\"\n      ],\n      \"unsplit\": [\n         \"self\",\n         \"extra_shape\",\n         \"inputs\",\n         \"lengths\"\n      ]\n   },\n   \"Linear\": {\n      \"__init__\": [\n         \"self\",\n         \"in_features\",\n         \"out_features\",\n         \"bias_\",\n         \"dtype\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"bias\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"w\",\n         \"b\"\n      ],\n      \"weight\": [\n         \"self\"\n      ]\n   },\n   \"LinearBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IN\",\n         \"OUT\",\n         \"device\"\n      ]\n   },\n   \"LinearPackedParams\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"_weight_bias\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"set_weight_bias\": [\n         \"self\",\n         \"weight\",\n         \"bias\"\n      ]\n   },\n   \"LinearReLU\": {\n      \"__init__\": [\n         \"self\",\n         \"in_features\",\n         \"out_features\",\n         \"bias\",\n         \"dtype\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ]\n   },\n   \"LinearReluModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"LintCode\": {},\n   \"List\": {\n      \"__getattr__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"values\",\n         \"lengths_blob\"\n      ],\n      \"_pprint_impl\": [\n         \"self\",\n         \"indent\",\n         \"str_buffer\"\n      ],\n      \"all_scalars\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\",\n         \"keep_blobs\"\n      ],\n      \"field_blobs\": [\n         \"self\"\n      ],\n      \"field_metadata\": [\n         \"self\"\n      ],\n      \"field_names\": [\n         \"self\"\n      ],\n      \"field_types\": [\n         \"self\"\n      ],\n      \"has_blobs\": [\n         \"self\"\n      ]\n   },\n   \"ListOutModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ListWithEvicted\": {\n      \"__getattr__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"values\",\n         \"lengths_blob\",\n         \"evicted_values\"\n      ],\n      \"_pprint_impl\": [\n         \"self\",\n         \"indent\",\n         \"str_buffer\"\n      ],\n      \"all_scalars\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\",\n         \"keep_blobs\"\n      ],\n      \"field_blobs\": [\n         \"self\"\n      ],\n      \"field_metadata\": [\n         \"self\"\n      ],\n      \"field_names\": [\n         \"self\"\n      ],\n      \"field_types\": [\n         \"self\"\n      ],\n      \"has_blobs\": [\n         \"self\"\n      ]\n   },\n   \"LnStructured\": {\n      \"__init__\": [\n         \"self\",\n         \"amount\",\n         \"n\",\n         \"dim\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\",\n         \"amount\",\n         \"n\",\n         \"dim\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"LocalRRefTest\": {\n      \"test_create_local_script_class_rref_in_py\": [\n         \"self\"\n      ],\n      \"test_create_local_script_module_rref_in_py\": [\n         \"self\"\n      ],\n      \"test_return_local_script_class_rref_in_py_and_use_in_script\": [\n         \"self\"\n      ],\n      \"test_return_local_script_module_rref_in_py_and_use_in_script\": [\n         \"self\"\n      ]\n   },\n   \"LocalResponseNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"alpha\",\n         \"beta\",\n         \"k\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"LocalSession\": {\n      \"__init__\": [\n         \"self\",\n         \"ws\"\n      ],\n      \"_compile_task_group\": [\n         \"cls\",\n         \"task_group\",\n         \"setup_net_list\"\n      ],\n      \"_fetch_output\": [\n         \"self\",\n         \"output\"\n      ],\n      \"_run_compiled\": [\n         \"self\",\n         \"compiled\"\n      ]\n   },\n   \"LogBarrier\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\",\n         \"discount_policy\",\n         \"discount_options\"\n      ],\n      \"_run_after_optimizer\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"LogNormal\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"loc\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"scale\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"LogSigmoid\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"LogSoftmax\": {\n      \"__init__\": [\n         \"self\",\n         \"dim\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Logger\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"LoggingTest\": {\n      \"testApiUsage\": [\n         \"self\"\n      ]\n   },\n   \"LogisticNormal\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"loc\": [\n         \"self\"\n      ],\n      \"scale\": [\n         \"self\"\n      ]\n   },\n   \"LogitRelaxedBernoulli\": {\n      \"__init__\": [\n         \"self\",\n         \"temperature\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ]\n   },\n   \"LongStorage\": {},\n   \"LowRankMultivariateNormal\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"cov_factor\",\n         \"cov_diag\",\n         \"validate_args\"\n      ],\n      \"covariance_matrix\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"precision_matrix\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"scale_tril\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"LowerCholeskyTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ]\n   },\n   \"LpNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"reg_lambda\",\n         \"p_value\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"LpnormTest\": {\n      \"test_Lp_Norm\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lpnorm_shape_inference\": [\n         \"self\",\n         \"x\",\n         \"p\",\n         \"average\"\n      ]\n   },\n   \"LstmFlatteningResult\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"MILSTMCell\": {\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ]\n   },\n   \"MILSTMWithAttentionCell\": {\n      \"__init__\": [\n         \"self\",\n         \"encoder_output_dim\",\n         \"encoder_outputs\",\n         \"decoder_input_dim\",\n         \"decoder_state_dim\",\n         \"name\",\n         \"attention_type\",\n         \"weighted_encoder_outputs\",\n         \"forget_bias\",\n         \"lstm_memory_optimization\",\n         \"attention_memory_optimization\",\n         \"forward_only\"\n      ]\n   },\n   \"MKCopyTest\": {\n      \"test_mkl_copy\": [\n         \"self\",\n         \"width\",\n         \"height\",\n         \"input_channels\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_mkl_zero_copy\": [\n         \"self\",\n         \"n\"\n      ]\n   },\n   \"MKLConcatTest\": {\n      \"test_mkl_concat\": [\n         \"self\",\n         \"batch_size\",\n         \"channel_splits\",\n         \"height\",\n         \"width\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLConvTest\": {\n      \"test_mkl_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLElementwiseAddTest\": {\n      \"test_mkl_elementwise_add\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLElementwiseSumTest\": {\n      \"test_mkl_elementwise_sum\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inputs\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLFcTest\": {\n      \"test_mkl_fc\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLFillTest\": {\n      \"test_mkl_fill\": [\n         \"self\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"filler\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLLRNTest\": {\n      \"test_mkl_LRN\": [\n         \"self\",\n         \"input_channels\",\n         \"batch_size\",\n         \"im_size\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLPoolTest\": {\n      \"test_mkl_pooling\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"method\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLReluTest\": {\n      \"test_mkl_relu\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLRewriteTest\": {\n      \"test_mkl_alexnet_rewrite\": [\n         \"self\"\n      ],\n      \"test_mkl_multi_output_rewrite\": [\n         \"self\"\n      ],\n      \"test_mkl_resnet_rewrite\": [\n         \"self\"\n      ],\n      \"test_mkl_simple_rewrite\": [\n         \"self\",\n         \"gen\"\n      ]\n   },\n   \"MKLSigmoidTest\": {\n      \"test_mkl_sigmoid\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLSpatialBNTest\": {\n      \"test_spatialbn_test_mode\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_train_mode\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MKLSqueezeTest\": {\n      \"test_mkl_squeeze\": [\n         \"self\",\n         \"squeeze_dims\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"MNIST\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MSELoss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"ManagerWatchdog\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"is_alive\": [\n         \"self\"\n      ]\n   },\n   \"ManualConvLinearQATModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ManualLinearQATModel\": {\n      \"__init__\": [\n         \"self\",\n         \"qengine\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MapToRange\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"max_index\",\n         \"name\"\n      ],\n      \"add_eval_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"MarginRankLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"margin\",\n         \"average_loss\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"MarginRankingLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input1\",\n         \"input2\",\n         \"target\"\n      ]\n   },\n   \"Markdown\": {\n      \"addBreak\": [\n         \"self\"\n      ],\n      \"addCode\": [\n         \"self\",\n         \"text\",\n         \"inline\"\n      ],\n      \"addCodeLink\": [\n         \"self\",\n         \"path\",\n         \"options\"\n      ],\n      \"addEmphasis\": [\n         \"self\",\n         \"text\",\n         \"s\"\n      ],\n      \"addHeader\": [\n         \"self\",\n         \"text\",\n         \"h\"\n      ],\n      \"addLine\": [\n         \"self\",\n         \"text\",\n         \"new_line\"\n      ],\n      \"addLinebreak\": [\n         \"self\"\n      ],\n      \"addLink\": [\n         \"self\",\n         \"text\",\n         \"url\"\n      ],\n      \"addList\": [\n         \"self\",\n         \"textList\"\n      ],\n      \"addRaw\": [\n         \"self\",\n         \"text\"\n      ],\n      \"addTable\": [\n         \"self\",\n         \"table\",\n         \"noTitle\"\n      ]\n   },\n   \"MatMulBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"B\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"compute_workload\": [\n         \"self\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"d1\",\n         \"d2\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"MatMulBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"trans_a\",\n         \"trans_b\",\n         \"device\"\n      ]\n   },\n   \"MaxNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"norm\"\n      ],\n      \"_run_after_optimizer\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"MaxPool1d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"MaxPool2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"MaxPool3d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"MaxPoolBench\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"MaxUnpool1d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"indices\",\n         \"output_size\"\n      ]\n   },\n   \"MaxUnpool2d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"indices\",\n         \"output_size\"\n      ]\n   },\n   \"MaxUnpool3d\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"indices\",\n         \"output_size\"\n      ]\n   },\n   \"MemongerTest\": {\n      \"test_compute_assignments_dp\": [\n         \"self\"\n      ],\n      \"test_compute_assignments_dp1\": [\n         \"self\"\n      ],\n      \"test_compute_assignments_greedy\": [\n         \"self\"\n      ],\n      \"test_compute_interference_graph_inplace_ops\": [\n         \"self\"\n      ],\n      \"test_fast_memonger\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\",\n         \"do\"\n      ],\n      \"test_fast_memonger_unique_outputs\": [\n         \"self\"\n      ],\n      \"test_forward_optim_tree_daggy\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_forward_optim_tree_harder\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_gradient_optim\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_gradient_optim_tree\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_memonger_mix_cpu_gpu\": [\n         \"self\"\n      ],\n      \"test_release_blobs_when_used\": [\n         \"self\"\n      ],\n      \"test_rnn\": [\n         \"self\"\n      ],\n      \"test_simple_memonger\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\",\n         \"do\",\n         \"algo\"\n      ],\n      \"test_topological_sort_longest_path\": [\n         \"self\"\n      ],\n      \"test_topological_sort_longest_path_multi_target\": [\n         \"self\"\n      ],\n      \"test_topological_sort_longest_path_single_node\": [\n         \"self\"\n      ],\n      \"test_verify_graph_equality\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_verify_graph_equality_harder\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_verify_graph_inequality\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_verify_graph_inequality_harder\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ]\n   },\n   \"MergeIdLists\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"MetaNetDefTest\": {\n      \"test_adding_net\": [\n         \"self\"\n      ],\n      \"test_minimal\": [\n         \"self\"\n      ],\n      \"test_replace_blobs\": [\n         \"self\"\n      ]\n   },\n   \"Metadata\": {},\n   \"Meter\": {\n      \"Add\": [\n         \"self\"\n      ],\n      \"Compute\": [\n         \"self\"\n      ],\n      \"Reset\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"Metrics\": {\n      \"__init__\": [\n         \"self\",\n         \"external_loggers\"\n      ],\n      \"log_metrics\": [\n         \"self\"\n      ],\n      \"put_metric\": [\n         \"self\",\n         \"key\",\n         \"value\",\n         \"count\"\n      ],\n      \"reset_metrics\": [\n         \"self\"\n      ]\n   },\n   \"MinMaxDynamicQuantObserver\": {\n      \"calculate_qparams\": [\n         \"self\"\n      ]\n   },\n   \"MinMaxObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x_orig\"\n      ]\n   },\n   \"MixtureSameFamily\": {\n      \"__init__\": [\n         \"self\",\n         \"mixture_distribution\",\n         \"component_distribution\",\n         \"validate_args\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_pad\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_pad_mixture_dimensions\": [\n         \"self\",\n         \"x\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"x\"\n      ],\n      \"component_distribution\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"x\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"mixture_distribution\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"MkldnnBatchNorm2d\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dense_module\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MkldnnConv2d\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dense_module\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MkldnnLinear\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dense_module\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MkldnnModule\": {\n      \"__init__\": [\n         \"self\",\n         \"m\",\n         \"name\"\n      ]\n   },\n   \"MnistNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"Model\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"ModelDownloader\": {\n      \"__init__\": [\n         \"self\",\n         \"model_env_name\"\n      ],\n      \"_download\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_model_dir\": [\n         \"self\",\n         \"model\"\n      ],\n      \"get_c2_model\": [\n         \"self\",\n         \"model_name\"\n      ],\n      \"get_c2_model_dbg\": [\n         \"self\",\n         \"model_name\"\n      ]\n   },\n   \"ModelForFusion\": {\n      \"__init__\": [\n         \"self\",\n         \"qconfig\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelForFusionWithBias\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelHelper\": {\n      \"AddGradientOperators\": [\n         \"self\"\n      ],\n      \"AddParameter\": [\n         \"self\",\n         \"param\",\n         \"tags\"\n      ],\n      \"ConstructInitTrainNetfromNet\": [\n         \"self\",\n         \"net\"\n      ],\n      \"CreateDB\": [\n         \"self\",\n         \"blob_out\",\n         \"db\",\n         \"db_type\"\n      ],\n      \"GetAllParams\": [\n         \"self\",\n         \"namescope\"\n      ],\n      \"GetCompleteNet\": [\n         \"self\"\n      ],\n      \"GetComputedParams\": [\n         \"self\",\n         \"namescope\"\n      ],\n      \"GetDevices\": [\n         \"self\"\n      ],\n      \"GetOptimizationParamInfo\": [\n         \"self\",\n         \"params\"\n      ],\n      \"GetParams\": [\n         \"self\",\n         \"namescope\",\n         \"top_scope\"\n      ],\n      \"InitProto\": [\n         \"self\"\n      ],\n      \"Proto\": [\n         \"self\"\n      ],\n      \"RunAllOnGPU\": [\n         \"self\"\n      ],\n      \"TensorProtosDBInput\": [\n         \"self\",\n         \"unused_blob_in\",\n         \"blob_out\",\n         \"batch_size\",\n         \"db\",\n         \"db_type\"\n      ],\n      \"Validate\": [\n         \"self\"\n      ],\n      \"_NormalizeNamescope\": [\n         \"namescope\"\n      ],\n      \"_Validate\": [\n         \"self\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"op_type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"init_params\",\n         \"allow_not_known_ops\",\n         \"skip_sparse_optim\",\n         \"param_model\",\n         \"arg_scope\"\n      ],\n      \"_infer_param_shape\": [\n         \"self\",\n         \"param\"\n      ],\n      \"_normalize_tags\": [\n         \"self\",\n         \"tags\"\n      ],\n      \"_update_param_info_deprecated\": [\n         \"self\"\n      ],\n      \"add_param_DEPRECATED\": [\n         \"self\",\n         \"param\",\n         \"key\",\n         \"shape\",\n         \"length\"\n      ],\n      \"arg_scope\": [\n         \"self\"\n      ],\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"shape\",\n         \"initializer\",\n         \"tags\"\n      ],\n      \"get_name\": [\n         \"self\"\n      ],\n      \"get_param_info\": [\n         \"self\",\n         \"param\"\n      ],\n      \"get_param_to_grad\": [\n         \"self\",\n         \"params\"\n      ]\n   },\n   \"ModelHelperTest\": {\n      \"test_get_complete_net\": [\n         \"self\"\n      ],\n      \"test_get_complete_net_type\": [\n         \"self\"\n      ]\n   },\n   \"ModelLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"prefix\",\n         \"input_record\",\n         \"predict_input_record_fields\",\n         \"tags\"\n      ],\n      \"_check_output_schema\": [\n         \"self\"\n      ],\n      \"add_eval_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_init_params\": [\n         \"self\",\n         \"init_net\"\n      ],\n      \"add_operators\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"context\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_to_accumulate_pred\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_param_copy_operators\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"shape\",\n         \"initializer\",\n         \"optimizer\",\n         \"ps_param\",\n         \"regularizer\"\n      ],\n      \"export_output_for_metrics\": [\n         \"self\"\n      ],\n      \"export_params_for_metrics\": [\n         \"self\"\n      ],\n      \"get_accessed_features\": [\n         \"self\"\n      ],\n      \"get_fp16_compatible_parameters\": [\n         \"self\"\n      ],\n      \"get_memory_usage\": [\n         \"self\"\n      ],\n      \"get_next_blob_reference\": [\n         \"self\",\n         \"name\"\n      ],\n      \"get_parameters\": [\n         \"self\"\n      ],\n      \"get_type\": [\n         \"self\"\n      ],\n      \"input_record\": [\n         \"self\"\n      ],\n      \"output_schema\": [\n         \"self\",\n         \"output_schema\"\n      ],\n      \"predict_input_record\": [\n         \"self\"\n      ],\n      \"predict_output_schema\": [\n         \"self\",\n         \"output_schema\"\n      ]\n   },\n   \"ModelMultipleOps\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelMultipleOpsNoAvgPool\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelTrainerLog\": {\n      \"__init__\": [\n         \"self\",\n         \"expname\",\n         \"runtime_args\",\n         \"external_loggers\"\n      ],\n      \"log\": [\n         \"self\",\n         \"input_count\",\n         \"batch_count\",\n         \"additional_values\"\n      ],\n      \"logstr\": [\n         \"self\",\n         \"str\"\n      ]\n   },\n   \"ModelWithFunctionals\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelWithNoQconfigPropagation\": {},\n   \"ModelWithSequentialFusion\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModelWithSubModules\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ModifierContext\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_get_modifier\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_has_modifier\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_rebuild_modifiers\": [\n         \"self\"\n      ],\n      \"pop_modifiers\": [\n         \"self\"\n      ],\n      \"push_modifiers\": [\n         \"self\",\n         \"modifiers\"\n      ]\n   },\n   \"Module\": {\n      \"__call__\": [\n         \"self\"\n      ],\n      \"__delattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_named_members\": [\n         \"self\",\n         \"get_members_fn\",\n         \"prefix\",\n         \"recurse\"\n      ],\n      \"_register_load_state_dict_pre_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"_register_state_dict_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"_replicate_for_data_parallel\": [\n         \"self\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"_slow_forward\": [\n         \"self\"\n      ],\n      \"add_module\": [\n         \"self\",\n         \"name\",\n         \"module\"\n      ],\n      \"apply\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"bfloat16\": [\n         \"self\"\n      ],\n      \"buffers\": [\n         \"self\",\n         \"recurse\"\n      ],\n      \"children\": [\n         \"self\"\n      ],\n      \"cpu\": [\n         \"self\"\n      ],\n      \"cuda\": [\n         \"self\",\n         \"device\"\n      ],\n      \"double\": [\n         \"self\"\n      ],\n      \"eval\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"float\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"half\": [\n         \"self\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"strict\"\n      ],\n      \"modules\": [\n         \"self\"\n      ],\n      \"named_buffers\": [\n         \"self\",\n         \"prefix\",\n         \"recurse\"\n      ],\n      \"named_children\": [\n         \"self\"\n      ],\n      \"named_modules\": [\n         \"self\",\n         \"memo\",\n         \"prefix\"\n      ],\n      \"named_parameters\": [\n         \"self\",\n         \"prefix\",\n         \"recurse\"\n      ],\n      \"parameters\": [\n         \"self\",\n         \"recurse\"\n      ],\n      \"register_backward_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"register_buffer\": [\n         \"self\",\n         \"name\",\n         \"tensor\",\n         \"persistent\"\n      ],\n      \"register_forward_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"register_forward_pre_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"register_parameter\": [\n         \"self\",\n         \"name\",\n         \"param\"\n      ],\n      \"requires_grad_\": [\n         \"self\",\n         \"requires_grad\"\n      ],\n      \"share_memory\": [\n         \"self\"\n      ],\n      \"state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"to\": [\n         \"self\"\n      ],\n      \"train\": [\n         \"self\",\n         \"mode\"\n      ],\n      \"type\": [\n         \"self\",\n         \"dst_type\"\n      ],\n      \"zero_grad\": [\n         \"self\"\n      ]\n   },\n   \"ModuleAttributeError\": {},\n   \"ModuleDict\": {\n      \"__contains__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__delitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"modules\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"key\",\n         \"module\"\n      ],\n      \"clear\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"items\": [\n         \"self\"\n      ],\n      \"keys\": [\n         \"self\"\n      ],\n      \"pop\": [\n         \"self\",\n         \"key\"\n      ],\n      \"update\": [\n         \"self\",\n         \"modules\"\n      ],\n      \"values\": [\n         \"self\"\n      ]\n   },\n   \"ModuleList\": {\n      \"__delitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__iadd__\": [\n         \"self\",\n         \"modules\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"modules\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"idx\",\n         \"module\"\n      ],\n      \"_get_abs_string_index\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"append\": [\n         \"self\",\n         \"module\"\n      ],\n      \"extend\": [\n         \"self\",\n         \"modules\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"insert\": [\n         \"self\",\n         \"index\",\n         \"module\"\n      ]\n   },\n   \"ModuleTest\": {\n      \"__call__\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"noncontiguize\": [\n         \"self\",\n         \"obj\"\n      ],\n      \"test_cuda\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"test_noncontig\": [\n         \"self\",\n         \"test_case\",\n         \"module\",\n         \"input\"\n      ]\n   },\n   \"ModuleWrapper\": {\n      \"__init__\": [\n         \"self\",\n         \"cpp_module\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"training\": [\n         \"self\",\n         \"mode\"\n      ]\n   },\n   \"MovingAverageMinMaxObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"averaging_constant\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x_orig\"\n      ]\n   },\n   \"MovingAveragePerChannelMinMaxObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"averaging_constant\",\n         \"ch_axis\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x_orig\"\n      ]\n   },\n   \"Mpy\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Mpy1\": {\n      \"__init__\": [\n         \"self\",\n         \"block\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Mpy2\": {\n      \"__init__\": [\n         \"self\",\n         \"block1\",\n         \"block2\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Msm\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Msm1\": {\n      \"__init__\": [\n         \"self\",\n         \"block\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"MulCell\": {\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ]\n   },\n   \"MultiLabelMarginLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"MultiLabelSoftMarginLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"MultiMarginLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"p\",\n         \"margin\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"MultiNodeCheckpointManager\": {\n      \"__init__\": [\n         \"self\",\n         \"db_prefix\",\n         \"db_type\",\n         \"metadata_handler\"\n      ],\n      \"_task_group\": [\n         \"self\",\n         \"func\"\n      ],\n      \"cp_accessible\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"get_ckpt_db_name\": [\n         \"self\",\n         \"node_name\",\n         \"epoch\"\n      ],\n      \"get_resume_from_epoch_id\": [\n         \"self\",\n         \"user_epoch\"\n      ],\n      \"init\": [\n         \"self\",\n         \"nodes\",\n         \"retrieve_from_epoch\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"load\": [\n         \"self\",\n         \"epoch\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"load_blobs_locally\": [\n         \"self\",\n         \"nodes\",\n         \"blob_names\",\n         \"epoch\",\n         \"session\"\n      ],\n      \"report_checkpoint_stats\": [\n         \"self\",\n         \"action_name\"\n      ],\n      \"save\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"set_params\": [\n         \"self\",\n         \"nodes\",\n         \"path_prefix\",\n         \"path_type\"\n      ],\n      \"write_checkpoint_metadata\": [\n         \"self\",\n         \"epoch\"\n      ]\n   },\n   \"MultiPrecisionSgdOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"base_learning_rate\",\n         \"momentum\",\n         \"policy\",\n         \"nesterov\",\n         \"sparse_dedup_aggregator\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ]\n   },\n   \"MultiProcessTestCase\": {\n      \"__init__\": [\n         \"self\",\n         \"method_name\"\n      ],\n      \"_check_no_test_errors\": [\n         \"self\",\n         \"elapsed_time\"\n      ],\n      \"_check_return_codes\": [\n         \"self\",\n         \"elapsed_time\"\n      ],\n      \"_current_test_name\": [\n         \"self\"\n      ],\n      \"_fork_processes\": [\n         \"self\"\n      ],\n      \"_join_processes\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_run\": [\n         \"cls\",\n         \"rank\",\n         \"test_name\",\n         \"file_name\"\n      ],\n      \"_spawn_processes\": [\n         \"self\"\n      ],\n      \"_start_processes\": [\n         \"self\",\n         \"proc\"\n      ],\n      \"is_master\": [\n         \"self\"\n      ],\n      \"join_or_run\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"MultiRNNCell\": {\n      \"__init__\": [\n         \"self\",\n         \"cells\",\n         \"residual_output_layers\"\n      ],\n      \"_apply\": [\n         \"self\",\n         \"model\",\n         \"input_t\",\n         \"seq_lengths\",\n         \"states\",\n         \"timestep\",\n         \"extra_inputs\"\n      ],\n      \"_prepare_output\": [\n         \"self\",\n         \"model\",\n         \"states\"\n      ],\n      \"_prepare_output_sequence\": [\n         \"self\",\n         \"model\",\n         \"states\"\n      ],\n      \"get_output_state_index\": [\n         \"self\"\n      ],\n      \"get_state_names\": [\n         \"self\"\n      ],\n      \"layer_scoper\": [\n         \"self\",\n         \"layer_id\"\n      ],\n      \"prepare_input\": [\n         \"self\",\n         \"model\",\n         \"input_blob\"\n      ]\n   },\n   \"MultiRNNCellInitializer\": {\n      \"__init__\": [\n         \"self\",\n         \"cells\"\n      ],\n      \"create_states\": [\n         \"self\",\n         \"model\"\n      ]\n   },\n   \"MultiStepLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"milestones\",\n         \"gamma\",\n         \"last_epoch\"\n      ],\n      \"_get_closed_form_lr\": [\n         \"self\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"MultiheadAttention\": {\n      \"__init__\": [\n         \"self\",\n         \"embed_dim\",\n         \"num_heads\",\n         \"dropout\",\n         \"bias\",\n         \"add_bias_kv\",\n         \"add_zero_attn\",\n         \"kdim\",\n         \"vdim\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_reset_parameters\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"query\",\n         \"key\",\n         \"value\",\n         \"key_padding_mask\",\n         \"need_weights\",\n         \"attn_mask\"\n      ]\n   },\n   \"Multinomial\": {\n      \"__init__\": [\n         \"self\",\n         \"total_count\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"MultiplicativeLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"lr_lambda\",\n         \"last_epoch\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ]\n   },\n   \"MultivariateNormal\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"covariance_matrix\",\n         \"precision_matrix\",\n         \"scale_tril\",\n         \"validate_args\"\n      ],\n      \"covariance_matrix\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"precision_matrix\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"scale_tril\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"MyBackwardFunc\": {\n      \"backward\": [\n         \"ctx\",\n         \"input\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"input\"\n      ]\n   },\n   \"MyClass\": {\n      \"__init__\": [\n         \"self\",\n         \"a\"\n      ],\n      \"get_value\": [\n         \"self\"\n      ],\n      \"increment_value\": [\n         \"self\",\n         \"increment\"\n      ],\n      \"my_class_method\": [\n         \"cls\",\n         \"d\",\n         \"e\"\n      ],\n      \"my_instance_method\": [\n         \"self\",\n         \"b\"\n      ],\n      \"my_static_method\": [\n         \"f\"\n      ]\n   },\n   \"MyContext\": {},\n   \"MyFunction\": {\n      \"forward\": [\n         \"ctx\",\n         \"x\",\n         \"y\"\n      ],\n      \"symbolic\": [\n         \"graph\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"MyModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"MyModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"t1\"\n      ],\n      \"get_w\": [\n         \"self\"\n      ]\n   },\n   \"MyModuleInterface\": {\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"MyPickleClass\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"obj\"\n      ],\n      \"set\": [\n         \"self\",\n         \"val\"\n      ]\n   },\n   \"MyPythonStore\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"key\",\n         \"value\"\n      ],\n      \"get\": [\n         \"self\",\n         \"key\"\n      ],\n      \"set\": [\n         \"self\",\n         \"key\",\n         \"value\"\n      ]\n   },\n   \"MyScriptClass\": {\n      \"__init__\": [\n         \"self\",\n         \"a\"\n      ],\n      \"get_value\": [\n         \"self\"\n      ]\n   },\n   \"MyScriptModule\": {\n      \"__init__\": [\n         \"self\",\n         \"rank\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"MyScriptModuleWithRRefs\": {\n      \"__init__\": [\n         \"self\",\n         \"dst_worker\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"NCCLOpsTest\": {\n      \"_test_nccl_sync\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"iters\",\n         \"net_type\"\n      ],\n      \"test_nccl_allgather\": [\n         \"self\",\n         \"n\",\n         \"m\"\n      ],\n      \"test_nccl_allreduce\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"in_place\"\n      ],\n      \"test_nccl_broadcast\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"root\"\n      ],\n      \"test_nccl_reduce\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"root\",\n         \"in_place\"\n      ],\n      \"test_nccl_reduce_scatter\": [\n         \"self\",\n         \"n\",\n         \"m\"\n      ],\n      \"test_timings\": [\n         \"self\"\n      ]\n   },\n   \"NCHW\": {\n      \"ShowChannels\": [\n         \"patch\"\n      ],\n      \"ShowImages\": [\n         \"patch\"\n      ],\n      \"ShowMultiple\": [\n         \"patch\"\n      ],\n      \"ShowSingle\": [\n         \"patch\"\n      ]\n   },\n   \"NHWC\": {\n      \"ShowChannels\": [],\n      \"ShowImages\": [],\n      \"ShowMultiple\": [],\n      \"ShowSingle\": []\n   },\n   \"NLLLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"ignore_index\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"NLLLoss2d\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"ignore_index\",\n         \"reduce\",\n         \"reduction\"\n      ]\n   },\n   \"NNModule\": {\n      \"__init__\": [\n         \"self\",\n         \"net\",\n         \"device_map\"\n      ],\n      \"controlFlow\": [\n         \"self\"\n      ],\n      \"convertToCaffe2Proto\": [\n         \"self\",\n         \"old_proto\"\n      ],\n      \"createEdge\": [\n         \"self\",\n         \"a\",\n         \"b\"\n      ],\n      \"createNode\": [\n         \"self\",\n         \"val\"\n      ],\n      \"createUniqueDataNode\": [\n         \"self\",\n         \"prefix\"\n      ],\n      \"dataFlow\": [\n         \"self\"\n      ],\n      \"deleteEdge\": [\n         \"self\",\n         \"a\",\n         \"b\"\n      ],\n      \"deleteNode\": [\n         \"self\",\n         \"node\"\n      ],\n      \"deleteSubgraph\": [\n         \"self\",\n         \"subgraph\"\n      ],\n      \"match\": [\n         \"self\",\n         \"pattern\"\n      ],\n      \"nodes\": [\n         \"self\"\n      ],\n      \"operators\": [\n         \"self\"\n      ],\n      \"replaceAllUsesWith\": [\n         \"self\",\n         \"old_tensor\",\n         \"new_tensor\"\n      ],\n      \"replaceAsConsumer\": [\n         \"self\",\n         \"old_consumer\",\n         \"new_consumer\"\n      ],\n      \"replaceNode\": [\n         \"self\",\n         \"old_node\",\n         \"new_node\"\n      ],\n      \"replaceProducer\": [\n         \"self\",\n         \"tensor\",\n         \"new_producer\"\n      ],\n      \"replaceSubgraph\": [\n         \"self\",\n         \"subgraph\",\n         \"new_node\",\n         \"inputs\",\n         \"outputs\"\n      ],\n      \"tensors\": [\n         \"self\"\n      ]\n   },\n   \"NNPackOpsTest\": {\n      \"test_convolution_correctness\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"groups\"\n      ],\n      \"test_leaky_relu_correctness\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"alpha\"\n      ],\n      \"test_max_pool_correctness\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\"\n      ],\n      \"test_relu_correctness\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\"\n      ],\n      \"test_relu_timings\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\"\n      ],\n      \"test_timings\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\"\n      ]\n   },\n   \"NNTestCase\": {\n      \"_analytical_jacobian\": [\n         \"self\",\n         \"module\",\n         \"input\",\n         \"jacobian_input\",\n         \"jacobian_parameters\"\n      ],\n      \"_flatten_tensors\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_jacobian\": [\n         \"self\",\n         \"input\",\n         \"num_out\"\n      ],\n      \"_numerical_jacobian\": [\n         \"self\",\n         \"module\",\n         \"input\",\n         \"jacobian_input\",\n         \"jacobian_parameters\"\n      ],\n      \"_zero_grad_input\": [\n         \"self\",\n         \"input\"\n      ],\n      \"check_criterion_jacobian\": [\n         \"self\",\n         \"criterion\",\n         \"input\",\n         \"target\"\n      ],\n      \"check_jacobian\": [\n         \"self\",\n         \"module\",\n         \"input\",\n         \"jacobian_input\"\n      ]\n   },\n   \"NUMATest\": {\n      \"test_numa\": [\n         \"self\"\n      ]\n   },\n   \"NYIError\": {\n      \"__init__\": [\n         \"self\",\n         \"reason\"\n      ]\n   },\n   \"NamedTupleDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"ndx\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"NcclErrorHandlingTest\": {\n      \"_get_wrapped_func\": [\n         \"self\",\n         \"func\"\n      ],\n      \"_run_all_reduce\": [\n         \"self\",\n         \"pg\"\n      ],\n      \"_run_invalid_nccl_blocking_wait_env\": [\n         \"self\",\n         \"val\"\n      ],\n      \"_test_nccl_errors_blocking\": [\n         \"self\",\n         \"func\"\n      ],\n      \"_wait_for_comm_abort\": [\n         \"self\",\n         \"process_group\"\n      ],\n      \"op_timeout_sec\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_invalid_nccl_blocking_wait_env\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_blocking_abort\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_blocking_clean_exit\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_blocking_nonzero_exit\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_blocking_sigkill\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_blocking_sigterm\": [\n         \"self\"\n      ],\n      \"test_nccl_errors_nonblocking\": [\n         \"self\"\n      ],\n      \"test_nccl_timeout\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"NegativeBinomial\": {\n      \"__init__\": [\n         \"self\",\n         \"total_count\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_gamma\": [\n         \"self\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"NestedIOFunction\": {\n      \"_do_backward\": [\n         \"self\",\n         \"gradients\",\n         \"retain_variables\"\n      ],\n      \"_do_forward\": [\n         \"self\"\n      ],\n      \"backward\": [\n         \"self\"\n      ],\n      \"backward_extended\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"forward_extended\": [\n         \"self\"\n      ],\n      \"mark_dirty\": [\n         \"self\"\n      ],\n      \"mark_non_differentiable\": [\n         \"self\"\n      ],\n      \"save_for_backward\": [\n         \"self\"\n      ],\n      \"saved_tensors\": [\n         \"self\"\n      ]\n   },\n   \"NestedModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"Net\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"NetBuilder\": {\n      \"__exit__\": [\n         \"self\",\n         \"etype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"initial_scope\",\n         \"_stop_blob_required\",\n         \"_stop_blob\",\n         \"_fullname\",\n         \"_use_control_ops\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_assert_mutable\": [\n         \"self\"\n      ],\n      \"_reset_children\": [\n         \"self\"\n      ],\n      \"_update_lexical_scope\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"child\"\n      ],\n      \"current_net\": [\n         \"self\",\n         \"name\"\n      ],\n      \"freeze\": [\n         \"self\"\n      ],\n      \"get\": [\n         \"self\"\n      ],\n      \"merge_nets\": [\n         \"nets_or_builders\",\n         \"outer_blob_names\"\n      ],\n      \"stop_blob\": [\n         \"self\"\n      ],\n      \"stop_if\": [\n         \"self\",\n         \"blob\"\n      ]\n   },\n   \"NetDefNode\": {\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"optype\",\n         \"p\",\n         \"op\"\n      ],\n      \"deleteInput\": [\n         \"self\",\n         \"p\"\n      ],\n      \"insertInput\": [\n         \"self\",\n         \"p\"\n      ]\n   },\n   \"NetGradientChecker\": {\n      \"Check\": [\n         \"net\",\n         \"outputs_with_grad\",\n         \"input_values\",\n         \"input_to_check\",\n         \"step_size\",\n         \"threshold\",\n         \"print_net\"\n      ],\n      \"CompareNets\": [\n         \"nets\",\n         \"outputs\",\n         \"outputs_with_grad_ids\",\n         \"inputs_with_grads\",\n         \"input_values\",\n         \"threshold\",\n         \"print_net_images\"\n      ]\n   },\n   \"NetModifier\": {\n      \"__call__\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\",\n         \"modify_output_record\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"modify_net\": [\n         \"self\",\n         \"net\",\n         \"init_net\",\n         \"grad_map\",\n         \"blob_to_device\"\n      ]\n   },\n   \"NetProcessor\": {\n      \"__call__\": [\n         \"self\",\n         \"rec\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"net\",\n         \"stop_signal\",\n         \"thread_init_nets\",\n         \"name\"\n      ],\n      \"blob_maps\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"init_net\"\n      ]\n   },\n   \"NewCriterionTest\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_do_extra_tests\": [\n         \"self\",\n         \"test_case\",\n         \"module\",\n         \"input\",\n         \"target\"\n      ],\n      \"_get_target\": [\n         \"self\"\n      ],\n      \"constructor_args\": [\n         \"self\"\n      ],\n      \"extra_args\": [\n         \"self\"\n      ],\n      \"test_cuda\": [\n         \"self\",\n         \"test_case\",\n         \"dtype\",\n         \"extra_args\"\n      ]\n   },\n   \"NewModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"one\": [\n         \"self\",\n         \"inp1\",\n         \"inp2\"\n      ]\n   },\n   \"NewModuleTest\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_do_test\": [\n         \"self\",\n         \"test_case\",\n         \"module\",\n         \"input\"\n      ],\n      \"_get_target\": [\n         \"self\"\n      ],\n      \"constructor_args\": [\n         \"self\"\n      ]\n   },\n   \"NoArgsClass\": {\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__next__\": [\n         \"self\"\n      ]\n   },\n   \"Node\": {\n      \"__init__\": [\n         \"self\",\n         \"node\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"kwargs\": [\n         \"self\"\n      ]\n   },\n   \"NodeBase\": {\n      \"__init__\": [\n         \"self\",\n         \"debugName\",\n         \"inputs\",\n         \"scope\",\n         \"tensor_size\",\n         \"op_type\",\n         \"attributes\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"NodePy\": {\n      \"__init__\": [\n         \"self\",\n         \"node_cpp\",\n         \"valid_methods\"\n      ]\n   },\n   \"NodePyIO\": {\n      \"__init__\": [\n         \"self\",\n         \"node_cpp\",\n         \"input_or_output\"\n      ]\n   },\n   \"NodePyOP\": {\n      \"__init__\": [\n         \"self\",\n         \"node_cpp\"\n      ]\n   },\n   \"NoopObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"get_qparams\": [\n         \"self\"\n      ]\n   },\n   \"Normal\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"NormalizationBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"memory_workload\": [\n         \"self\"\n      ]\n   },\n   \"NormalizationTestModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"Normalizer\": {\n      \"__call__\": [\n         \"self\",\n         \"net\",\n         \"param\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param\"\n      ]\n   },\n   \"NormalizerContext\": {\n      \"get_normalizer\": [\n         \"self\",\n         \"name\"\n      ],\n      \"has_normalizer\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"NotSupportedError\": {},\n   \"NumpyTests\": {\n      \"test_boolean_assignment_value_mismatch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_indexing_alldims\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_indexing_onedim\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_indexing_twodim\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_indexing_weirdness\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_indexing_weirdness_tensors\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_list_indexing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_boolean_shape_mismatch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broadcast_subspace\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broaderrors_indexing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ellipsis_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_fancy_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_tuple_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_everything_returns_views\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_is_larger\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_no_floats\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_none_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_single_bool_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_single_int_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_trivial_fancy_out_of_bounds\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"ONNXTracedModule\": {\n      \"__init__\": [\n         \"self\",\n         \"inner\",\n         \"strict\",\n         \"force_outplace\",\n         \"return_inputs\",\n         \"return_inputs_states\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"ObserverBase\": {\n      \"__init__\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"get_qparams\": [\n         \"self\"\n      ]\n   },\n   \"OneCycleLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"max_lr\",\n         \"total_steps\",\n         \"epochs\",\n         \"steps_per_epoch\",\n         \"pct_start\",\n         \"anneal_strategy\",\n         \"cycle_momentum\",\n         \"base_momentum\",\n         \"max_momentum\",\n         \"div_factor\",\n         \"final_div_factor\",\n         \"last_epoch\"\n      ],\n      \"_annealing_cos\": [\n         \"self\",\n         \"start\",\n         \"end\",\n         \"pct\"\n      ],\n      \"_annealing_linear\": [\n         \"self\",\n         \"start\",\n         \"end\",\n         \"pct\"\n      ],\n      \"_format_param\": [\n         \"self\",\n         \"name\",\n         \"optimizer\",\n         \"param\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"OneHotCategorical\": {\n      \"__init__\": [\n         \"self\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"_new\": [\n         \"self\"\n      ],\n      \"_param\": [\n         \"self\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"enumerate_support\": [\n         \"self\",\n         \"expand\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"param_shape\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"OnnxAttributes\": {\n      \"caffe2\": [\n         \"self\",\n         \"kmap\"\n      ],\n      \"from_onnx\": [\n         \"args\"\n      ]\n   },\n   \"OnnxNode\": {\n      \"__init__\": [\n         \"self\",\n         \"node\"\n      ]\n   },\n   \"OnnxifiTest\": {\n      \"test_conv_graph\": [\n         \"self\"\n      ],\n      \"test_relu_graph\": [\n         \"self\"\n      ]\n   },\n   \"OnnxifiTransformTest\": {\n      \"_add_head_tail\": [\n         \"self\",\n         \"pred_net\",\n         \"new_head\",\n         \"new_tail\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_resnet50_core\": [\n         \"self\"\n      ]\n   },\n   \"OpDocGenerator\": {\n      \"createBody\": [\n         \"self\"\n      ],\n      \"getOperatorDoc\": [\n         \"self\",\n         \"name\",\n         \"schema\",\n         \"priority\"\n      ],\n      \"getOperatorEngine\": [\n         \"self\",\n         \"name\"\n      ],\n      \"getOperators\": [\n         \"self\"\n      ]\n   },\n   \"OpSpec\": {\n      \"__new__\": [\n         \"cls\",\n         \"op_type\",\n         \"op_input\",\n         \"op_output\",\n         \"op_arg\"\n      ]\n   },\n   \"Operations\": {\n      \"Condition\": [\n         \"self\",\n         \"name\"\n      ],\n      \"Else\": [\n         \"self\",\n         \"name\"\n      ],\n      \"If\": [\n         \"self\",\n         \"cond\",\n         \"name\"\n      ],\n      \"IfNet\": [\n         \"self\",\n         \"cond\",\n         \"name\"\n      ],\n      \"WhileNet\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"op_type\"\n      ],\n      \"local_exit\": [\n         \"self\",\n         \"name\"\n      ],\n      \"local_init\": [\n         \"self\"\n      ],\n      \"local_reporter\": [\n         \"self\",\n         \"interval_ms\",\n         \"name\"\n      ],\n      \"loop\": [\n         \"self\",\n         \"iters\",\n         \"name\"\n      ],\n      \"net\": [\n         \"self\",\n         \"net\",\n         \"name\"\n      ],\n      \"stop\": [\n         \"self\"\n      ],\n      \"stop_guard\": [\n         \"self\",\n         \"has_stopped_blob\",\n         \"name\"\n      ],\n      \"stop_if\": [\n         \"self\",\n         \"blob\"\n      ],\n      \"task_exit\": [\n         \"self\"\n      ],\n      \"task_group\": [\n         \"self\"\n      ],\n      \"task_init\": [\n         \"self\"\n      ],\n      \"task_instance_exit\": [\n         \"self\"\n      ],\n      \"task_instance_init\": [\n         \"self\"\n      ],\n      \"task_reporter\": [\n         \"self\",\n         \"interval_ms\",\n         \"name\"\n      ]\n   },\n   \"OperatorDoc\": {\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"schema\",\n         \"priority\"\n      ],\n      \"addEngines\": [\n         \"self\",\n         \"engines\"\n      ],\n      \"generateCodeLink\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateDevices\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateDoc\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateEngines\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateInterface\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateSchema\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"generateTable\": [\n         \"self\",\n         \"formatter\",\n         \"tuples\",\n         \"title_row\",\n         \"title\"\n      ],\n      \"getInfo\": [\n         \"self\",\n         \"formatter\",\n         \"name\",\n         \"impl\"\n      ]\n   },\n   \"OperatorEngine\": {\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"generateDoc\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"getDeviceImpl\": [\n         \"self\"\n      ]\n   },\n   \"OperatorFPExceptionsTest\": {\n      \"test_fp_exception_divbyzero\": [\n         \"self\"\n      ]\n   },\n   \"Optimizer\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"defaults\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"add_param_group\": [\n         \"self\",\n         \"param_group\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ],\n      \"zero_grad\": [\n         \"self\"\n      ]\n   },\n   \"OptimizerContext\": {\n      \"get_optimizer\": [\n         \"self\",\n         \"name\"\n      ],\n      \"has_optimizer\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"OptimizerFailingOnConstructor\": {\n      \"__init__\": [\n         \"self\",\n         \"params\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"OptimizerTestBase\": {\n      \"_createDense\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"testDense\": [\n         \"self\"\n      ],\n      \"testGPUDense\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"testSparse\": [\n         \"self\"\n      ]\n   },\n   \"OrderSwitchOpsTest\": {\n      \"test_nchw2nhwc\": [\n         \"self\",\n         \"X\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nhwc2nchw\": [\n         \"self\",\n         \"X\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"OrderSwitchTest\": {\n      \"test_nchw2nhwc\": [\n         \"self\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nhwc2nchw\": [\n         \"self\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"OrderedDictWrapper\": {\n      \"__contains__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"cpp_module\",\n         \"attr\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"cpp_dict\": [\n         \"self\"\n      ],\n      \"items\": [\n         \"self\"\n      ],\n      \"keys\": [\n         \"self\"\n      ],\n      \"values\": [\n         \"self\"\n      ]\n   },\n   \"OrderedModuleDict\": {\n      \"__contains__\": [\n         \"self\",\n         \"k\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"k\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"module\",\n         \"python_dict\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"k\",\n         \"v\"\n      ],\n      \"items\": [\n         \"self\"\n      ]\n   },\n   \"OrigModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"one\": [\n         \"self\",\n         \"inp1\",\n         \"inp2\"\n      ],\n      \"two\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Output\": {\n      \"__init__\": [\n         \"self\",\n         \"nets\",\n         \"record\",\n         \"should_stop\"\n      ]\n   },\n   \"OutputLogger\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"PReLU\": {\n      \"__init__\": [\n         \"self\",\n         \"num_parameters\",\n         \"init\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"PReluNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"PackedFCTest\": {\n      \"test_packed_fc\": [\n         \"self\",\n         \"seed\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_packed_fc_axis\": [\n         \"self\",\n         \"axis\",\n         \"num_output\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"PackedParameter\": {\n      \"__init__\": [\n         \"self\",\n         \"param\"\n      ]\n   },\n   \"PackedSequence\": {\n      \"__new__\": [\n         \"cls\",\n         \"data\",\n         \"batch_sizes\",\n         \"sorted_indices\",\n         \"unsorted_indices\"\n      ],\n      \"byte\": [\n         \"self\"\n      ],\n      \"char\": [\n         \"self\"\n      ],\n      \"cpu\": [\n         \"self\"\n      ],\n      \"cuda\": [\n         \"self\"\n      ],\n      \"double\": [\n         \"self\"\n      ],\n      \"float\": [\n         \"self\"\n      ],\n      \"half\": [\n         \"self\"\n      ],\n      \"int\": [\n         \"self\"\n      ],\n      \"is_cuda\": [\n         \"self\"\n      ],\n      \"is_pinned\": [\n         \"self\"\n      ],\n      \"long\": [\n         \"self\"\n      ],\n      \"pin_memory\": [\n         \"self\"\n      ],\n      \"short\": [\n         \"self\"\n      ],\n      \"to\": [\n         \"self\"\n      ]\n   },\n   \"PackedSequenceTest\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_ordered_sequence\": [\n         \"self\",\n         \"tensor_type\"\n      ],\n      \"_padded_sequence\": [\n         \"self\",\n         \"tensor_type\"\n      ],\n      \"test_to\": [\n         \"self\"\n      ],\n      \"test_to_memory_format\": [\n         \"self\"\n      ],\n      \"test_total_length\": [\n         \"self\"\n      ],\n      \"test_type_casts\": [\n         \"self\"\n      ],\n      \"test_wrong_order\": [\n         \"self\"\n      ]\n   },\n   \"PairwiseDistance\": {\n      \"__init__\": [\n         \"self\",\n         \"p\",\n         \"eps\",\n         \"keepdim\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x1\",\n         \"x2\"\n      ]\n   },\n   \"PairwiseSimilarity\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dim\",\n         \"pairwise_similarity_func\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"ParallelWorkersTest\": {\n      \"testParallelWorkers\": [\n         \"self\"\n      ],\n      \"testParallelWorkersInitFun\": [\n         \"self\"\n      ],\n      \"testParallelWorkersShutdownFun\": [\n         \"self\"\n      ]\n   },\n   \"ParallelizeBMUFTest\": {\n      \"_generate_data\": [\n         \"self\",\n         \"devices\",\n         \"device_type\",\n         \"device_prefix\"\n      ],\n      \"_model_build_fun\": [\n         \"self\",\n         \"model\",\n         \"loss_scale\"\n      ],\n      \"_param_update_fun\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_run_model\": [\n         \"self\",\n         \"gpu_devices\"\n      ],\n      \"test_parallelize_bmuf\": [\n         \"self\",\n         \"cpu_device\"\n      ]\n   },\n   \"Parameter\": {\n      \"__deepcopy__\": [\n         \"self\",\n         \"memo\"\n      ],\n      \"__new__\": [\n         \"cls\",\n         \"data\",\n         \"requires_grad\"\n      ],\n      \"__reduce_ex__\": [\n         \"self\",\n         \"proto\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"ParameterDict\": {\n      \"__call__\": [\n         \"self\",\n         \"input\"\n      ],\n      \"__contains__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__delitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"parameters\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"key\",\n         \"parameter\"\n      ],\n      \"clear\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"items\": [\n         \"self\"\n      ],\n      \"keys\": [\n         \"self\"\n      ],\n      \"pop\": [\n         \"self\",\n         \"key\"\n      ],\n      \"update\": [\n         \"self\",\n         \"parameters\"\n      ],\n      \"values\": [\n         \"self\"\n      ]\n   },\n   \"ParameterInfo\": {\n      \"__init__\": [\n         \"self\",\n         \"param_id\",\n         \"param\",\n         \"key\",\n         \"shape\",\n         \"length\",\n         \"grad\",\n         \"blob_copy\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"optimizer\": [\n         \"self\",\n         \"value\"\n      ],\n      \"parameter\": [\n         \"self\"\n      ]\n   },\n   \"ParameterList\": {\n      \"__call__\": [\n         \"self\",\n         \"input\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__iadd__\": [\n         \"self\",\n         \"parameters\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"parameters\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"idx\",\n         \"param\"\n      ],\n      \"_get_abs_string_index\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"append\": [\n         \"self\",\n         \"parameter\"\n      ],\n      \"extend\": [\n         \"self\",\n         \"parameters\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"ParameterSharingContext\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_resolve_scope_overrides\": [\n         \"self\",\n         \"candidate_scope\"\n      ],\n      \"add_scope_overrides\": [\n         \"self\",\n         \"shared_scopes\"\n      ],\n      \"get_parameter_name\": [\n         \"self\",\n         \"name\"\n      ],\n      \"pop\": [\n         \"self\"\n      ]\n   },\n   \"ParameterSharingTest\": {\n      \"test_create_param\": [\n         \"self\"\n      ],\n      \"test_deep_hierarchy\": [\n         \"self\"\n      ],\n      \"test_parameter_sharing_brew\": [\n         \"self\"\n      ],\n      \"test_parameter_sharing_default_scopes\": [\n         \"self\"\n      ],\n      \"test_parameter_sharing_nested_scopes\": [\n         \"self\"\n      ],\n      \"test_parameter_sharing_subscopes\": [\n         \"self\"\n      ]\n   },\n   \"ParameterTags\": {},\n   \"Pareto\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"alpha\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"ParseError\": {},\n   \"Parser\": {\n      \"__init__\": [\n         \"self\",\n         \"text\",\n         \"formatter\"\n      ],\n      \"parse\": [\n         \"self\"\n      ],\n      \"parseText\": [\n         \"self\"\n      ]\n   },\n   \"PatchVisualizer\": {\n      \"ShowChannels\": [\n         \"self\",\n         \"patch\",\n         \"cmap\",\n         \"bg_func\"\n      ],\n      \"ShowImages\": [\n         \"self\",\n         \"patches\"\n      ],\n      \"ShowMultiple\": [\n         \"self\",\n         \"patches\",\n         \"ncols\",\n         \"cmap\",\n         \"bg_func\"\n      ],\n      \"ShowSingle\": [\n         \"self\",\n         \"patch\",\n         \"cmap\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"gap\"\n      ],\n      \"get_patch_shape\": [\n         \"self\",\n         \"patch\"\n      ]\n   },\n   \"PerChannelMinMaxObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"ch_axis\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"_forward\": [\n         \"self\",\n         \"x_orig\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x_orig\"\n      ],\n      \"get_qparams\": [\n         \"self\"\n      ]\n   },\n   \"PermuteNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Pipe\": {\n      \"__init__\": [\n         \"self\",\n         \"schema\",\n         \"obj_key\"\n      ],\n      \"_new_reader\": [\n         \"self\",\n         \"reader_init_net\"\n      ],\n      \"_new_writer\": [\n         \"self\",\n         \"writer_schema\",\n         \"writer_init_net\"\n      ],\n      \"num_readers\": [\n         \"self\"\n      ],\n      \"num_writers\": [\n         \"self\"\n      ],\n      \"reader\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"global_init_net\"\n      ],\n      \"writer\": [\n         \"self\"\n      ]\n   },\n   \"PipedReaderBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"builder\",\n         \"piper\"\n      ],\n      \"new_reader\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"PixelShuffle\": {\n      \"__init__\": [\n         \"self\",\n         \"upscale_factor\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Plan\": {\n      \"AddNets\": [\n         \"self\",\n         \"nets\"\n      ],\n      \"AddStep\": [\n         \"self\",\n         \"step\"\n      ],\n      \"Nets\": [\n         \"self\"\n      ],\n      \"Proto\": [\n         \"self\"\n      ],\n      \"Steps\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name_or_step\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"create_from_proto\": [\n         \"cls\",\n         \"plan_proto\"\n      ],\n      \"get_all_attributes\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"Poisson\": {\n      \"__init__\": [\n         \"self\",\n         \"rate\",\n         \"validate_args\"\n      ],\n      \"_log_normalizer\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_natural_params\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"PoissonNLLLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"log_input\",\n         \"full\",\n         \"size_average\",\n         \"eps\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"log_input\",\n         \"target\"\n      ]\n   },\n   \"Pool\": {\n      \"_repopulate_pool\": [\n         \"self\"\n      ],\n      \"_setup_queues\": [\n         \"self\"\n      ]\n   },\n   \"Pool1dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"C\",\n         \"L\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"Pool2dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"Pool3dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"kernel\",\n         \"stride\",\n         \"N\",\n         \"C\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"PoolTest\": {\n      \"test_int8_pooling\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"method\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"method\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"PoolingBench\": {\n      \"__init__\": [\n         \"self\",\n         \"case\",\n         \"mode\",\n         \"device\",\n         \"kernel_size\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ]\n   },\n   \"PositionWeighted\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"weight_optim\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"get_memory_usage\": [\n         \"self\"\n      ]\n   },\n   \"PowerTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"exponent\",\n         \"cache_size\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"PreConvertTest\": {\n      \"test_preConvert\": [\n         \"self\",\n         \"input_channels\",\n         \"batch_size\"\n      ]\n   },\n   \"PredictorExportMeta\": {\n      \"__new__\": [\n         \"cls\",\n         \"predict_net\",\n         \"parameters\",\n         \"inputs\",\n         \"outputs\",\n         \"shapes\",\n         \"name\",\n         \"extra_init_net\",\n         \"global_init_net\",\n         \"net_type\",\n         \"num_workers\",\n         \"trainer_prefix\"\n      ],\n      \"global_init_name\": [\n         \"self\"\n      ],\n      \"inputs_name\": [\n         \"self\"\n      ],\n      \"outputs_name\": [\n         \"self\"\n      ],\n      \"parameters_name\": [\n         \"self\"\n      ],\n      \"predict_init_name\": [\n         \"self\"\n      ],\n      \"predict_net_name\": [\n         \"self\"\n      ],\n      \"train_init_plan_name\": [\n         \"self\"\n      ],\n      \"train_plan_name\": [\n         \"self\"\n      ]\n   },\n   \"PredictorExporterTest\": {\n      \"_create_model\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_db_fails_without_params\": [\n         \"self\"\n      ],\n      \"test_load_device_scope\": [\n         \"self\"\n      ],\n      \"test_meta_constructor\": [\n         \"self\"\n      ],\n      \"test_meta_net_def_net_runs\": [\n         \"self\"\n      ],\n      \"test_param_intersection\": [\n         \"self\"\n      ]\n   },\n   \"PrefixFileStoreTest\": {\n      \"_create_store\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"PrefixTCPStoreTest\": {\n      \"_create_store\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"Printer\": {\n      \"__init__\": [\n         \"self\",\n         \"factor_prefixes\",\n         \"c2_syntax\"\n      ]\n   },\n   \"ProcessContext\": {\n      \"__init__\": [\n         \"self\",\n         \"processes\",\n         \"error_queues\"\n      ],\n      \"join\": [\n         \"self\",\n         \"timeout\"\n      ],\n      \"pids\": [\n         \"self\"\n      ]\n   },\n   \"ProcessGroupGlooTest\": {\n      \"_test_allgather_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_allgather_stress\": [\n         \"self\",\n         \"inputs\",\n         \"fn\"\n      ],\n      \"_test_allreduce_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_allreduce_coalesced_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_allreduce_coalesced_stress\": [\n         \"self\",\n         \"inputs\"\n      ],\n      \"_test_allreduce_stress\": [\n         \"self\",\n         \"inputs\"\n      ],\n      \"_test_broadcast_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_broadcast_stress\": [\n         \"self\",\n         \"inputs\"\n      ],\n      \"_test_gather_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_gather_stress\": [\n         \"self\",\n         \"inputs\",\n         \"fn\"\n      ],\n      \"_test_reduce_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_reduce_stress\": [\n         \"self\",\n         \"inputs\"\n      ],\n      \"_test_scatter_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"_test_scatter_stress\": [\n         \"self\",\n         \"inputs\",\n         \"fn\"\n      ],\n      \"_test_sparse_allreduce_basics\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"opts\": [\n         \"self\",\n         \"threads\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_allgather_basics\": [\n         \"self\"\n      ],\n      \"test_allgather_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_allgather_checks\": [\n         \"self\"\n      ],\n      \"test_allgather_coalesced_checks\": [\n         \"self\"\n      ],\n      \"test_allgather_stress\": [\n         \"self\"\n      ],\n      \"test_allgather_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_allreduce_basics\": [\n         \"self\"\n      ],\n      \"test_allreduce_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_allreduce_checks\": [\n         \"self\"\n      ],\n      \"test_allreduce_coalesced_basics\": [\n         \"self\"\n      ],\n      \"test_allreduce_coalesced_checks\": [\n         \"self\"\n      ],\n      \"test_allreduce_coalesced_checks_cuda\": [\n         \"self\"\n      ],\n      \"test_allreduce_coalesced_stress\": [\n         \"self\"\n      ],\n      \"test_allreduce_stress\": [\n         \"self\"\n      ],\n      \"test_allreduce_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_barrier_implies_wait\": [\n         \"self\"\n      ],\n      \"test_broadcast_basics\": [\n         \"self\"\n      ],\n      \"test_broadcast_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_broadcast_checks\": [\n         \"self\"\n      ],\n      \"test_broadcast_stress\": [\n         \"self\"\n      ],\n      \"test_broadcast_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_empty_tensors\": [\n         \"self\"\n      ],\n      \"test_gather_basics\": [\n         \"self\"\n      ],\n      \"test_gather_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_gather_checks\": [\n         \"self\"\n      ],\n      \"test_gather_stress\": [\n         \"self\"\n      ],\n      \"test_gather_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_multi_device_constructor\": [\n         \"self\"\n      ],\n      \"test_reduce_basics\": [\n         \"self\"\n      ],\n      \"test_reduce_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_reduce_checks\": [\n         \"self\"\n      ],\n      \"test_reduce_stress\": [\n         \"self\"\n      ],\n      \"test_reduce_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_round_robin\": [\n         \"self\"\n      ],\n      \"test_round_robin_create_destroy\": [\n         \"self\"\n      ],\n      \"test_scatter_basics\": [\n         \"self\"\n      ],\n      \"test_scatter_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_scatter_checks\": [\n         \"self\"\n      ],\n      \"test_scatter_stress\": [\n         \"self\"\n      ],\n      \"test_scatter_stress_cuda\": [\n         \"self\"\n      ],\n      \"test_send_recv_all_to_all\": [\n         \"self\"\n      ],\n      \"test_sparse_allreduce_basics\": [\n         \"self\"\n      ],\n      \"test_sparse_allreduce_basics_cuda\": [\n         \"self\"\n      ],\n      \"test_sparse_allreduce_checks\": [\n         \"self\"\n      ]\n   },\n   \"ProcessGroupNCCLTest\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_allgather_ops\": [\n         \"self\"\n      ],\n      \"test_allreduce_ops\": [\n         \"self\"\n      ],\n      \"test_barrier\": [\n         \"self\"\n      ],\n      \"test_broadcast_ops\": [\n         \"self\"\n      ],\n      \"test_empty_tensors\": [\n         \"self\"\n      ],\n      \"test_reduce_ops\": [\n         \"self\"\n      ],\n      \"test_reduce_scatter_ops\": [\n         \"self\"\n      ]\n   },\n   \"ProcessGroupShareTensorTest\": {\n      \"_init_pg_gloo\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"world_size\"\n      ],\n      \"_init_pg_nccl\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"world_size\"\n      ],\n      \"_test_allgather_chunk_process\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"shared_tensor\",\n         \"world_size\",\n         \"init_pg\",\n         \"c2p\",\n         \"p2c\"\n      ],\n      \"_test_allgather_process\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"shared_tensors\",\n         \"world_size\",\n         \"init_pg\",\n         \"c2p\",\n         \"p2c\"\n      ],\n      \"_test_allreduce_process\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"shared_tensors\",\n         \"world_size\",\n         \"init_pg\",\n         \"c2p\",\n         \"p2c\"\n      ],\n      \"_test_broadcast_process\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"shared_tensors\",\n         \"world_size\",\n         \"init_pg\",\n         \"c2p\",\n         \"p2c\"\n      ],\n      \"_test_multiprocess\": [\n         \"self\",\n         \"f\",\n         \"shared_tensors\",\n         \"init_pg\",\n         \"n_output\"\n      ],\n      \"_test_reduce_process\": [\n         \"cls\",\n         \"rank\",\n         \"filename\",\n         \"shared_tensors\",\n         \"world_size\",\n         \"init_pg\",\n         \"c2p\",\n         \"p2c\"\n      ],\n      \"opts\": [\n         \"cls\",\n         \"threads\"\n      ],\n      \"test_shared_allgather_chunk_gloo\": [\n         \"self\"\n      ],\n      \"test_shared_allgather_gloo\": [\n         \"self\"\n      ],\n      \"test_shared_allgather_nccl\": [\n         \"self\"\n      ],\n      \"test_shared_allreduce_gloo\": [\n         \"self\"\n      ],\n      \"test_shared_allreduce_nccl\": [\n         \"self\"\n      ],\n      \"test_shared_broadcast_gloo\": [\n         \"self\"\n      ],\n      \"test_shared_broadcast_nccl\": [\n         \"self\"\n      ],\n      \"test_shared_reduce_nccl\": [\n         \"self\"\n      ]\n   },\n   \"ProcessingReader\": {\n      \"__init__\": [\n         \"self\",\n         \"reader\",\n         \"processor\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"init_net\",\n         \"exit_net\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"finish_net\"\n      ]\n   },\n   \"ProfilingMode\": {},\n   \"ProgressbarStub\": {\n      \"update\": []\n   },\n   \"PropModule\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"m\",\n         \"name\"\n      ]\n   },\n   \"PruningContainer\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"add_pruning_method\": [\n         \"self\",\n         \"method\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"PseudoFP16Initializer\": {\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"init_net\",\n         \"shape\"\n      ],\n      \"update\": [\n         \"self\",\n         \"operator_name\",\n         \"kwargs\"\n      ]\n   },\n   \"PyTorchOperatorTestCase\": {\n      \"__init__\": [\n         \"self\",\n         \"op_bench\",\n         \"test_config\"\n      ],\n      \"_output_mean\": [\n         \"self\"\n      ],\n      \"_print_per_iter\": [\n         \"self\"\n      ],\n      \"run_backward\": [\n         \"self\",\n         \"num_runs\",\n         \"print_per_iter\"\n      ],\n      \"run_forward\": [\n         \"self\",\n         \"num_runs\",\n         \"print_per_iter\",\n         \"cuda_sync\"\n      ],\n      \"run_jit_forward\": [\n         \"self\",\n         \"num_runs\",\n         \"print_per_iter\",\n         \"cuda_sync\"\n      ]\n   },\n   \"PythonOpStats\": {},\n   \"PythonOpTest\": {\n      \"test_builder_tuple\": [\n         \"self\"\n      ],\n      \"test_caught_exception_doesnt_terminate\": [\n         \"self\",\n         \"x\"\n      ],\n      \"test_exception\": [\n         \"self\"\n      ],\n      \"test_exception_builder\": [\n         \"self\"\n      ],\n      \"test_feed\": [\n         \"self\",\n         \"x\"\n      ],\n      \"test_feed_with_gc\": [\n         \"self\",\n         \"x\"\n      ],\n      \"test_feed_with_helper_function\": [\n         \"self\",\n         \"x\"\n      ],\n      \"test_gradient\": [\n         \"self\",\n         \"x\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gradient_multiple\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gradient_multiple_with_indices\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_multithreaded_evaluation\": [\n         \"self\",\n         \"x\",\n         \"n\",\n         \"w\"\n      ],\n      \"test_reshape\": [\n         \"self\",\n         \"x\"\n      ],\n      \"test_workspace_manipulation\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"PythonStoreTest\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_set_get\": [\n         \"self\"\n      ]\n   },\n   \"QActivationBenchmarkBase\": {\n      \"_setup\": [\n         \"self\",\n         \"dims\",\n         \"contig\",\n         \"dtype\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\",\n         \"contig\",\n         \"inplace\",\n         \"dtype\",\n         \"op_func\"\n      ]\n   },\n   \"QAdaptiveAvgPool2dBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"input_size\",\n         \"output_size\",\n         \"contig\",\n         \"dtype\"\n      ]\n   },\n   \"QAvgPool2dBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"k\",\n         \"s\",\n         \"p\",\n         \"contig\",\n         \"dtype\"\n      ]\n   },\n   \"QBatchNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"device\",\n         \"dtype\"\n      ]\n   },\n   \"QCatBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"L\",\n         \"dim\",\n         \"contig\",\n         \"dtype\"\n      ]\n   },\n   \"QComparatorBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"dtype\",\n         \"contig\",\n         \"other_scalar\",\n         \"out_variant\",\n         \"op_func\"\n      ]\n   },\n   \"QConfig\": {\n      \"__new__\": [\n         \"cls\",\n         \"activation\",\n         \"weight\"\n      ]\n   },\n   \"QConfigDynamic\": {\n      \"__new__\": [\n         \"cls\",\n         \"activation\",\n         \"weight\"\n      ]\n   },\n   \"QConv2dBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IC\",\n         \"OC\",\n         \"H\",\n         \"W\",\n         \"G\",\n         \"kernel\",\n         \"stride\",\n         \"pad\"\n      ]\n   },\n   \"QConv2dChainedBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IC\",\n         \"OC\",\n         \"H\",\n         \"W\",\n         \"G\",\n         \"kernel\",\n         \"stride\",\n         \"pad\"\n      ]\n   },\n   \"QDynamicLinearBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IN\",\n         \"OUT\"\n      ]\n   },\n   \"QFunctional\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"add\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_relu\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"cat\": [\n         \"self\",\n         \"x\",\n         \"dim\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"mul\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"mul_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"QFunctionalAddBenchmarkBase\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"dtype\",\n         \"contig\",\n         \"op_func\"\n      ]\n   },\n   \"QGroupNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\",\n         \"num_groups\",\n         \"dtype\"\n      ]\n   },\n   \"QInstanceNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\",\n         \"dtype\"\n      ]\n   },\n   \"QInt32Storage\": {},\n   \"QInt8Storage\": {},\n   \"QInterpolateBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"dtype\",\n         \"mode\",\n         \"scale\",\n         \"contig\"\n      ]\n   },\n   \"QLayerNormBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"dims\",\n         \"dtype\"\n      ]\n   },\n   \"QLinearBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IN\",\n         \"OUT\"\n      ]\n   },\n   \"QMaxPool2dBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"k\",\n         \"s\",\n         \"p\",\n         \"contig\",\n         \"dtype\"\n      ]\n   },\n   \"QMethodNoInputBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"QMethodTensorInputBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"QObserverBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"C\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"qscheme\",\n         \"op_func\"\n      ]\n   },\n   \"QTopkOpBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"k\"\n      ]\n   },\n   \"QUInt8Storage\": {},\n   \"QUnaryOpBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"op_func\"\n      ]\n   },\n   \"QuadraGpuNet\": {\n      \"__init__\": [\n         \"self\",\n         \"gpus\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"QuantStub\": {\n      \"__init__\": [\n         \"self\",\n         \"qconfig\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"QuantStubModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"QuantSubModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"QuantWrapper\": {\n      \"__init__\": [\n         \"self\",\n         \"module\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"X\"\n      ]\n   },\n   \"QuantizationTestCase\": {\n      \"_checkModuleCorrectnessAgainstOrig\": [\n         \"self\",\n         \"orig_mod\",\n         \"test_mod\",\n         \"calib_data\"\n      ],\n      \"_checkScriptable\": [\n         \"self\",\n         \"orig_mod\",\n         \"script_mod\",\n         \"calib_data\",\n         \"check_save_load\"\n      ],\n      \"checkDynamicQuantizedLinear\": [\n         \"self\",\n         \"mod\",\n         \"dtype\"\n      ],\n      \"checkHasPrepModules\": [\n         \"self\",\n         \"module\"\n      ],\n      \"checkLinear\": [\n         \"self\",\n         \"mod\"\n      ],\n      \"checkNoPrepModules\": [\n         \"self\",\n         \"module\"\n      ],\n      \"checkObservers\": [\n         \"self\",\n         \"module\"\n      ],\n      \"checkQuantDequant\": [\n         \"self\",\n         \"mod\"\n      ],\n      \"checkQuantizedLinear\": [\n         \"self\",\n         \"mod\"\n      ],\n      \"checkScriptable\": [\n         \"self\",\n         \"orig_mod\",\n         \"calib_data\",\n         \"check_save_load\"\n      ],\n      \"checkWrappedQuantizedLinear\": [\n         \"self\",\n         \"mod\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"Quantize\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"zero_point\",\n         \"dtype\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"X\"\n      ],\n      \"from_float\": [\n         \"mod\"\n      ]\n   },\n   \"QuantizePerChannelBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"C\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"axis\",\n         \"mode\"\n      ]\n   },\n   \"QuantizePerTensorBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"C\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"mode\"\n      ]\n   },\n   \"QuantizedEngine\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"m\",\n         \"name\"\n      ]\n   },\n   \"QuantizedGRU\": {\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_impl\": [\n         \"self\",\n         \"input\",\n         \"hx\",\n         \"batch_sizes\",\n         \"max_batch_size\",\n         \"sorted_indices\"\n      ],\n      \"forward_packed\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_tensor\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"QuantizedGRUCell\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"QuantizedLSTM\": {\n      \"__init__\": [\n         \"self\",\n         \"other\",\n         \"dtype\"\n      ],\n      \"check_forward_args\": [\n         \"self\",\n         \"input\",\n         \"hidden\",\n         \"batch_sizes\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_impl\": [\n         \"self\",\n         \"input\",\n         \"hx\",\n         \"batch_sizes\",\n         \"max_batch_size\",\n         \"sorted_indices\"\n      ],\n      \"forward_packed\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"forward_tensor\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ],\n      \"permute_hidden\": [\n         \"self\",\n         \"hx\",\n         \"permutation\"\n      ]\n   },\n   \"QuantizedLSTMCell\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"QuantizedLinear\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_pack\": [\n         \"self\"\n      ],\n      \"_unpack\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"QuantizedLinearFP16\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_pack\": [\n         \"self\"\n      ],\n      \"_unpack\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"QuantizedRNNBase\": {\n      \"__init__\": [\n         \"self\",\n         \"other\",\n         \"dtype\"\n      ],\n      \"check_forward_args\": [\n         \"self\",\n         \"input\",\n         \"hidden\",\n         \"batch_sizes\"\n      ],\n      \"check_hidden_size\": [\n         \"self\",\n         \"hx\",\n         \"expected_hidden_size\",\n         \"msg\"\n      ],\n      \"check_input\": [\n         \"self\",\n         \"input\",\n         \"batch_sizes\"\n      ],\n      \"get_expected_hidden_size\": [\n         \"self\",\n         \"input\",\n         \"batch_sizes\"\n      ],\n      \"permute_hidden\": [\n         \"self\",\n         \"hx\",\n         \"permutation\"\n      ]\n   },\n   \"QuantizedRNNCell\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"QuantizedRNNCellBase\": {\n      \"__init__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_pack\": [\n         \"self\"\n      ],\n      \"_unpack\": [\n         \"self\"\n      ],\n      \"check_forward_hidden\": [\n         \"self\",\n         \"input\",\n         \"hx\",\n         \"hidden_label\"\n      ],\n      \"check_forward_input\": [\n         \"self\",\n         \"input\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"Queue\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"QueueWrapper\": {\n      \"__init__\": [\n         \"self\",\n         \"handler\",\n         \"schema\",\n         \"num_dequeue_records\"\n      ],\n      \"queue\": [\n         \"self\"\n      ],\n      \"reader\": [\n         \"self\"\n      ],\n      \"writer\": [\n         \"self\"\n      ]\n   },\n   \"RMACRegionsOpTest\": {\n      \"test\": [\n         \"self\",\n         \"n\",\n         \"h\",\n         \"w\",\n         \"scales\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"RMSprop\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"alpha\",\n         \"eps\",\n         \"weight_decay\",\n         \"momentum\",\n         \"centered\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"RNN\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"RNNBase\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\",\n         \"bias\",\n         \"batch_first\",\n         \"dropout\",\n         \"bidirectional\",\n         \"dtype\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"check_forward_args\": [\n         \"self\",\n         \"input\",\n         \"hidden\",\n         \"batch_sizes\"\n      ],\n      \"check_hidden_size\": [\n         \"self\",\n         \"hx\",\n         \"expected_hidden_size\",\n         \"msg\"\n      ],\n      \"check_input\": [\n         \"self\",\n         \"input\",\n         \"batch_sizes\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\"\n      ],\n      \"get_expected_hidden_size\": [\n         \"self\",\n         \"input\",\n         \"batch_sizes\"\n      ],\n      \"permute_hidden\": [\n         \"self\",\n         \"hx\",\n         \"permutation\"\n      ]\n   },\n   \"RNNCell\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"bias\",\n         \"nonlinearity\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hx\"\n      ]\n   },\n   \"RNNCellBase\": {\n      \"__init__\": [\n         \"self\",\n         \"input_size\",\n         \"hidden_size\",\n         \"bias\",\n         \"num_chunks\"\n      ],\n      \"check_forward_hidden\": [\n         \"self\",\n         \"input\",\n         \"hx\",\n         \"hidden_label\"\n      ],\n      \"check_forward_input\": [\n         \"self\",\n         \"input\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"RNNCellTest\": {\n      \"lstm_base\": [\n         \"self\",\n         \"seed\",\n         \"lstm_type\",\n         \"outputs_with_grads\",\n         \"memory_optim\",\n         \"input_tensor\",\n         \"forget_bias\",\n         \"fwd_only\",\n         \"drop_states\"\n      ],\n      \"lstm_with_attention\": [\n         \"self\",\n         \"create_lstm_with_attention\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"ref\",\n         \"gc\"\n      ],\n      \"test_layer_norm_lstm_params\": [\n         \"self\"\n      ],\n      \"test_layered_lstm\": [\n         \"self\",\n         \"input_tensor\"\n      ],\n      \"test_lstm\": [\n         \"self\"\n      ],\n      \"test_lstm_extract_predictor_net\": [\n         \"self\"\n      ],\n      \"test_lstm_params\": [\n         \"self\"\n      ],\n      \"test_lstm_unit_recurrent_network\": [\n         \"self\",\n         \"seed\",\n         \"n\",\n         \"d\",\n         \"t\",\n         \"dtype\",\n         \"dc\",\n         \"use_sequence_lengths\",\n         \"gc\"\n      ],\n      \"test_lstm_with_coverage_attention\": [\n         \"self\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lstm_with_dot_attention_different_dim\": [\n         \"self\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lstm_with_dot_attention_same_dim\": [\n         \"self\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lstm_with_recurrent_attention\": [\n         \"self\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lstm_with_regular_attention\": [\n         \"self\",\n         \"encoder_output_length\",\n         \"encoder_output_dim\",\n         \"decoder_input_length\",\n         \"decoder_state_dim\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_milstm\": [\n         \"self\"\n      ],\n      \"test_milstm_params\": [\n         \"self\"\n      ],\n      \"test_multi_lstm\": [\n         \"self\",\n         \"input_length\",\n         \"dim_in\",\n         \"max_num_units\",\n         \"num_layers\",\n         \"batch_size\"\n      ],\n      \"test_norm_lstm\": [\n         \"self\"\n      ],\n      \"test_norm_milstm\": [\n         \"self\"\n      ],\n      \"test_unroll_attention\": [\n         \"self\",\n         \"input_tensor\",\n         \"encoder_length\",\n         \"encoder_dim\",\n         \"hidden_units\",\n         \"num_layers\",\n         \"residual\",\n         \"final_dropout\"\n      ],\n      \"test_unroll_lstm\": [\n         \"self\",\n         \"input_tensor\",\n         \"dim_out\",\n         \"outputs_with_grads\"\n      ],\n      \"test_unroll_mul\": [\n         \"self\",\n         \"input_tensor\",\n         \"num_layers\",\n         \"outputs_with_grad\"\n      ]\n   },\n   \"RNNModel\": {\n      \"__init__\": [\n         \"self\",\n         \"rnn_type\",\n         \"ntoken\",\n         \"ninp\",\n         \"nhid\",\n         \"nlayers\",\n         \"dropout\",\n         \"tie_weights\",\n         \"batchsize\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"hidden\"\n      ],\n      \"init_hidden\": [\n         \"self\",\n         \"bsz\"\n      ],\n      \"init_weights\": [\n         \"self\"\n      ],\n      \"repackage_hidden\": [\n         \"h\"\n      ]\n   },\n   \"RPCExecMode\": {},\n   \"RReLU\": {\n      \"__init__\": [\n         \"self\",\n         \"lower\",\n         \"upper\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"RRef\": {\n      \"__init__\": [\n         \"self\",\n         \"types\"\n      ]\n   },\n   \"RRefAPITest\": {\n      \"test_local_rref_local_value\": [\n         \"self\"\n      ],\n      \"test_rref_is_owner\": [\n         \"self\"\n      ],\n      \"test_rref_local_value\": [\n         \"self\"\n      ]\n   },\n   \"RRefProxy\": {\n      \"__getattr__\": [\n         \"self\",\n         \"func_name\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"rref\",\n         \"rpc_api\"\n      ]\n   },\n   \"RandomDatasetMock\": {\n      \"__getitem__\": [\n         \"self\",\n         \"index\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"RandomFourierFeatures\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"sigma\",\n         \"w_init\",\n         \"b_init\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"RandomSample\": {\n      \"__init__\": [\n         \"self\",\n         \"configs\"\n      ],\n      \"_distribution_func\": [\n         \"self\",\n         \"key\",\n         \"weights\"\n      ],\n      \"_random_sample\": [\n         \"self\",\n         \"key\",\n         \"values\",\n         \"weights\"\n      ],\n      \"get_one_set_of_inputs\": [\n         \"self\"\n      ]\n   },\n   \"RandomSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"data_source\",\n         \"replacement\",\n         \"num_samples\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"num_samples\": [\n         \"self\"\n      ]\n   },\n   \"RandomStructured\": {\n      \"__init__\": [\n         \"self\",\n         \"amount\",\n         \"dim\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\",\n         \"amount\",\n         \"dim\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"RandomUnstructured\": {\n      \"__init__\": [\n         \"self\",\n         \"amount\"\n      ],\n      \"apply\": [\n         \"cls\",\n         \"module\",\n         \"name\",\n         \"amount\"\n      ],\n      \"compute_mask\": [\n         \"self\",\n         \"t\",\n         \"default_mask\"\n      ]\n   },\n   \"ReLU\": {\n      \"__init__\": [\n         \"self\",\n         \"inplace\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"mod\"\n      ]\n   },\n   \"ReLU6\": {\n      \"__init__\": [\n         \"self\",\n         \"inplace\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"from_float\": [\n         \"mod\"\n      ]\n   },\n   \"Reader\": {\n      \"__init__\": [\n         \"self\",\n         \"schema\"\n      ],\n      \"_set_schema\": [\n         \"self\",\n         \"schema\"\n      ],\n      \"execution_step\": [\n         \"self\",\n         \"reader_net_name\",\n         \"external_should_stop\"\n      ],\n      \"read\": [\n         \"self\",\n         \"read_net\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"read_record\": [\n         \"self\",\n         \"read_net\"\n      ],\n      \"read_record_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"reset\": [\n         \"self\",\n         \"net\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"finish_net\"\n      ]\n   },\n   \"ReaderBuilder\": {\n      \"new_reader\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"ReaderWithDelay\": {\n      \"__init__\": [\n         \"self\",\n         \"reader\",\n         \"delay\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ]\n   },\n   \"ReaderWithLimit\": {\n      \"__init__\": [\n         \"self\",\n         \"reader\",\n         \"num_iter\"\n      ],\n      \"check_limiter_condition\": [\n         \"self\",\n         \"stop_condition_net\"\n      ],\n      \"setup_limiter\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ]\n   },\n   \"ReaderWithLimitBase\": {\n      \"__init__\": [\n         \"self\",\n         \"reader\"\n      ],\n      \"check_limiter_condition\": [\n         \"self\",\n         \"stop_condition_net\"\n      ],\n      \"data_finished\": [\n         \"self\"\n      ],\n      \"read_ex\": [\n         \"self\",\n         \"local_init_net\",\n         \"local_finish_net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ],\n      \"setup_limiter\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ]\n   },\n   \"ReaderWithTimeLimit\": {\n      \"__init__\": [\n         \"self\",\n         \"reader\",\n         \"duration\"\n      ],\n      \"check_limiter_condition\": [\n         \"self\",\n         \"stop_condition_net\"\n      ],\n      \"setup_limiter\": [\n         \"self\",\n         \"global_init_net\",\n         \"global_finish_net\"\n      ]\n   },\n   \"RecordQueue\": {\n      \"__init__\": [\n         \"self\",\n         \"fields\",\n         \"name\",\n         \"capacity\",\n         \"enforce_unique_name\",\n         \"num_threads\"\n      ],\n      \"build\": [\n         \"self\",\n         \"reader\",\n         \"process\"\n      ]\n   },\n   \"RecordingObserver\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"get_tensor_value\": [\n         \"self\"\n      ]\n   },\n   \"RecurrentNetworkParallelTest\": {\n      \"run_model\": [\n         \"self\",\n         \"devices\",\n         \"gpu\"\n      ],\n      \"test_equiv_recurrent\": [\n         \"self\"\n      ]\n   },\n   \"RecurrentNetworkTest\": {\n      \"_convolution_1d\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"conv_window\",\n         \"conv_filter\",\n         \"conv_bias\",\n         \"output_name\",\n         \"left_pad\"\n      ],\n      \"simple_rnn\": [\n         \"self\",\n         \"T\",\n         \"n\",\n         \"d\",\n         \"model\",\n         \"step\",\n         \"input_t\",\n         \"output_t\",\n         \"output_t_prev\",\n         \"input_blob\",\n         \"initial_input_blob\"\n      ],\n      \"test_extract\": [\n         \"self\",\n         \"T\",\n         \"n\",\n         \"d\"\n      ],\n      \"test_mul\": [\n         \"self\",\n         \"T\",\n         \"n\",\n         \"d\"\n      ],\n      \"test_stateful_convolution_forward_only\": [\n         \"self\",\n         \"sequence_length\",\n         \"conv_window\",\n         \"batch_size\",\n         \"state_size\"\n      ],\n      \"test_sum_mul\": [\n         \"self\",\n         \"T\",\n         \"n\",\n         \"d\"\n      ]\n   },\n   \"RecursiveScriptModule\": {\n      \"__bool__\": [\n         \"self\"\n      ],\n      \"__contains__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"cpp_module\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"attr\",\n         \"value\"\n      ],\n      \"_construct\": [\n         \"cpp_module\",\n         \"init_fn\"\n      ],\n      \"_replicate_for_data_parallel\": [\n         \"self\"\n      ],\n      \"_save_for_lite_interpreter\": [\n         \"self\"\n      ],\n      \"code\": [\n         \"self\"\n      ],\n      \"code_with_constants\": [\n         \"self\"\n      ],\n      \"copy\": [\n         \"self\"\n      ],\n      \"copy_instance\": [\n         \"self\"\n      ],\n      \"define\": [\n         \"self\",\n         \"src\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward_magic_method\": [\n         \"self\",\n         \"method_name\"\n      ],\n      \"get_debug_state\": [\n         \"self\"\n      ],\n      \"graph\": [\n         \"self\"\n      ],\n      \"graph_for\": [\n         \"self\"\n      ],\n      \"inlined_graph\": [\n         \"self\"\n      ],\n      \"original_name\": [\n         \"self\"\n      ],\n      \"save\": [\n         \"self\"\n      ],\n      \"save_to_buffer\": [\n         \"self\"\n      ]\n   },\n   \"ReduceAddCoalesced\": {\n      \"backward\": [\n         \"ctx\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"destination\",\n         \"num_inputs\"\n      ]\n   },\n   \"ReduceBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"case\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": []\n   },\n   \"ReduceColBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"ReduceLROnPlateau\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"mode\",\n         \"factor\",\n         \"patience\",\n         \"verbose\",\n         \"threshold\",\n         \"threshold_mode\",\n         \"cooldown\",\n         \"min_lr\",\n         \"eps\"\n      ],\n      \"_init_is_better\": [\n         \"self\",\n         \"mode\",\n         \"threshold\",\n         \"threshold_mode\"\n      ],\n      \"_reduce_lr\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"_reset\": [\n         \"self\"\n      ],\n      \"in_cooldown\": [\n         \"self\"\n      ],\n      \"is_better\": [\n         \"self\",\n         \"a\",\n         \"best\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"metrics\",\n         \"epoch\"\n      ]\n   },\n   \"ReduceMidBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"ReduceRowBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\",\n         \"K\"\n      ],\n      \"module\": []\n   },\n   \"ReducerModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\",\n         \"use_fc3\"\n      ]\n   },\n   \"ReducerTest\": {\n      \"_create_mixed_precision_model\": [\n         \"self\"\n      ],\n      \"_create_reducer_for_models\": [\n         \"self\",\n         \"models\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_forward_backward_multi_replica\": [\n         \"self\"\n      ],\n      \"test_forward_backward_optimizer\": [\n         \"self\"\n      ],\n      \"test_forward_backward_single_replica\": [\n         \"self\"\n      ],\n      \"test_forward_backward_unused_parameters\": [\n         \"self\"\n      ],\n      \"test_multi_dtype_multi_bucket\": [\n         \"self\"\n      ],\n      \"test_multi_dtype_single_bucket\": [\n         \"self\"\n      ],\n      \"test_single_dtype_single_bucket\": [\n         \"self\"\n      ]\n   },\n   \"ReflectionPad1d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"ReflectionPad2d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"RegularizationBy\": {},\n   \"Regularizer\": {\n      \"__call__\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\",\n         \"by\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_ensure_clipped\": [\n         \"self\",\n         \"net\",\n         \"param\",\n         \"grad\",\n         \"min\",\n         \"max\",\n         \"open_range\",\n         \"left_open\",\n         \"right_open\"\n      ],\n      \"_feature_grouping\": [\n         \"self\",\n         \"param\",\n         \"net\"\n      ],\n      \"_run_after_optimizer\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ],\n      \"_run_on_loss\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param\",\n         \"grad\"\n      ]\n   },\n   \"RegularizerContext\": {\n      \"get_regularizer\": [\n         \"self\",\n         \"name\"\n      ],\n      \"has_regularizer\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"RelaxedBernoulli\": {\n      \"__init__\": [\n         \"self\",\n         \"temperature\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"temperature\": [\n         \"self\"\n      ]\n   },\n   \"RelaxedOneHotCategorical\": {\n      \"__init__\": [\n         \"self\",\n         \"temperature\",\n         \"probs\",\n         \"logits\",\n         \"validate_args\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"logits\": [\n         \"self\"\n      ],\n      \"probs\": [\n         \"self\"\n      ],\n      \"temperature\": [\n         \"self\"\n      ]\n   },\n   \"ReluTest\": {\n      \"test_int8_relu\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"RemapEntry\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__hash__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"blob\",\n         \"device\"\n      ]\n   },\n   \"RemovableHandle\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"tb\"\n      ],\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"hooks_dict\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"remove\": [\n         \"self\"\n      ]\n   },\n   \"RendezvousEnvTest\": {\n      \"test_common_errors\": [\n         \"self\"\n      ],\n      \"test_nominal\": [\n         \"self\"\n      ]\n   },\n   \"RendezvousFileTest\": {\n      \"test_common_errors\": [\n         \"self\"\n      ],\n      \"test_nominal\": [\n         \"self\"\n      ]\n   },\n   \"RendezvousTCPTest\": {\n      \"create_tcp_url\": [\n         \"self\"\n      ],\n      \"test_common_errors\": [\n         \"self\"\n      ],\n      \"test_nominal\": [\n         \"self\"\n      ],\n      \"test_tcp_store_timeout_set\": [\n         \"self\"\n      ]\n   },\n   \"RendezvousTest\": {\n      \"test_unknown_handler\": [\n         \"self\"\n      ]\n   },\n   \"ReplicationPad1d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"ReplicationPad2d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"ReplicationPad3d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"Report\": {\n      \"__init__\": [\n         \"self\",\n         \"text\",\n         \"errors\"\n      ]\n   },\n   \"ResNetBase\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ResNetBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"prev_blob\",\n         \"no_bias\",\n         \"is_test\",\n         \"bn_epsilon\",\n         \"bn_momentum\"\n      ],\n      \"add_bottleneck\": [\n         \"self\",\n         \"input_filters\",\n         \"base_filters\",\n         \"output_filters\",\n         \"stride\",\n         \"group\",\n         \"spatial_batch_norm\"\n      ],\n      \"add_conv\": [\n         \"self\",\n         \"in_filters\",\n         \"out_filters\",\n         \"kernel\",\n         \"stride\",\n         \"group\",\n         \"pad\"\n      ],\n      \"add_relu\": [\n         \"self\"\n      ],\n      \"add_simple_block\": [\n         \"self\",\n         \"input_filters\",\n         \"num_filters\",\n         \"down_sampling\",\n         \"spatial_batch_norm\"\n      ],\n      \"add_spatial_bn\": [\n         \"self\",\n         \"num_filters\"\n      ]\n   },\n   \"ResNetModelHelper\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"split\",\n         \"opts\"\n      ],\n      \"add_shortcut\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"prefix\"\n      ],\n      \"basic_block\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"prefix\",\n         \"dim_inner\",\n         \"group\"\n      ],\n      \"bottleneck_block\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"prefix\",\n         \"dim_inner\",\n         \"group\"\n      ],\n      \"conv_bn\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"stride\",\n         \"prefix\",\n         \"group\",\n         \"pad\"\n      ],\n      \"conv_bn_relu\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"stride\",\n         \"prefix\",\n         \"pad\",\n         \"group\"\n      ],\n      \"group_bottleneck_block\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"prefix\",\n         \"dim_inner\",\n         \"group\"\n      ],\n      \"multiway_bottleneck_block\": [\n         \"self\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"prefix\",\n         \"dim_inner\",\n         \"group\"\n      ],\n      \"residual_layer\": [\n         \"self\",\n         \"block_fn\",\n         \"blob_in\",\n         \"dim_in\",\n         \"dim_out\",\n         \"stride\",\n         \"num_blocks\",\n         \"prefix\",\n         \"dim_inner\",\n         \"group\"\n      ]\n   },\n   \"ReservoirSampling\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"num_to_collect\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"ResidualBlock\": {\n      \"__init__\": [\n         \"self\",\n         \"n_filters\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"Resize\": {\n      \"backward\": [\n         \"ctx\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"tensor\",\n         \"sizes\"\n      ]\n   },\n   \"ResnetMemongerTest\": {\n      \"test_resnet_forward_only\": [\n         \"self\"\n      ],\n      \"test_resnet_forward_only_fast_simplenet\": [\n         \"self\"\n      ],\n      \"test_resnet_shared_grads\": [\n         \"self\",\n         \"with_shapes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"ReverseLSTMLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"cell\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"state\"\n      ]\n   },\n   \"ReversePseudoFP16Initializer\": {\n      \"create_param\": [\n         \"self\",\n         \"param_name\",\n         \"init_net\",\n         \"shape\"\n      ],\n      \"update\": [\n         \"self\",\n         \"operator_name\",\n         \"kwargs\"\n      ]\n   },\n   \"RmsPropOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"decay\",\n         \"momentum\",\n         \"epsilon\",\n         \"policy\",\n         \"engine\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"RnnModelWithPackedSequence\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"batch_first\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"RoIAlignRotatedOp\": {\n      \"bbox_xywh_to_xyxy\": [\n         \"self\",\n         \"boxes\"\n      ],\n      \"test_horizontal_rois\": [\n         \"self\",\n         \"H\",\n         \"W\",\n         \"C\",\n         \"num_rois\",\n         \"pooled_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_simple_rotations\": [\n         \"self\",\n         \"H\",\n         \"W\",\n         \"C\",\n         \"num_rois\",\n         \"pooled_size\",\n         \"angle\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"RowWiseDNNLowPFullyConnectedOpTest\": {\n      \"test_rowwise_dnnlowp_fully_connected_int\": [\n         \"self\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"in_quantized\",\n         \"out_quantized\",\n         \"prepack_weight\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"RpcAgentTestFixture\": {\n      \"init_method\": [\n         \"self\"\n      ],\n      \"rpc_backend\": [\n         \"self\"\n      ],\n      \"rpc_backend_options\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"RpcTest\": {\n      \"_create_rref\": [\n         \"self\"\n      ],\n      \"_gpu_tensor_list_arg\": [\n         \"tensor_list\"\n      ],\n      \"_profiler_test_with_rpc\": [\n         \"self\",\n         \"rpc_exec_mode\",\n         \"func\",\n         \"args\",\n         \"use_record_function\"\n      ],\n      \"_return_gpu_tensor\": [],\n      \"_return_gpu_tensor_list\": [],\n      \"_run_uneven_workload\": [\n         \"self\",\n         \"num_repeat\"\n      ],\n      \"_stress_test_rpc\": [\n         \"self\",\n         \"f\",\n         \"repeat\",\n         \"args\"\n      ],\n      \"_test_multi_remote_call\": [\n         \"self\",\n         \"fn\",\n         \"args_fn\",\n         \"kwargs_fn\"\n      ],\n      \"_test_rref_leak\": [\n         \"self\",\n         \"_mock_delete_all_user_rrefs\",\n         \"ignore_leak\"\n      ],\n      \"_test_rref_proxy_class\": [\n         \"self\",\n         \"dst\"\n      ],\n      \"_test_rref_proxy_tensor\": [\n         \"self\",\n         \"dst\"\n      ],\n      \"_test_self_remote_rref_as_remote_arg\": [\n         \"self\",\n         \"dst\"\n      ],\n      \"_test_self_remote_rref_as_rpc_arg\": [\n         \"self\",\n         \"dst\"\n      ],\n      \"test_add\": [\n         \"self\"\n      ],\n      \"test_add_with_id\": [\n         \"self\"\n      ],\n      \"test_async_add\": [\n         \"self\"\n      ],\n      \"test_async_record_function_cbs_jit_call\": [\n         \"self\"\n      ],\n      \"test_async_record_function_double_end_callbacks\": [\n         \"self\"\n      ],\n      \"test_build_rpc_profiling_key\": [\n         \"self\"\n      ],\n      \"test_builtin_remote_ret\": [\n         \"self\"\n      ],\n      \"test_builtin_remote_self\": [\n         \"self\"\n      ],\n      \"test_call_method_on_rref\": [\n         \"self\"\n      ],\n      \"test_cuda\": [\n         \"self\"\n      ],\n      \"test_debug_info\": [\n         \"self\"\n      ],\n      \"test_default_timeout_used\": [\n         \"self\"\n      ],\n      \"test_disable_gil_profiling\": [\n         \"self\"\n      ],\n      \"test_dist_init_decorator\": [\n         \"self\"\n      ],\n      \"test_duplicate_name\": [\n         \"self\"\n      ],\n      \"test_expected_src\": [\n         \"self\"\n      ],\n      \"test_function_not_on_callee\": [\n         \"self\"\n      ],\n      \"test_get_worker_infos\": [\n         \"self\"\n      ],\n      \"test_graceful_shutdown_with_uneven_workload\": [\n         \"self\"\n      ],\n      \"test_handle_send_exceptions\": [\n         \"self\"\n      ],\n      \"test_ignore_rref_leak\": [\n         \"self\"\n      ],\n      \"test_invalid_names\": [\n         \"self\"\n      ],\n      \"test_local_rref_no_fork\": [\n         \"self\"\n      ],\n      \"test_local_shutdown\": [\n         \"self\"\n      ],\n      \"test_local_shutdown_with_rpc\": [\n         \"self\"\n      ],\n      \"test_local_value_not_on_owner\": [\n         \"self\"\n      ],\n      \"test_multi_builtin_remote_ret\": [\n         \"self\"\n      ],\n      \"test_multi_layer_nested_async_rpc\": [\n         \"self\"\n      ],\n      \"test_multi_py_udf_remote\": [\n         \"self\"\n      ],\n      \"test_multi_rpc\": [\n         \"self\"\n      ],\n      \"test_nested_remote\": [\n         \"self\"\n      ],\n      \"test_nested_rpc\": [\n         \"self\"\n      ],\n      \"test_nested_rref\": [\n         \"self\"\n      ],\n      \"test_nested_rref_stress\": [\n         \"self\"\n      ],\n      \"test_non_cont_tensors\": [\n         \"self\"\n      ],\n      \"test_non_garbage_collected_user_rref_due_to_local_circular_dependency\": [\n         \"self\"\n      ],\n      \"test_nonzero\": [\n         \"self\"\n      ],\n      \"test_owner_equality\": [\n         \"self\"\n      ],\n      \"test_pass_local_rrefs\": [\n         \"self\"\n      ],\n      \"test_process_group_debug_info\": [\n         \"self\"\n      ],\n      \"test_process_group_options_throw_on_timedelta_timeout\": [\n         \"self\"\n      ],\n      \"test_process_group_set_default_timeout\": [\n         \"self\"\n      ],\n      \"test_profiler_with_async_rpc_builtin\": [\n         \"self\"\n      ],\n      \"test_profiler_with_async_rpc_udf\": [\n         \"self\"\n      ],\n      \"test_profiler_with_remote_builtin\": [\n         \"self\"\n      ],\n      \"test_profiler_with_remote_udf\": [\n         \"self\"\n      ],\n      \"test_profiler_with_script_async_rpc\": [\n         \"self\"\n      ],\n      \"test_profiler_with_script_remote_rpc\": [\n         \"self\"\n      ],\n      \"test_profiler_with_script_sync_rpc\": [\n         \"self\"\n      ],\n      \"test_profiler_with_sync_rpc_builtin\": [\n         \"self\"\n      ],\n      \"test_profiler_with_sync_rpc_udf\": [\n         \"self\"\n      ],\n      \"test_py_built_in\": [\n         \"self\"\n      ],\n      \"test_py_class_constructor\": [\n         \"self\"\n      ],\n      \"test_py_class_instance_method\": [\n         \"self\"\n      ],\n      \"test_py_class_method\": [\n         \"self\"\n      ],\n      \"test_py_class_static_method\": [\n         \"self\"\n      ],\n      \"test_py_function_exception\": [\n         \"self\"\n      ],\n      \"test_py_multi_async_call\": [\n         \"self\"\n      ],\n      \"test_py_nested_pickle\": [\n         \"self\"\n      ],\n      \"test_py_no_return_result\": [\n         \"self\"\n      ],\n      \"test_py_raise_in_user_func\": [\n         \"self\"\n      ],\n      \"test_py_rpc_rref_args\": [\n         \"self\"\n      ],\n      \"test_py_rref_args\": [\n         \"self\"\n      ],\n      \"test_py_rref_args_user_share\": [\n         \"self\"\n      ],\n      \"test_py_tensors\": [\n         \"self\"\n      ],\n      \"test_py_tensors_in_container\": [\n         \"self\"\n      ],\n      \"test_py_tensors_multi_async_call\": [\n         \"self\"\n      ],\n      \"test_py_udf_remote\": [\n         \"self\"\n      ],\n      \"test_py_user_defined\": [\n         \"self\"\n      ],\n      \"test_register_rpc_backend_and_set_and_start_rpc_backend\": [\n         \"self\",\n         \"mock_rpc_agent\",\n         \"mock_dist_autograd_init\"\n      ],\n      \"test_reinit\": [\n         \"self\"\n      ],\n      \"test_remote_same_worker\": [\n         \"self\"\n      ],\n      \"test_remote_throw\": [\n         \"self\"\n      ],\n      \"test_remote_with_exception\": [\n         \"self\"\n      ],\n      \"test_requires_process_group_agent_decorator\": [\n         \"self\"\n      ],\n      \"test_return_local_rrefs\": [\n         \"self\"\n      ],\n      \"test_rpc_return_rref\": [\n         \"self\"\n      ],\n      \"test_rpc_timeouts\": [\n         \"self\"\n      ],\n      \"test_rref_context_debug_info\": [\n         \"self\"\n      ],\n      \"test_rref_forward_chain\": [\n         \"self\"\n      ],\n      \"test_rref_get_future\": [\n         \"self\"\n      ],\n      \"test_rref_leak\": [\n         \"self\"\n      ],\n      \"test_rref_proxy_class\": [\n         \"self\"\n      ],\n      \"test_rref_proxy_class_self\": [\n         \"self\"\n      ],\n      \"test_rref_proxy_reuse\": [\n         \"self\"\n      ],\n      \"test_rref_proxy_tensor\": [\n         \"self\"\n      ],\n      \"test_rref_proxy_tensor_self\": [\n         \"self\"\n      ],\n      \"test_rref_py_pickle_not_supported\": [\n         \"self\"\n      ],\n      \"test_rref_str\": [\n         \"self\"\n      ],\n      \"test_scalar_add\": [\n         \"self\"\n      ],\n      \"test_self_add\": [\n         \"self\"\n      ],\n      \"test_self_py_udf_remote\": [\n         \"self\"\n      ],\n      \"test_self_remote_rref_as_remote_arg\": [\n         \"self\"\n      ],\n      \"test_self_remote_rref_as_rpc_arg\": [\n         \"self\"\n      ],\n      \"test_self_remote_rref_as_self_remote_arg\": [\n         \"self\"\n      ],\n      \"test_self_remote_rref_as_self_rpc_arg\": [\n         \"self\"\n      ],\n      \"test_set_and_get_default_rpc_timeout\": [\n         \"self\"\n      ],\n      \"test_set_and_get_num_send_recv_threads\": [\n         \"self\"\n      ],\n      \"test_shutdown_followed_by_rpc\": [\n         \"self\"\n      ],\n      \"test_single_threaded_rref_owner\": [\n         \"self\"\n      ],\n      \"test_single_threaded_rref_to_here\": [\n         \"self\"\n      ],\n      \"test_stress_heavy_rpc\": [\n         \"self\"\n      ],\n      \"test_stress_heavy_rpc_torchscript\": [\n         \"self\"\n      ],\n      \"test_stress_light_rpc\": [\n         \"self\"\n      ],\n      \"test_use_rpc_pickler\": [\n         \"self\"\n      ],\n      \"test_use_rref_after_shutdown\": [\n         \"self\"\n      ],\n      \"test_user_rrefs_confirmed\": [\n         \"self\"\n      ],\n      \"test_user_rrefs_confirmed_remote\": [\n         \"self\"\n      ],\n      \"test_wait_all_workers\": [\n         \"self\"\n      ],\n      \"test_wait_all_workers_twice\": [\n         \"self\"\n      ],\n      \"test_worker_id\": [\n         \"self\"\n      ],\n      \"test_world_size_one\": [\n         \"self\"\n      ]\n   },\n   \"RpcTestWithSpawn\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"Rprop\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"etas\",\n         \"step_sizes\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"SELU\": {\n      \"__init__\": [\n         \"self\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"SGD\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"momentum\",\n         \"dampening\",\n         \"weight_decay\",\n         \"nesterov\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"SRResNet\": {\n      \"__init__\": [\n         \"self\",\n         \"rescale_factor\",\n         \"n_filters\",\n         \"n_blocks\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SWALR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"swa_lr\",\n         \"anneal_epochs\",\n         \"anneal_strategy\",\n         \"last_epoch\"\n      ],\n      \"_cosine_anneal\": [\n         \"t\"\n      ],\n      \"_format_param\": [\n         \"optimizer\",\n         \"swa_lrs\"\n      ],\n      \"_get_initial_lr\": [\n         \"lr\",\n         \"swa_lr\",\n         \"alpha\"\n      ],\n      \"_linear_anneal\": [\n         \"t\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"SWATestCNN\": {\n      \"__init__\": [\n         \"self\",\n         \"input_channels\"\n      ],\n      \"compute_preactivation\": [\n         \"self\",\n         \"x\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SWATestDNN\": {\n      \"__init__\": [\n         \"self\",\n         \"input_features\"\n      ],\n      \"compute_preactivation\": [\n         \"self\",\n         \"x\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SampleModule\": {\n      \"__init__\": [\n         \"self\",\n         \"has_parity\",\n         \"has_submodule\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ]\n   },\n   \"Sampler\": {\n      \"__init__\": [\n         \"self\",\n         \"data_source\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ]\n   },\n   \"SamplingTrain\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"prediction_layer\",\n         \"output_dims\",\n         \"subtract_log_odd\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"SamplingTrainableMixin\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"param_blobs\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"param_blobs\": [\n         \"self\"\n      ],\n      \"train_param_blobs\": [\n         \"self\",\n         \"blobs\"\n      ]\n   },\n   \"Scalar\": {\n      \"__call__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dtype\",\n         \"blob\",\n         \"metadata\"\n      ],\n      \"_pprint_impl\": [\n         \"self\",\n         \"indent\",\n         \"str_buffer\"\n      ],\n      \"_validate_metadata\": [\n         \"self\"\n      ],\n      \"all_scalars\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\",\n         \"keep_blobs\"\n      ],\n      \"field_blobs\": [\n         \"self\"\n      ],\n      \"field_metadata\": [\n         \"self\"\n      ],\n      \"field_names\": [\n         \"self\"\n      ],\n      \"field_type\": [\n         \"self\"\n      ],\n      \"field_types\": [\n         \"self\"\n      ],\n      \"get\": [\n         \"self\"\n      ],\n      \"has_blobs\": [\n         \"self\"\n      ],\n      \"id\": [\n         \"self\"\n      ],\n      \"metadata\": [\n         \"self\"\n      ],\n      \"set\": [\n         \"self\",\n         \"dtype\",\n         \"blob\",\n         \"metadata\",\n         \"unsafe\"\n      ],\n      \"set_metadata\": [\n         \"self\",\n         \"value\"\n      ],\n      \"set_type\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"set_value\": [\n         \"self\",\n         \"blob\",\n         \"throw_on_type_mismatch\",\n         \"unsafe\"\n      ]\n   },\n   \"Scatter\": {\n      \"backward\": [\n         \"ctx\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"target_gpus\",\n         \"chunk_sizes\",\n         \"dim\",\n         \"input\"\n      ]\n   },\n   \"SchedulerTestNet\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"ScriptMeta\": {\n      \"__init__\": [\n         \"cls\",\n         \"name\",\n         \"bases\",\n         \"attrs\"\n      ]\n   },\n   \"ScriptModule\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"ScriptWarning\": {},\n   \"SeedDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"size\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SegfaultDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"size\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SegmentsTester\": {\n      \"split\": [\n         \"self\",\n         \"data\",\n         \"segment_ids\",\n         \"indices\"\n      ],\n      \"unsplit\": [\n         \"self\",\n         \"extra_shape\",\n         \"inputs\",\n         \"segment_ids\"\n      ]\n   },\n   \"SelectRecordByContext\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"name\",\n         \"check_field_metas\",\n         \"use_copy\",\n         \"default_output_record_field\"\n      ],\n      \"_set_output_blobs\": [\n         \"self\",\n         \"net\",\n         \"context\"\n      ],\n      \"add_eval_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops_to_accumulate_pred\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"SemiRandomFeatures\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"output_dims\",\n         \"s\",\n         \"scale_random\",\n         \"scale_learned\",\n         \"weight_init_random\",\n         \"bias_init_random\",\n         \"weight_init_learned\",\n         \"bias_init_learned\",\n         \"weight_optim\",\n         \"bias_optim\",\n         \"set_weight_as_global_constant\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Seq2SeqBeamSearchTest\": {\n      \"_build_seq2seq_model\": [\n         \"self\",\n         \"model_params\",\n         \"tmp_dir\",\n         \"source_vocab_size\",\n         \"target_vocab_size\",\n         \"num_gpus\",\n         \"batch_size\"\n      ],\n      \"_run_compare_train_inference\": [\n         \"self\",\n         \"model_params\"\n      ],\n      \"test_2layer_attention\": [\n         \"self\"\n      ],\n      \"test_attention\": [\n         \"self\"\n      ],\n      \"test_multi_decoder\": [\n         \"self\"\n      ]\n   },\n   \"Seq2SeqModelCaffe2\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"model_params\",\n         \"source_vocab_size\",\n         \"target_vocab_size\",\n         \"num_gpus\",\n         \"num_cpus\"\n      ],\n      \"_apply_norm_ratio\": [\n         \"self\",\n         \"norm_ratio\",\n         \"model\",\n         \"params\",\n         \"learning_rate\",\n         \"scope\",\n         \"ONE\"\n      ],\n      \"_build_embeddings\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_build_model\": [\n         \"self\",\n         \"init_params\"\n      ],\n      \"_build_shared\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_calc_norm_ratio\": [\n         \"self\",\n         \"model\",\n         \"params\",\n         \"scope\",\n         \"ONE\"\n      ],\n      \"_init_model\": [\n         \"self\"\n      ],\n      \"forward_model_build_fun\": [\n         \"self\",\n         \"model\",\n         \"loss_scale\"\n      ],\n      \"get_current_step\": [\n         \"self\"\n      ],\n      \"inc_current_step\": [\n         \"self\"\n      ],\n      \"initialize_from_scratch\": [\n         \"self\"\n      ],\n      \"model_build_fun\": [\n         \"self\",\n         \"model\",\n         \"forward_only\",\n         \"loss_scale\"\n      ],\n      \"norm_clipped_grad_update\": [\n         \"self\",\n         \"model\",\n         \"scope\"\n      ],\n      \"norm_clipped_sparse_grad_update\": [\n         \"self\",\n         \"model\",\n         \"scope\"\n      ],\n      \"save\": [\n         \"self\",\n         \"checkpoint_path_prefix\",\n         \"current_step\"\n      ],\n      \"step\": [\n         \"self\",\n         \"batch\",\n         \"forward_only\"\n      ],\n      \"total_loss_scalar\": [\n         \"self\"\n      ]\n   },\n   \"Seq2SeqModelCaffe2EnsembleDecoder\": {\n      \"__init__\": [\n         \"self\",\n         \"translate_params\"\n      ],\n      \"_build_decoder\": [\n         \"self\",\n         \"model\",\n         \"step_model\",\n         \"model_params\",\n         \"scope\",\n         \"previous_tokens\",\n         \"timestep\",\n         \"fake_seq_lengths\"\n      ],\n      \"decode\": [\n         \"self\",\n         \"numberized_input\",\n         \"max_output_seq_len\"\n      ],\n      \"get_db_type\": [\n         \"self\"\n      ],\n      \"get_model_file\": [\n         \"self\",\n         \"model\"\n      ],\n      \"scope\": [\n         \"self\",\n         \"scope_name\",\n         \"blob_name\"\n      ]\n   },\n   \"Seq2SeqModelCaffe2EnsembleDecoderBase\": {\n      \"build_word_rewards\": [\n         \"self\",\n         \"vocab_size\",\n         \"word_reward\",\n         \"unk_reward\"\n      ],\n      \"get_db_type\": [\n         \"self\"\n      ],\n      \"get_model_file\": [\n         \"self\",\n         \"model\"\n      ],\n      \"load_models\": [\n         \"self\"\n      ]\n   },\n   \"Seq2SeqModelHelper\": {\n      \"AddParam\": [\n         \"self\",\n         \"name\",\n         \"init\",\n         \"init_value\",\n         \"trainable\"\n      ],\n      \"GetAllParams\": [\n         \"self\",\n         \"namescope\"\n      ],\n      \"GetNonTrainableParams\": [\n         \"self\",\n         \"namescope\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"init_params\"\n      ]\n   },\n   \"Seq2SeqModelHelperTest\": {\n      \"testAddParam\": [\n         \"self\"\n      ],\n      \"testConstuctor\": [\n         \"self\"\n      ],\n      \"testGetAllParams\": [\n         \"self\"\n      ],\n      \"testGetNonTrainableParams\": [\n         \"self\"\n      ]\n   },\n   \"Sequential\": {\n      \"__delitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"idx\",\n         \"module\"\n      ],\n      \"_get_item_by_idx\": [\n         \"self\",\n         \"iterator\",\n         \"idx\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"SequentialSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"data_source\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SerializationInterop\": {\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"SerializationMixin\": {\n      \"_test_serialization_assert\": [\n         \"self\",\n         \"b\",\n         \"c\"\n      ],\n      \"_test_serialization_data\": [\n         \"self\"\n      ],\n      \"_test_serialization_filelike\": [\n         \"self\",\n         \"tensor\",\n         \"mock\",\n         \"desc\"\n      ],\n      \"test_load_error_msg\": [\n         \"self\"\n      ],\n      \"test_load_nonexistent_device\": [\n         \"self\"\n      ],\n      \"test_load_python2_unicode_module\": [\n         \"self\"\n      ],\n      \"test_load_unicode_error_msg\": [\n         \"self\"\n      ],\n      \"test_serialization\": [\n         \"self\"\n      ],\n      \"test_serialization_backwards_compat\": [\n         \"self\"\n      ],\n      \"test_serialization_dill\": [\n         \"self\"\n      ],\n      \"test_serialization_dill_version_not_supported\": [\n         \"self\"\n      ],\n      \"test_serialization_fake_zip\": [\n         \"self\"\n      ],\n      \"test_serialization_filelike\": [\n         \"self\"\n      ],\n      \"test_serialization_filelike_api_requirements\": [\n         \"self\"\n      ],\n      \"test_serialization_filelike_missing_attrs\": [\n         \"self\"\n      ],\n      \"test_serialization_filelike_stress\": [\n         \"self\"\n      ],\n      \"test_serialization_filelike_uses_readinto\": [\n         \"self\"\n      ],\n      \"test_serialization_gzip\": [\n         \"self\"\n      ],\n      \"test_serialization_map_location\": [\n         \"self\"\n      ],\n      \"test_serialization_offset_gzip\": [\n         \"self\"\n      ],\n      \"test_serialization_save_warnings\": [\n         \"self\"\n      ],\n      \"test_serialization_storage_slice\": [\n         \"self\"\n      ],\n      \"test_serialization_zipfile_utils\": [\n         \"self\"\n      ],\n      \"test_serialize_device\": [\n         \"self\"\n      ]\n   },\n   \"SerializedTestCase\": {\n      \"_assertSameOps\": [\n         \"self\",\n         \"op1\",\n         \"op2\"\n      ],\n      \"assertReferenceChecks\": [\n         \"self\",\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"reference\",\n         \"input_device_options\",\n         \"threshold\",\n         \"output_to_grad\",\n         \"grad_reference\",\n         \"atol\",\n         \"outputs_to_check\",\n         \"ensure_outputs_are_inferred\"\n      ],\n      \"assertSerializedOperatorChecks\": [\n         \"self\",\n         \"inputs\",\n         \"outputs\",\n         \"gradient_operator\",\n         \"op\",\n         \"device_option\",\n         \"atol\",\n         \"rtol\"\n      ],\n      \"compare_test\": [\n         \"self\",\n         \"inputs\",\n         \"outputs\",\n         \"grad_ops\",\n         \"atol\",\n         \"rtol\"\n      ],\n      \"get_output_dir\": [\n         \"self\"\n      ],\n      \"get_output_filename\": [\n         \"self\"\n      ],\n      \"serialize_test\": [\n         \"self\",\n         \"inputs\",\n         \"outputs\",\n         \"grad_ops\",\n         \"op\",\n         \"device_option\"\n      ]\n   },\n   \"Session\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"ex_type\",\n         \"value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_compile_task_group\": [\n         \"cls\",\n         \"task_group\",\n         \"setup_net_list\"\n      ],\n      \"_do_close\": [\n         \"self\"\n      ],\n      \"_run_compiled\": [\n         \"self\",\n         \"task_group\"\n      ],\n      \"close\": [\n         \"self\"\n      ],\n      \"compile\": [\n         \"cls\",\n         \"runnable\",\n         \"workspace_type\",\n         \"setup_net_list\"\n      ],\n      \"fetch_output\": [\n         \"self\",\n         \"output\"\n      ],\n      \"is_open\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\",\n         \"runnable\",\n         \"workspace_type\",\n         \"setup_net_list\"\n      ]\n   },\n   \"SetAffinityDataset\": {\n      \"__iter__\": [\n         \"self\"\n      ]\n   },\n   \"Setup\": {\n      \"setup\": [\n         \"self\"\n      ],\n      \"shutdown\": [\n         \"self\"\n      ]\n   },\n   \"SetupNets\": {\n      \"__init__\": [\n         \"self\",\n         \"init_nets\",\n         \"exit_nets\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"exit\": [\n         \"self\",\n         \"exit_net\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"init_net\"\n      ]\n   },\n   \"SgdOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"base_learning_rate\",\n         \"policy\",\n         \"momentum\",\n         \"nesterov\",\n         \"sparse_dedup_aggregator\",\n         \"lars\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"Shadow\": {\n      \"__init__\": [\n         \"self\",\n         \"q_module\",\n         \"float_module\",\n         \"Logger\"\n      ],\n      \"add\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_relu\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"add_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"cat\": [\n         \"self\",\n         \"x\",\n         \"dim\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"mul\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"mul_scalar\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"ShadowLogger\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"ShapeTest\": {\n      \"test_shape\": [\n         \"self\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_shape_with_axes\": [\n         \"self\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"axes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"SharedCache\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"key\",\n         \"storage_ref\"\n      ],\n      \"_after_fork\": [\n         \"self\"\n      ],\n      \"free_dead_references\": [\n         \"self\"\n      ]\n   },\n   \"ShortStorage\": {},\n   \"ShuffleNetV2Builder\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"data\",\n         \"num_input_channels\",\n         \"num_labels\",\n         \"num_groups\",\n         \"width\",\n         \"is_test\",\n         \"detection\",\n         \"bn_epsilon\"\n      ],\n      \"add_basic_unit\": [\n         \"self\",\n         \"prefix\",\n         \"in_channels\",\n         \"stride\"\n      ],\n      \"add_conv1x1_bn\": [\n         \"self\",\n         \"prev_blob\",\n         \"blob\",\n         \"in_channels\",\n         \"out_channels\"\n      ],\n      \"add_detection_unit\": [\n         \"self\",\n         \"prev_blob\",\n         \"prefix\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel\",\n         \"pad\"\n      ],\n      \"add_dwconv3x3_bn\": [\n         \"self\",\n         \"prev_blob\",\n         \"blob\",\n         \"channels\",\n         \"stride\"\n      ],\n      \"add_spatial_ds_unit\": [\n         \"self\",\n         \"prefix\",\n         \"in_channels\",\n         \"out_channels\",\n         \"stride\"\n      ],\n      \"create\": [\n         \"self\"\n      ]\n   },\n   \"ShufflenetMemongerTest\": {\n      \"test_shufflenet_forward_only\": [\n         \"self\"\n      ],\n      \"test_shufflenet_forward_only_fast_simplenet\": [\n         \"self\"\n      ],\n      \"test_shufflenet_shared_grads\": [\n         \"self\",\n         \"with_shapes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Sigmoid\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"SigmoidTest\": {\n      \"test_sigmoid\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"SigmoidTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"SimpleAddModule\": {\n      \"__init__\": [\n         \"self\",\n         \"add_op\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"SimpleCustomBatch\": {\n      \"__init__\": [\n         \"self\",\n         \"data\"\n      ],\n      \"is_pinned\": [\n         \"self\"\n      ],\n      \"pin_memory\": [\n         \"self\"\n      ]\n   },\n   \"SimpleIREvalExecuted\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"SimpleQueue\": {\n      \"_make_methods\": [\n         \"self\"\n      ]\n   },\n   \"SimulateBackwardError\": {\n      \"backward\": [\n         \"ctx\",\n         \"input\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"input\"\n      ]\n   },\n   \"SingleLayerLinearDynamicModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SingleLayerLinearModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SkipQuantModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SleepDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"sleep_sec\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SmoothL1Loss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"SobolEngine\": {\n      \"__init__\": [\n         \"self\",\n         \"dimension\",\n         \"scramble\",\n         \"seed\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"draw\": [\n         \"self\",\n         \"n\",\n         \"out\",\n         \"dtype\"\n      ],\n      \"fast_forward\": [\n         \"self\",\n         \"n\"\n      ],\n      \"reset\": [\n         \"self\"\n      ]\n   },\n   \"SoftMarginLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"target\"\n      ]\n   },\n   \"SoftMaxWithLoss\": {\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"Softmax\": {\n      \"__init__\": [\n         \"self\",\n         \"dim\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Softmax2d\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"SoftmaxBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"SoftmaxBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"SoftmaxTest\": {\n      \"test_softmax\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"SoftmaxTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ]\n   },\n   \"Softmin\": {\n      \"__init__\": [\n         \"self\",\n         \"dim\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Softplus\": {\n      \"__init__\": [\n         \"self\",\n         \"beta\",\n         \"threshold\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Softshrink\": {\n      \"__init__\": [\n         \"self\",\n         \"lambd\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Softsign\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"SomeClass\": {\n      \"_caffe2_model_dir\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_download\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_onnx_model_dir\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_prepare_model_data\": [\n         \"self\",\n         \"model\"\n      ]\n   },\n   \"SourceChangeWarning\": {},\n   \"SourceContext\": {\n      \"__init__\": [\n         \"self\",\n         \"source\",\n         \"filename\",\n         \"file_lineno\",\n         \"leading_whitespace_len\",\n         \"uses_true_division\"\n      ]\n   },\n   \"SparseAdam\": {\n      \"__init__\": [\n         \"self\",\n         \"params\",\n         \"lr\",\n         \"betas\",\n         \"eps\"\n      ],\n      \"step\": [\n         \"self\",\n         \"closure\"\n      ]\n   },\n   \"SparseDataParallelModelTest\": {\n      \"_test_equiv_sparse\": [\n         \"self\",\n         \"cpu_indices\"\n      ],\n      \"run_model\": [\n         \"self\",\n         \"V\",\n         \"gpu_devices\",\n         \"cpu_indices\"\n      ],\n      \"test_equiv_sparse\": [\n         \"self\"\n      ]\n   },\n   \"SparseDataParallelModelTestWithSharedIndices\": {\n      \"run_model\": [\n         \"self\",\n         \"V\",\n         \"gpu_devices\"\n      ],\n      \"test_sparse_shared_indices_gpu\": [\n         \"self\"\n      ]\n   },\n   \"SparseDropoutWithReplacement\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"dropout_prob_train\",\n         \"dropout_prob_eval\",\n         \"dropout_prob_predict\",\n         \"replacement_value\",\n         \"name\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"ratio\"\n      ],\n      \"add_eval_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"SparseDropoutWithReplacementTest\": {\n      \"test_all_dropout\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_all_dropout_empty_input\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_no_dropout\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"SparseFeatureHash\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"seed\",\n         \"modulo\",\n         \"use_hashing\",\n         \"use_divide_mod\",\n         \"divisor\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"extract_hash_size\": [\n         \"self\",\n         \"metadata\"\n      ]\n   },\n   \"SparseLengthsSum4BitFakeNNPIFp16Test\": {\n      \"test_slws_fused_4bit_rowwise\": [\n         \"self\",\n         \"seed\",\n         \"num_rows\",\n         \"embedding_dim\",\n         \"batch_size\",\n         \"max_weight\"\n      ],\n      \"test_slws_fused_4bit_rowwise_all_same\": [\n         \"self\",\n         \"seed\"\n      ]\n   },\n   \"SparseLengthsSum8BitFakeNNPIFp16Test\": {\n      \"Skip_test_SLS_NonQuantized_fp16\": [\n         \"self\"\n      ],\n      \"test_slws_fused_8bit_rowwise\": [\n         \"self\",\n         \"seed\",\n         \"num_rows\",\n         \"embedding_dim\",\n         \"batch_size\",\n         \"max_weight\"\n      ],\n      \"test_slws_fused_8bit_rowwise_all_same\": [\n         \"self\",\n         \"seed\"\n      ],\n      \"test_small_sls\": [\n         \"self\",\n         \"seed\"\n      ]\n   },\n   \"SparseLengthsSum8BitFakeNNPIFp32Test\": {\n      \"test_slws_fused_8bit_rowwise_acc32_nnpi\": [\n         \"self\",\n         \"seed\",\n         \"num_rows\",\n         \"embedding_dim\",\n         \"batch_size\",\n         \"max_weight\"\n      ],\n      \"test_small_sls_acc32\": [\n         \"self\",\n         \"seed\"\n      ]\n   },\n   \"SparseLookup\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"inner_shape\",\n         \"reducer\",\n         \"weight_init\",\n         \"weight_optim\",\n         \"name\",\n         \"regularizer\",\n         \"use_external_weights\",\n         \"uniform_weight_init_scale_numerator\"\n      ],\n      \"_add_ops\": [\n         \"self\",\n         \"net\",\n         \"version\",\n         \"is_train\"\n      ],\n      \"_add_ops_id_list\": [\n         \"self\",\n         \"net\",\n         \"version\"\n      ],\n      \"_add_ops_id_score_list\": [\n         \"self\",\n         \"net\",\n         \"version\"\n      ],\n      \"_gather_wrapper\": [\n         \"self\",\n         \"net\",\n         \"version\",\n         \"in_indices\",\n         \"out\"\n      ],\n      \"_get_default_init_op\": [\n         \"self\"\n      ],\n      \"_sparse_lengths_weighted_reducer\": [\n         \"self\",\n         \"in_indices\",\n         \"weights\",\n         \"reducer\",\n         \"net\",\n         \"version\",\n         \"grad_on_weights\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"add_train_ops\": [\n         \"self\",\n         \"net\"\n      ],\n      \"get_8bits_compatible_parameters\": [\n         \"self\",\n         \"fused\"\n      ],\n      \"get_fp16_compatible_parameters\": [\n         \"self\"\n      ],\n      \"get_memory_usage\": [\n         \"self\"\n      ],\n      \"support_8bit\": [\n         \"self\"\n      ]\n   },\n   \"SpawnContext\": {\n      \"__init__\": [\n         \"self\",\n         \"processes\",\n         \"error_queues\"\n      ]\n   },\n   \"SpawnTest\": {},\n   \"SpectralNorm\": {\n      \"__call__\": [\n         \"self\",\n         \"module\",\n         \"inputs\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"n_power_iterations\",\n         \"dim\",\n         \"eps\"\n      ],\n      \"_solve_v_and_rescale\": [\n         \"self\",\n         \"weight_mat\",\n         \"u\",\n         \"target_sigma\"\n      ],\n      \"apply\": [\n         \"module\",\n         \"name\",\n         \"n_power_iterations\",\n         \"dim\",\n         \"eps\"\n      ],\n      \"compute_weight\": [\n         \"self\",\n         \"module\",\n         \"do_power_iteration\"\n      ],\n      \"remove\": [\n         \"self\",\n         \"module\"\n      ],\n      \"reshape_weight_to_matrix\": [\n         \"self\",\n         \"weight\"\n      ]\n   },\n   \"SpectralNormLoadStateDictPreHook\": {\n      \"__call__\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"fn\"\n      ]\n   },\n   \"SpectralNormStateDictHook\": {\n      \"__call__\": [\n         \"self\",\n         \"module\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"fn\"\n      ]\n   },\n   \"Split\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"num_splits\",\n         \"axis\",\n         \"name\",\n         \"split\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"SplitBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"parts\",\n         \"device\"\n      ]\n   },\n   \"SqueezeNet\": {\n      \"__init__\": [\n         \"self\",\n         \"version\",\n         \"num_classes\",\n         \"ceil_mode\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"StackTransform\": {\n      \"__init__\": [\n         \"self\",\n         \"tseq\",\n         \"dim\",\n         \"cache_size\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"_slice\": [\n         \"self\",\n         \"z\"\n      ],\n      \"bijective\": [\n         \"self\"\n      ],\n      \"codomain\": [\n         \"self\"\n      ],\n      \"domain\": [\n         \"self\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"StackedLSTM\": {\n      \"__init__\": [\n         \"self\",\n         \"num_layers\",\n         \"layer\",\n         \"first_layer_args\",\n         \"other_layer_args\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"states\"\n      ]\n   },\n   \"StackedLSTM2\": {\n      \"__init__\": [\n         \"self\",\n         \"num_layers\",\n         \"layer\",\n         \"first_layer_args\",\n         \"other_layer_args\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"states\"\n      ]\n   },\n   \"StackedLSTMWithDropout\": {\n      \"__init__\": [\n         \"self\",\n         \"num_layers\",\n         \"layer\",\n         \"first_layer_args\",\n         \"other_layer_args\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"states\"\n      ]\n   },\n   \"StarTestReturnThree\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"rep\"\n      ]\n   },\n   \"StarTestSumAndReturnThree\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"StarTestSumStarred\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"State\": {\n      \"cleanup\": [\n         \"self\"\n      ],\n      \"start\": [\n         \"self\"\n      ],\n      \"stop\": [\n         \"self\"\n      ]\n   },\n   \"StepLR\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"step_size\",\n         \"gamma\",\n         \"last_epoch\"\n      ],\n      \"_get_closed_form_lr\": [\n         \"self\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ]\n   },\n   \"StickBreakingTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"StmtBuilder\": {\n      \"build_AnnAssign\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Assert\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Assign\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_AugAssign\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Break\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Continue\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Delete\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Expr\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_For\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_If\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Pass\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Print\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Raise\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_Return\": [\n         \"ctx\",\n         \"stmt\"\n      ],\n      \"build_While\": [\n         \"ctx\",\n         \"stmt\"\n      ]\n   },\n   \"StorageWeakRef\": {\n      \"__del__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"storage\"\n      ],\n      \"expired\": [\n         \"self\"\n      ]\n   },\n   \"StoreOpsTests\": {\n      \"_test_set_get\": [\n         \"cls\",\n         \"queue\",\n         \"create_store_handler_fn\",\n         \"index\",\n         \"num_procs\"\n      ],\n      \"test_get_timeout\": [\n         \"cls\",\n         \"create_store_handler_fn\"\n      ],\n      \"test_set_get\": [\n         \"cls\",\n         \"create_store_handler_fn\"\n      ]\n   },\n   \"StoreTestBase\": {\n      \"_create_store\": [\n         \"self\",\n         \"i\"\n      ],\n      \"_test_set_get\": [\n         \"self\",\n         \"fs\"\n      ],\n      \"test_set_get\": [\n         \"self\"\n      ]\n   },\n   \"StormOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"lr\",\n         \"momentum\",\n         \"beta\",\n         \"grad_sq_init\",\n         \"policy\",\n         \"sparse_dedup_aggregator\",\n         \"lars\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"Stream\": {\n      \"__eq__\": [\n         \"self\",\n         \"o\"\n      ],\n      \"__hash__\": [\n         \"self\"\n      ],\n      \"__new__\": [\n         \"cls\",\n         \"device\",\n         \"priority\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_as_parameter_\": [\n         \"self\"\n      ],\n      \"query\": [\n         \"self\"\n      ],\n      \"record_event\": [\n         \"self\",\n         \"event\"\n      ],\n      \"synchronize\": [\n         \"self\"\n      ],\n      \"wait_event\": [\n         \"self\",\n         \"event\"\n      ],\n      \"wait_stream\": [\n         \"self\",\n         \"stream\"\n      ]\n   },\n   \"StringDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"ndx\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"StringTable\": {\n      \"__missing__\": [\n         \"self\",\n         \"key\"\n      ]\n   },\n   \"Struct\": {\n      \"__add__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__contains__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"key\",\n         \"value\"\n      ],\n      \"__sub__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_get_field_by_nested_name\": [\n         \"self\",\n         \"nested_name\"\n      ],\n      \"_pprint_impl\": [\n         \"self\",\n         \"indent\",\n         \"str_buffer\"\n      ],\n      \"_struct_from_nested_name\": [\n         \"self\",\n         \"nested_name\",\n         \"field\"\n      ],\n      \"all_scalars\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\",\n         \"keep_blobs\"\n      ],\n      \"field_blobs\": [\n         \"self\"\n      ],\n      \"field_metadata\": [\n         \"self\"\n      ],\n      \"field_names\": [\n         \"self\"\n      ],\n      \"field_types\": [\n         \"self\"\n      ],\n      \"get\": [\n         \"self\",\n         \"item\",\n         \"default_value\"\n      ],\n      \"get_children\": [\n         \"self\"\n      ],\n      \"has_blobs\": [\n         \"self\"\n      ]\n   },\n   \"StubRpcAgent\": {\n      \"__init__\": [\n         \"self\",\n         \"world_size\"\n      ],\n      \"get_worker_infos\": [\n         \"self\"\n      ]\n   },\n   \"StudentT\": {\n      \"__init__\": [\n         \"self\",\n         \"df\",\n         \"loc\",\n         \"scale\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"SubDiagonalTensor\": {\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"SubModelForFusion\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SubModelWithoutFusion\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SubModule\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SubProcess\": {\n      \"__init__\": [\n         \"self\",\n         \"tensor\"\n      ],\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"SubTensor\": {\n      \"__torch_function__\": [\n         \"self\",\n         \"func\",\n         \"types\",\n         \"args\",\n         \"kwargs\"\n      ]\n   },\n   \"SubWithTorchFunction\": {\n      \"__torch_function__\": [\n         \"self\",\n         \"func\",\n         \"types\",\n         \"args\",\n         \"kwargs\"\n      ]\n   },\n   \"Subset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"indices\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SubsetRandomSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"indices\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"SumElements\": {\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"SumSqrElements\": {\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"SummaryWriter\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_val\",\n         \"exc_tb\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"log_dir\",\n         \"comment\",\n         \"purge_step\",\n         \"max_queue\",\n         \"flush_secs\",\n         \"filename_suffix\"\n      ],\n      \"_check_caffe2_blob\": [\n         \"self\",\n         \"item\"\n      ],\n      \"_encode\": [\n         \"rawstr\"\n      ],\n      \"_get_file_writer\": [\n         \"self\"\n      ],\n      \"add_audio\": [\n         \"self\",\n         \"tag\",\n         \"snd_tensor\",\n         \"global_step\",\n         \"sample_rate\",\n         \"walltime\"\n      ],\n      \"add_custom_scalars\": [\n         \"self\",\n         \"layout\"\n      ],\n      \"add_custom_scalars_marginchart\": [\n         \"self\",\n         \"tags\",\n         \"category\",\n         \"title\"\n      ],\n      \"add_custom_scalars_multilinechart\": [\n         \"self\",\n         \"tags\",\n         \"category\",\n         \"title\"\n      ],\n      \"add_embedding\": [\n         \"self\",\n         \"mat\",\n         \"metadata\",\n         \"label_img\",\n         \"global_step\",\n         \"tag\",\n         \"metadata_header\"\n      ],\n      \"add_figure\": [\n         \"self\",\n         \"tag\",\n         \"figure\",\n         \"global_step\",\n         \"close\",\n         \"walltime\"\n      ],\n      \"add_graph\": [\n         \"self\",\n         \"model\",\n         \"input_to_model\",\n         \"verbose\"\n      ],\n      \"add_histogram\": [\n         \"self\",\n         \"tag\",\n         \"values\",\n         \"global_step\",\n         \"bins\",\n         \"walltime\",\n         \"max_bins\"\n      ],\n      \"add_histogram_raw\": [\n         \"self\",\n         \"tag\",\n         \"min\",\n         \"max\",\n         \"num\",\n         \"sum\",\n         \"sum_squares\",\n         \"bucket_limits\",\n         \"bucket_counts\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"add_hparams\": [\n         \"self\",\n         \"hparam_dict\",\n         \"metric_dict\"\n      ],\n      \"add_image\": [\n         \"self\",\n         \"tag\",\n         \"img_tensor\",\n         \"global_step\",\n         \"walltime\",\n         \"dataformats\"\n      ],\n      \"add_image_with_boxes\": [\n         \"self\",\n         \"tag\",\n         \"img_tensor\",\n         \"box_tensor\",\n         \"global_step\",\n         \"walltime\",\n         \"rescale\",\n         \"dataformats\",\n         \"labels\"\n      ],\n      \"add_images\": [\n         \"self\",\n         \"tag\",\n         \"img_tensor\",\n         \"global_step\",\n         \"walltime\",\n         \"dataformats\"\n      ],\n      \"add_mesh\": [\n         \"self\",\n         \"tag\",\n         \"vertices\",\n         \"colors\",\n         \"faces\",\n         \"config_dict\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"add_onnx_graph\": [\n         \"self\",\n         \"prototxt\"\n      ],\n      \"add_pr_curve\": [\n         \"self\",\n         \"tag\",\n         \"labels\",\n         \"predictions\",\n         \"global_step\",\n         \"num_thresholds\",\n         \"weights\",\n         \"walltime\"\n      ],\n      \"add_pr_curve_raw\": [\n         \"self\",\n         \"tag\",\n         \"true_positive_counts\",\n         \"false_positive_counts\",\n         \"true_negative_counts\",\n         \"false_negative_counts\",\n         \"precision\",\n         \"recall\",\n         \"global_step\",\n         \"num_thresholds\",\n         \"weights\",\n         \"walltime\"\n      ],\n      \"add_scalar\": [\n         \"self\",\n         \"tag\",\n         \"scalar_value\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"add_scalars\": [\n         \"self\",\n         \"main_tag\",\n         \"tag_scalar_dict\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"add_text\": [\n         \"self\",\n         \"tag\",\n         \"text_string\",\n         \"global_step\",\n         \"walltime\"\n      ],\n      \"add_video\": [\n         \"self\",\n         \"tag\",\n         \"vid_tensor\",\n         \"global_step\",\n         \"fps\",\n         \"walltime\"\n      ],\n      \"close\": [\n         \"self\"\n      ],\n      \"flush\": [\n         \"self\"\n      ],\n      \"get_logdir\": [\n         \"self\"\n      ]\n   },\n   \"SuperResolutionNet\": {\n      \"__init__\": [\n         \"self\",\n         \"upscale_factor\"\n      ],\n      \"_initialize_weights\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"SwishBench\": {\n      \"__init__\": [\n         \"self\",\n         \"mode\",\n         \"device\",\n         \"M\",\n         \"N\"\n      ],\n      \"config\": [\n         \"self\"\n      ],\n      \"default_configs\": [],\n      \"forward\": [\n         \"self\",\n         \"inp\"\n      ],\n      \"memory_workload\": [\n         \"self\"\n      ],\n      \"module\": [],\n      \"reference\": [\n         \"self\"\n      ]\n   },\n   \"SyncBatchNorm\": {\n      \"backward\": [\n         \"self\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"running_mean\",\n         \"running_var\",\n         \"eps\",\n         \"momentum\",\n         \"process_group\",\n         \"world_size\"\n      ]\n   },\n   \"SynchronizedDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"batch_size\",\n         \"num_workers\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"sync_once\": [\n         \"self\"\n      ]\n   },\n   \"SynchronizedSeedDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ]\n   },\n   \"TCPStoreTest\": {\n      \"_create_store\": [\n         \"self\"\n      ],\n      \"test_address_already_in_use\": [\n         \"self\"\n      ]\n   },\n   \"TagContext\": {\n      \"__init__\": [\n         \"self\",\n         \"tags\"\n      ],\n      \"add_tags\": [\n         \"self\",\n         \"tags\"\n      ],\n      \"remove_tags\": [\n         \"self\",\n         \"tags\"\n      ]\n   },\n   \"Tags\": {\n      \"__call__\": [\n         \"self\",\n         \"func\"\n      ],\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"tags\"\n      ]\n   },\n   \"Tanh\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"TanhTransform\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"atanh\": [\n         \"x\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ]\n   },\n   \"Tanhshrink\": {\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Task\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"step\",\n         \"outputs\",\n         \"workspace_type\",\n         \"group\",\n         \"node\",\n         \"name\",\n         \"num_instances\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_assert_not_used\": [\n         \"self\"\n      ],\n      \"_get_next_name\": [\n         \"node\",\n         \"group\",\n         \"name\"\n      ],\n      \"_notify_used\": [\n         \"self\"\n      ],\n      \"add_output\": [\n         \"self\",\n         \"output\"\n      ],\n      \"add_outputs\": [\n         \"self\",\n         \"outputs\"\n      ],\n      \"get_step\": [\n         \"self\"\n      ],\n      \"output_list\": [\n         \"self\"\n      ],\n      \"outputs\": [\n         \"self\"\n      ],\n      \"set_step\": [\n         \"self\",\n         \"step\"\n      ],\n      \"workspace_type\": [\n         \"self\"\n      ]\n   },\n   \"TaskGroup\": {\n      \"__init__\": [\n         \"self\",\n         \"workspace_type\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"task\"\n      ],\n      \"add_remote_net\": [\n         \"self\",\n         \"net\"\n      ],\n      \"num_registered_tasks\": [\n         \"self\"\n      ],\n      \"remote_nets\": [\n         \"self\"\n      ],\n      \"report_net\": [\n         \"self\",\n         \"net\",\n         \"node\",\n         \"report_interval\"\n      ],\n      \"report_step\": [\n         \"self\",\n         \"step\",\n         \"node\",\n         \"interval_ms\"\n      ],\n      \"tasks\": [\n         \"self\"\n      ],\n      \"tasks_by_node\": [\n         \"self\",\n         \"node_remap\"\n      ],\n      \"to_task\": [\n         \"self\",\n         \"node\"\n      ],\n      \"used_nodes\": [\n         \"self\"\n      ],\n      \"workspace_type\": [\n         \"self\"\n      ]\n   },\n   \"TaskOutput\": {\n      \"__init__\": [\n         \"self\",\n         \"names\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"fetch\": [\n         \"self\"\n      ],\n      \"get\": [\n         \"self\"\n      ],\n      \"set\": [\n         \"self\",\n         \"values\",\n         \"_fetch_func\"\n      ]\n   },\n   \"TaskOutputList\": {\n      \"__init__\": [\n         \"self\",\n         \"outputs\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"names\": [\n         \"self\"\n      ],\n      \"set_values\": [\n         \"self\",\n         \"values\",\n         \"_fetch_func\"\n      ]\n   },\n   \"TemporaryDirectory\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ]\n   },\n   \"Tensor\": {\n      \"__array__\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"__array_wrap__\": [\n         \"self\",\n         \"array\"\n      ],\n      \"__contains__\": [\n         \"self\",\n         \"element\"\n      ],\n      \"__cuda_array_interface__\": [\n         \"self\"\n      ],\n      \"__deepcopy__\": [\n         \"self\",\n         \"memo\"\n      ],\n      \"__dir__\": [\n         \"self\"\n      ],\n      \"__floordiv__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__format__\": [\n         \"self\",\n         \"format_spec\"\n      ],\n      \"__hash__\": [\n         \"self\"\n      ],\n      \"__ipow__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__rdiv__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__reduce_ex__\": [\n         \"self\",\n         \"proto\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__reversed__\": [\n         \"self\"\n      ],\n      \"__rfloordiv__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__rpow__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__rsub__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_update_names\": [\n         \"self\",\n         \"names\",\n         \"inplace\"\n      ],\n      \"align_to\": [\n         \"self\"\n      ],\n      \"backward\": [\n         \"self\",\n         \"gradient\",\n         \"retain_graph\",\n         \"create_graph\"\n      ],\n      \"grad\": [\n         \"self\"\n      ],\n      \"is_shared\": [\n         \"self\"\n      ],\n      \"istft\": [\n         \"self\",\n         \"n_fft\",\n         \"hop_length\",\n         \"win_length\",\n         \"window\",\n         \"center\",\n         \"normalized\",\n         \"onesided\",\n         \"length\"\n      ],\n      \"lu\": [\n         \"self\",\n         \"pivot\",\n         \"get_infos\"\n      ],\n      \"norm\": [\n         \"self\",\n         \"p\",\n         \"dim\",\n         \"keepdim\",\n         \"dtype\"\n      ],\n      \"refine_names\": [\n         \"self\"\n      ],\n      \"register_hook\": [\n         \"self\",\n         \"hook\"\n      ],\n      \"reinforce\": [\n         \"self\",\n         \"reward\"\n      ],\n      \"rename\": [\n         \"self\"\n      ],\n      \"rename_\": [\n         \"self\"\n      ],\n      \"resize\": [\n         \"self\"\n      ],\n      \"resize_as\": [\n         \"self\",\n         \"tensor\"\n      ],\n      \"retain_grad\": [\n         \"self\"\n      ],\n      \"share_memory_\": [\n         \"self\"\n      ],\n      \"split\": [\n         \"self\",\n         \"split_size\",\n         \"dim\"\n      ],\n      \"stft\": [\n         \"self\",\n         \"n_fft\",\n         \"hop_length\",\n         \"win_length\",\n         \"window\",\n         \"center\",\n         \"pad_mode\",\n         \"normalized\",\n         \"onesided\"\n      ],\n      \"unflatten\": [\n         \"self\",\n         \"dim\",\n         \"namedshape\"\n      ],\n      \"unique\": [\n         \"self\",\n         \"sorted\",\n         \"return_inverse\",\n         \"return_counts\",\n         \"dim\"\n      ],\n      \"unique_consecutive\": [\n         \"self\",\n         \"return_inverse\",\n         \"return_counts\",\n         \"dim\"\n      ]\n   },\n   \"TensorDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"index\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"TensorLike\": {\n      \"__torch_function__\": [\n         \"self\",\n         \"func\",\n         \"types\",\n         \"args\",\n         \"kwargs\"\n      ]\n   },\n   \"TensorRTOpTest\": {\n      \"_test_onnx_importer\": [\n         \"self\",\n         \"model_name\",\n         \"data_input_index\",\n         \"opset_version\"\n      ],\n      \"_test_relu_graph\": [\n         \"self\",\n         \"X\",\n         \"batch_size\",\n         \"trt_max_batch_size\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_bvlc_alexnet\": [\n         \"self\"\n      ],\n      \"test_densenet121\": [\n         \"self\"\n      ],\n      \"test_inception_v1\": [\n         \"self\"\n      ],\n      \"test_inception_v2\": [\n         \"self\"\n      ],\n      \"test_relu_graph_big_batch\": [\n         \"self\"\n      ],\n      \"test_relu_graph_simple\": [\n         \"self\"\n      ],\n      \"test_resnet50\": [\n         \"self\"\n      ],\n      \"test_shufflenet\": [\n         \"self\"\n      ],\n      \"test_squeezenet\": [\n         \"self\"\n      ],\n      \"test_vgg16\": [\n         \"self\"\n      ],\n      \"test_vgg19\": [\n         \"self\"\n      ]\n   },\n   \"TensorRTTransformTest\": {\n      \"_add_head_tail\": [\n         \"self\",\n         \"pred_net\",\n         \"new_head\",\n         \"new_tail\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_resnet50_core\": [\n         \"self\"\n      ]\n   },\n   \"TensorboardExporterTest\": {\n      \"test_simple_cnnmodel\": [\n         \"self\"\n      ],\n      \"test_that_adding_gradient_scope_does_no_fancy_renaming\": [\n         \"self\"\n      ],\n      \"test_that_auto_ssa_gives_non_colliding_names\": [\n         \"self\"\n      ],\n      \"test_that_operators_gets_non_colliding_names\": [\n         \"self\"\n      ],\n      \"test_that_replacing_colons_gives_non_colliding_names\": [\n         \"self\"\n      ]\n   },\n   \"TensorboardTest\": {\n      \"test_events\": [\n         \"self\"\n      ],\n      \"test_tensorboard_graphs\": [\n         \"self\"\n      ]\n   },\n   \"Test\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"eqBool\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqDictFloatKeyIntValue\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqDictIntKeyIntValue\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqDictStrKeyIntValue\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqFloat\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqInt\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqStr\": [\n         \"self\",\n         \"input\"\n      ],\n      \"eqTensor\": [\n         \"self\",\n         \"input\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"intEq0None\": [\n         \"self\",\n         \"input\"\n      ],\n      \"listBoolConjunction\": [\n         \"self\",\n         \"input\"\n      ],\n      \"listBoolDisjunction\": [\n         \"self\",\n         \"input\"\n      ],\n      \"listIntSumReturnTuple\": [\n         \"self\",\n         \"input\"\n      ],\n      \"optionalIntIsNone\": [\n         \"self\",\n         \"input\"\n      ],\n      \"str3Concat\": [\n         \"self\",\n         \"input\"\n      ],\n      \"tupleIntSumReturnTuple\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"TestAPMeterOps\": {\n      \"test_average_precision\": [\n         \"self\",\n         \"predictions\",\n         \"labels\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_average_precision_small_buffer\": [\n         \"self\",\n         \"predictions\",\n         \"labels\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestATen\": {\n      \"test_add\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_add_half\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_index_put\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_index_uint8\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pow\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sort\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sum\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_unique\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAbs\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testAbs\": [\n         \"self\"\n      ]\n   },\n   \"TestActivations\": {\n      \"test_elu\": [\n         \"self\",\n         \"X\",\n         \"alpha\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gelu\": [\n         \"self\",\n         \"X\",\n         \"fast_gelu\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_leaky_relu\": [\n         \"self\",\n         \"X\",\n         \"alpha\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_leaky_relu_default\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_prelu\": [\n         \"self\",\n         \"X\",\n         \"alpha\",\n         \"inplace\",\n         \"shared\",\n         \"order\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu_empty_input\": [\n         \"self\",\n         \"N\",\n         \"M\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu_fp16\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu_n\": [\n         \"self\",\n         \"X\",\n         \"n\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAdadelta\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestAdagrad\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestAdam\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestAdamOps\": {\n      \"test_adam\": [\n         \"self\",\n         \"inputs\",\n         \"ITER\",\n         \"LR\",\n         \"beta1\",\n         \"beta2\",\n         \"epsilon\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_adam_output_grad\": [\n         \"self\",\n         \"inputs\",\n         \"ITER\",\n         \"LR\",\n         \"beta1\",\n         \"beta2\",\n         \"epsilon\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAffineChannelOp\": {\n      \"affine_channel_nchw_ref\": [\n         \"self\",\n         \"X\",\n         \"scale\",\n         \"bias\"\n      ],\n      \"affine_channel_nhwc_ref\": [\n         \"self\",\n         \"X\",\n         \"scale\",\n         \"bias\"\n      ],\n      \"test_affine_channel_2d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"is_learnable\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_affine_channel_3d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"T\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"is_learnable\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAgainstScipy\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_cdf\": [\n         \"self\"\n      ],\n      \"test_icdf\": [\n         \"self\"\n      ],\n      \"test_mean\": [\n         \"self\"\n      ],\n      \"test_variance_stddev\": [\n         \"self\"\n      ]\n   },\n   \"TestAliasWithNameOp\": {\n      \"test_alias_with_name_op\": [\n         \"self\",\n         \"shape\",\n         \"dtype\",\n         \"dc\",\n         \"gc\"\n      ]\n   },\n   \"TestAllCompare\": {\n      \"test_allcompare\": [\n         \"self\",\n         \"d\",\n         \"n\",\n         \"num_procs\"\n      ]\n   },\n   \"TestAppendNet\": {\n      \"test_external_inputs_merged_correctly\": [\n         \"self\"\n      ],\n      \"test_external_inputs_merged_correctlyB\": [\n         \"self\"\n      ]\n   },\n   \"TestArgOps\": {\n      \"test_argmax\": [\n         \"self\",\n         \"X\",\n         \"axis\",\n         \"keepdims\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_argmin\": [\n         \"self\",\n         \"X\",\n         \"axis\",\n         \"keepdims\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAssert\": {\n      \"test_assert\": [\n         \"self\",\n         \"dtype\",\n         \"shape\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestAsync\": {\n      \"test_async_future_type_python\": [\n         \"self\"\n      ],\n      \"test_async_grad_guard_no_grad\": [\n         \"self\"\n      ],\n      \"test_async_grad_guard_with_grad\": [\n         \"self\"\n      ],\n      \"test_async_parsing\": [\n         \"self\"\n      ],\n      \"test_async_python\": [\n         \"self\"\n      ],\n      \"test_async_script\": [\n         \"self\"\n      ],\n      \"test_async_script_capture\": [\n         \"self\"\n      ],\n      \"test_async_script_error\": [\n         \"self\"\n      ],\n      \"test_async_script_multi_forks\": [\n         \"self\"\n      ],\n      \"test_async_script_multi_waits\": [\n         \"self\"\n      ],\n      \"test_async_script_nested\": [\n         \"self\"\n      ],\n      \"test_async_script_no_script_mod\": [\n         \"self\"\n      ],\n      \"test_async_script_trace\": [\n         \"self\"\n      ],\n      \"test_save_load_with_extra_files\": [\n         \"self\"\n      ],\n      \"test_trace_fork_wait\": [\n         \"self\"\n      ],\n      \"test_trace_fork_wait_inline\": [\n         \"self\"\n      ],\n      \"test_trace_fork_wait_inline_onnx\": [\n         \"self\"\n      ],\n      \"test_trace_fork_wait_leaking\": [\n         \"self\"\n      ],\n      \"test_trace_fork_wait_list_modulecalls\": [\n         \"self\"\n      ],\n      \"test_trace_modulecalls_with_different_output_types\": [\n         \"self\"\n      ]\n   },\n   \"TestAtomicOps\": {\n      \"test_atomic64_ops\": [\n         \"self\"\n      ],\n      \"test_atomic_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestAutoNaming\": {\n      \"assertOperatorListEqual\": [\n         \"self\",\n         \"operatorDefList1\",\n         \"operatorDefList2\"\n      ],\n      \"test_auto_naming\": [\n         \"self\"\n      ],\n      \"test_next_blob\": [\n         \"self\"\n      ]\n   },\n   \"TestAutodiffSubgraphSlicing\": {\n      \"_perform_ad_subgraph_slicing\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"assertGraphSize\": [\n         \"self\",\n         \"graph\",\n         \"size\"\n      ],\n      \"test_chunk_constant_script_ad\": [\n         \"self\"\n      ],\n      \"test_does_not_create_cycles\": [\n         \"self\"\n      ],\n      \"test_does_not_merge_unrelated\": [\n         \"self\"\n      ],\n      \"test_merges_dense\": [\n         \"self\"\n      ],\n      \"test_merges_down\": [\n         \"self\"\n      ],\n      \"test_merges_up\": [\n         \"self\"\n      ],\n      \"test_merges_without_cycles\": [\n         \"self\"\n      ],\n      \"test_respects_lexical_scoping\": [\n         \"self\"\n      ],\n      \"test_simple_merge\": [\n         \"self\"\n      ],\n      \"test_simple_no_merge\": [\n         \"self\"\n      ]\n   },\n   \"TestAutograd\": {\n      \"_function_test\": [\n         \"self\",\n         \"cls\"\n      ],\n      \"test_function\": [\n         \"self\"\n      ],\n      \"test_function_returns_input\": [\n         \"self\"\n      ],\n      \"test_legacy_function_deprecation_exception\": [\n         \"self\"\n      ],\n      \"test_once_differentiable\": [\n         \"self\"\n      ]\n   },\n   \"TestAutogradDeviceType\": {\n      \"_test_reentrant_parent_error_on_cpu\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_rnn_mod\": [\n         \"self\",\n         \"mod\",\n         \"inp\"\n      ],\n      \"test_GRU_grad_and_gradgrad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_LSTM_grad_and_gradgrad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_advanced_indexing_backwards_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_advanced_indexing_backwards_memory_format\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_backward_device\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_cdist\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_same_inputs\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_copy_\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cross_device_reentrant_autograd\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ctc_loss\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ctc_loss_cudnn\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_free_unneeded_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_grad_assignment\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_inplace_view_backprop_base\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_backprop_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_backprop_view_of_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_gradcheck\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_makes_base_require_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_modify_base\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_multiple_outputs\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_non_contig\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_of_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace_view_python\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inputbuffer_add_multidevice\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_leaky_relu_inplace_with_neg_slope\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_leaky_relu_inplace_with_zero_slope\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_lstmcell_backward_only_one_output_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_min_max_median_backprops_to_single_value\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_parameter_resize\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pdist_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pin_memory\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_profiler_emit_nvtx\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pyscalar_conversions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reentrant_parent_error_on_cpu\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_requires_grad_factory\": [\n         \"self\",\n         \"devices\",\n         \"dtype\"\n      ],\n      \"test_rnn_backward_to_input_but_not_parameters\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scalar_different_device_types\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scalar_different_devices\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_set_requires_grad_only_for_floats\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_simple_reentrant_cross_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_ctor_getter_backward\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_mask_autograd\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unused_output_device\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_where_functional\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"TestAutogradFunctional\": {\n      \"_assert_interleaved_struct\": [\n         \"self\",\n         \"res\",\n         \"base1\",\n         \"base2\"\n      ],\n      \"_assert_same_struct\": [\n         \"self\",\n         \"res\",\n         \"base\"\n      ],\n      \"test_hessian_create_graph\": [\n         \"self\"\n      ],\n      \"test_hessian_err_check\": [\n         \"self\"\n      ],\n      \"test_hessian_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_hessian_match_vhp_hvp\": [\n         \"self\"\n      ],\n      \"test_hessian_output\": [\n         \"self\"\n      ],\n      \"test_hessian_scalar\": [\n         \"self\"\n      ],\n      \"test_hvp_create_graph\": [\n         \"self\"\n      ],\n      \"test_hvp_err_check\": [\n         \"self\"\n      ],\n      \"test_hvp_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_hvp_output\": [\n         \"self\"\n      ],\n      \"test_hvp_scalar\": [\n         \"self\"\n      ],\n      \"test_jacobian_create_graph\": [\n         \"self\"\n      ],\n      \"test_jacobian_err_check\": [\n         \"self\"\n      ],\n      \"test_jacobian_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_jacobian_match_vjp_jvp\": [\n         \"self\"\n      ],\n      \"test_jacobian_output\": [\n         \"self\"\n      ],\n      \"test_jacobian_scalar\": [\n         \"self\"\n      ],\n      \"test_jvp_create_graph\": [\n         \"self\"\n      ],\n      \"test_jvp_err_check\": [\n         \"self\"\n      ],\n      \"test_jvp_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_jvp_output\": [\n         \"self\"\n      ],\n      \"test_jvp_scalar\": [\n         \"self\"\n      ],\n      \"test_vhp_create_graph\": [\n         \"self\"\n      ],\n      \"test_vhp_err_check\": [\n         \"self\"\n      ],\n      \"test_vhp_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_vhp_output\": [\n         \"self\"\n      ],\n      \"test_vhp_scalar\": [\n         \"self\"\n      ],\n      \"test_vjp_create_graph\": [\n         \"self\"\n      ],\n      \"test_vjp_err_check\": [\n         \"self\"\n      ],\n      \"test_vjp_err_check_strict\": [\n         \"self\"\n      ],\n      \"test_vjp_output\": [\n         \"self\"\n      ],\n      \"test_vjp_scalar\": [\n         \"self\"\n      ]\n   },\n   \"TestAvgPool\": {\n      \"_avg_pool2d\": [\n         \"self\",\n         \"x\",\n         \"kernel_size\"\n      ],\n      \"_avg_pool3d\": [\n         \"self\",\n         \"x\",\n         \"kernel_size\"\n      ],\n      \"_sum_pool2d\": [\n         \"self\",\n         \"x\",\n         \"kernel_size\"\n      ],\n      \"_sum_pool3d\": [\n         \"self\",\n         \"x\",\n         \"kernel_size\"\n      ],\n      \"test_avg_pool2d_with_zero_divisor\": [\n         \"self\"\n      ],\n      \"test_avg_pool3d_with_zero_divisor\": [\n         \"self\"\n      ],\n      \"test_doubletensor_avg_pool2d\": [\n         \"self\"\n      ],\n      \"test_doubletensor_avg_pool2d_with_divisor\": [\n         \"self\"\n      ],\n      \"test_doubletensor_avg_pool3d\": [\n         \"self\"\n      ],\n      \"test_doubletensor_avg_pool3d_with_divisor\": [\n         \"self\"\n      ]\n   },\n   \"TestBBoxTransformOp\": {\n      \"test_bbox_transform\": [\n         \"self\",\n         \"num_rois\",\n         \"num_classes\",\n         \"im_dim\",\n         \"skip_batch_id\",\n         \"rotated\",\n         \"angle_bound_on\",\n         \"clip_angle_thresh\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bbox_transform_batch\": [\n         \"self\",\n         \"roi_counts\",\n         \"num_classes\",\n         \"rotated\",\n         \"angle_bound_on\",\n         \"clip_angle_thresh\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBackendDynamicLoad\": {\n      \"_load_test_backend\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_backend_apis\": [\n         \"self\"\n      ]\n   },\n   \"TestBase\": {\n      \"__call__\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"constructor\",\n         \"desc\",\n         \"reference_fn\",\n         \"fullname\"\n      ],\n      \"_get_arg\": [\n         \"self\",\n         \"name\",\n         \"unpack\"\n      ],\n      \"_get_input\": [\n         \"self\",\n         \"unpack\"\n      ],\n      \"_unpack\": [\n         \"self\",\n         \"value\"\n      ],\n      \"constructor_args\": [\n         \"self\"\n      ],\n      \"extra_args\": [\n         \"self\"\n      ],\n      \"get_name\": [\n         \"self\"\n      ]\n   },\n   \"TestBatchBoxCox\": {\n      \"batch_box_cox\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_box_cox\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bound_base_away_from_zero\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lambda1_is_all_zero\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lambda1_is_partially_zero\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBatchBucketize\": {\n      \"test_batch_bucketize\": [\n         \"self\",\n         \"x\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_bucketize_example\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBatchGatherOps\": {\n      \"test_batch_gather_ops\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBatchMatMul\": {\n      \"_test_batch_matmul_with_broadcast_common\": [\n         \"self\",\n         \"X\",\n         \"Y\",\n         \"dtype\",\n         \"gc\",\n         \"dc\",\n         \"trans_a\",\n         \"trans_b\"\n      ],\n      \"test_batch_matmul\": [\n         \"self\",\n         \"C\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"trans_a\",\n         \"trans_b\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_numpy_batch_matmul\": [\n         \"self\",\n         \"C_1\",\n         \"C_2\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"trans_a\",\n         \"trans_b\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_numpy_batch_matmul_1d\": [\n         \"self\",\n         \"K\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_numpy_batch_matmul_1d_2d\": [\n         \"self\",\n         \"K\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_numpy_batch_matmul_2d_1d\": [\n         \"self\",\n         \"M\",\n         \"K\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBatchMomentsOp\": {\n      \"batch_moments_nchw_ref\": [\n         \"self\",\n         \"X\"\n      ],\n      \"batch_moments_nhwc_ref\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_batch_moments_2d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_moments_3d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"T\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBatchSparseToDense\": {\n      \"test_batch_dense_to_sparse\": [\n         \"self\",\n         \"batch_size\",\n         \"dense_last_dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_sparse_to_dense\": [\n         \"self\",\n         \"batch_size\",\n         \"dense_last_dim\",\n         \"default_value\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBindings\": {\n      \"test_annotation_basic\": [\n         \"self\"\n      ],\n      \"test_annotation_device_option\": [\n         \"self\"\n      ],\n      \"test_annotation_from_graph\": [\n         \"self\"\n      ],\n      \"test_annotation_operator_def\": [\n         \"self\"\n      ],\n      \"test_convertToProto\": [\n         \"self\"\n      ],\n      \"test_core_net_controlflow\": [\n         \"self\"\n      ],\n      \"test_core_net_nn_accessors\": [\n         \"self\"\n      ],\n      \"test_core_net_simple\": [\n         \"self\"\n      ],\n      \"test_createUniqueDataNode\": [\n         \"self\"\n      ],\n      \"test_debug\": [\n         \"self\"\n      ],\n      \"test_delete_node\": [\n         \"self\"\n      ],\n      \"test_delete_subgraph\": [\n         \"self\"\n      ],\n      \"test_distributed_annotations\": [\n         \"self\"\n      ],\n      \"test_distributed_device_map\": [\n         \"self\"\n      ],\n      \"test_edges_complex\": [\n         \"self\",\n         \"size\"\n      ],\n      \"test_edges_simple\": [\n         \"self\"\n      ],\n      \"test_genericGraph\": [\n         \"self\"\n      ],\n      \"test_has_device_option\": [\n         \"self\"\n      ],\n      \"test_invalid_node\": [\n         \"self\"\n      ],\n      \"test_match_graph\": [\n         \"self\"\n      ],\n      \"test_match_graph_node\": [\n         \"self\"\n      ],\n      \"test_match_graph_node_strict\": [\n         \"self\"\n      ],\n      \"test_netdef_simple\": [\n         \"self\"\n      ],\n      \"test_node_interactions\": [\n         \"self\"\n      ],\n      \"test_operatordef_simple\": [\n         \"self\"\n      ],\n      \"test_replace_all_uses_with\": [\n         \"self\"\n      ],\n      \"test_replace_as_consumer\": [\n         \"self\"\n      ],\n      \"test_replace_producer\": [\n         \"self\"\n      ],\n      \"test_replace_subraph\": [\n         \"self\"\n      ],\n      \"test_simple\": [\n         \"self\"\n      ],\n      \"test_traversal\": [\n         \"self\"\n      ]\n   },\n   \"TestBisectPercentileOp\": {\n      \"compare_reference\": [\n         \"self\",\n         \"raw_data\",\n         \"pct_raw_data\",\n         \"pct_mapping\",\n         \"pct_upper\",\n         \"pct_lower\",\n         \"lengths\"\n      ],\n      \"test_bisect_percentil_op_large\": [\n         \"self\",\n         \"N\",\n         \"lengths\",\n         \"max_value\",\n         \"discrete\",\n         \"p\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bisect_percentil_op_simple\": [\n         \"self\"\n      ]\n   },\n   \"TestBooleanMaskOp\": {\n      \"_dtype_conversion\": [\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_boolean_mask\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_boolean_mask_gradient\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_boolean_mask_indices\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_batching_lengths\": [\n         \"self\",\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_batching_triangle\": [\n         \"self\",\n         \"x\",\n         \"mode\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_batching_window\": [\n         \"self\",\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_repeated\": [\n         \"self\",\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_triangle\": [\n         \"self\",\n         \"x\",\n         \"mode\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_with_lengths\": [\n         \"self\",\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sequence_mask_with_window\": [\n         \"self\",\n         \"x\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBottleneck\": {\n      \"_check_autograd_summary\": [\n         \"self\",\n         \"output\"\n      ],\n      \"_check_cprof_summary\": [\n         \"self\",\n         \"output\"\n      ],\n      \"_check_cuda\": [\n         \"self\",\n         \"output\"\n      ],\n      \"_check_environment_summary\": [\n         \"self\",\n         \"output\"\n      ],\n      \"_check_run_args\": [\n         \"self\"\n      ],\n      \"_fail_msg\": [\n         \"self\",\n         \"msg\",\n         \"output\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"command\"\n      ],\n      \"_run_bottleneck\": [\n         \"self\",\n         \"test_file\",\n         \"scriptargs\"\n      ],\n      \"test_bottleneck_cpu_only\": [\n         \"self\"\n      ],\n      \"test_bottleneck_cuda\": [\n         \"self\"\n      ]\n   },\n   \"TestBoxWithNMSLimitOp\": {\n      \"test_detections_per_im\": [\n         \"self\",\n         \"det_per_im\",\n         \"gc\"\n      ],\n      \"test_detections_per_im_same_thresh\": [\n         \"self\",\n         \"det_per_im\",\n         \"gc\"\n      ],\n      \"test_detections_per_im_same_thresh_multiclass\": [\n         \"self\",\n         \"num_classes\",\n         \"gc\"\n      ],\n      \"test_multiclass\": [\n         \"self\",\n         \"num_classes\",\n         \"det_per_im\",\n         \"cls_agnostic_bbox_reg\",\n         \"input_boxes_include_bg_cls\",\n         \"output_classes_include_bg_cls\",\n         \"gc\"\n      ],\n      \"test_score_thresh\": [\n         \"self\",\n         \"gc\"\n      ],\n      \"test_simple\": [\n         \"self\",\n         \"gc\"\n      ]\n   },\n   \"TestBucketizeOp\": {\n      \"test_bucketize_op\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestBuiltins\": {\n      \"test_has_attr\": [\n         \"self\"\n      ],\n      \"test_has_attr_invalid_args\": [\n         \"self\"\n      ]\n   },\n   \"TestBundledInputs\": {\n      \"test_large_tensor_with_inflation\": [\n         \"self\"\n      ],\n      \"test_non_tensors\": [\n         \"self\"\n      ],\n      \"test_rejected_tensors\": [\n         \"self\"\n      ],\n      \"test_single_tensors\": [\n         \"self\"\n      ]\n   },\n   \"TestC2LSTM\": {\n      \"test_c2_lstm\": [\n         \"self\",\n         \"bsz\",\n         \"seq_lens\",\n         \"emb_lens\",\n         \"hidden_size\",\n         \"num_layers\",\n         \"has_biases\",\n         \"is_bidirectional\",\n         \"batch_first\"\n      ]\n   },\n   \"TestCRFOp\": {\n      \"_compute_loss_manual\": [\n         \"self\",\n         \"predictions\",\n         \"num_tags\",\n         \"labels\",\n         \"transitions\"\n      ],\n      \"test_crf_gradient\": [\n         \"self\",\n         \"num_tags\",\n         \"num_words\"\n      ],\n      \"test_crf_with_loss_op\": [\n         \"self\",\n         \"num_tags\",\n         \"num_words\"\n      ]\n   },\n   \"TestCTCBeamSearchDecoderOp\": {\n      \"test_ctc_beam_search_decoder\": [\n         \"self\",\n         \"batch\",\n         \"max_time\",\n         \"alphabet_size\",\n         \"beam_width\",\n         \"num_candidates\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCTCGreedyDecoderOp\": {\n      \"test_ctc_greedy_decoder\": [\n         \"self\",\n         \"batch\",\n         \"max_time\",\n         \"num_classes\",\n         \"merge_repeated\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_ctc_greedy_decoder_no_merge_arg\": [\n         \"self\",\n         \"batch\",\n         \"max_time\",\n         \"num_classes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCWorkspace\": {\n      \"test_array_serde\": [\n         \"self\",\n         \"name\",\n         \"value\",\n         \"device_option\"\n      ],\n      \"test_exception\": [\n         \"self\"\n      ],\n      \"test_net_create\": [\n         \"self\",\n         \"blob_name\",\n         \"net_name\",\n         \"value\"\n      ],\n      \"test_net_execution\": [\n         \"self\"\n      ],\n      \"test_net_run\": [\n         \"self\",\n         \"blob_name\",\n         \"net_name\",\n         \"value\"\n      ],\n      \"test_operator_run\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ],\n      \"test_plan_run\": [\n         \"self\",\n         \"blob_name\",\n         \"plan_name\",\n         \"net_name\",\n         \"value\"\n      ],\n      \"test_string_serde\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ]\n   },\n   \"TestCaffe2Backend\": {\n      \"test_helper\": [\n         \"self\"\n      ]\n   },\n   \"TestCaffe2Backend_opset9\": {\n      \"_dispatch_rnn_test\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_elman_rnn_test\": [\n         \"self\",\n         \"layers\",\n         \"nonlinearity\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_gru_test\": [\n         \"self\",\n         \"layers\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_lstm_test\": [\n         \"self\",\n         \"layers\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_test_index_generic\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"convert_cuda\": [\n         \"self\",\n         \"model\",\n         \"input\"\n      ],\n      \"run_actual_test\": [\n         \"self\",\n         \"model\",\n         \"train\",\n         \"batch_size\",\n         \"state_dict\",\n         \"input\",\n         \"use_gpu\",\n         \"rtol\",\n         \"atol\",\n         \"example_outputs\",\n         \"do_constant_folding\"\n      ],\n      \"run_debug_test\": [\n         \"self\",\n         \"model\",\n         \"train\",\n         \"batch_size\",\n         \"state_dict\",\n         \"input\",\n         \"use_gpu\",\n         \"example_outputs\"\n      ],\n      \"run_model_test\": [\n         \"self\",\n         \"model\",\n         \"train\",\n         \"batch_size\",\n         \"state_dict\",\n         \"input\",\n         \"use_gpu\",\n         \"rtol\",\n         \"atol\",\n         \"example_outputs\",\n         \"do_constant_folding\"\n      ],\n      \"run_word_language_model\": [\n         \"self\",\n         \"model_name\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test__dim_arange\": [\n         \"self\"\n      ],\n      \"test__sample_dirichlet\": [\n         \"self\"\n      ],\n      \"test__standard_gamma\": [\n         \"self\"\n      ],\n      \"test_adaptive_avg_pool1D\": [\n         \"self\"\n      ],\n      \"test_adaptive_avg_pool2D\": [\n         \"self\"\n      ],\n      \"test_adaptive_avg_pool3D\": [\n         \"self\"\n      ],\n      \"test_adaptive_max_pool1D\": [\n         \"self\"\n      ],\n      \"test_adaptive_max_pool2D\": [\n         \"self\"\n      ],\n      \"test_adaptive_max_pool3D\": [\n         \"self\"\n      ],\n      \"test_addconstant\": [\n         \"self\"\n      ],\n      \"test_addmm\": [\n         \"self\"\n      ],\n      \"test_advanced_broadcast\": [\n         \"self\"\n      ],\n      \"test_alexnet\": [\n         \"self\"\n      ],\n      \"test_and\": [\n         \"self\"\n      ],\n      \"test_arange_end\": [\n         \"self\"\n      ],\n      \"test_arange_start_end\": [\n         \"self\"\n      ],\n      \"test_arange_start_end_step\": [\n         \"self\"\n      ],\n      \"test_argmax\": [\n         \"self\"\n      ],\n      \"test_argmax_none_dim\": [\n         \"self\"\n      ],\n      \"test_argmin\": [\n         \"self\"\n      ],\n      \"test_argmin_none_dim\": [\n         \"self\"\n      ],\n      \"test_arithmetic\": [\n         \"self\"\n      ],\n      \"test_avg_pool1D_ceil\": [\n         \"self\"\n      ],\n      \"test_avg_pool2D_ceil\": [\n         \"self\"\n      ],\n      \"test_avg_pool3D_ceil\": [\n         \"self\"\n      ],\n      \"test_avgpool2d\": [\n         \"self\"\n      ],\n      \"test_avgpool2d_no_padding\": [\n         \"self\"\n      ],\n      \"test_avgpool2d_with_count_include_pad_set_false\": [\n         \"self\"\n      ],\n      \"test_avgpool2d_with_count_include_pad_set_true\": [\n         \"self\"\n      ],\n      \"test_baddbmm\": [\n         \"self\"\n      ],\n      \"test_batchnorm1d\": [\n         \"self\"\n      ],\n      \"test_batchnorm1d_noaffine\": [\n         \"self\"\n      ],\n      \"test_batchnorm1d_special\": [\n         \"self\"\n      ],\n      \"test_batchnorm2d_noaffine\": [\n         \"self\"\n      ],\n      \"test_batchnorm3d_noaffine\": [\n         \"self\"\n      ],\n      \"test_c2_bbox_transform\": [\n         \"self\"\n      ],\n      \"test_c2_box_with_nms_limits\": [\n         \"self\"\n      ],\n      \"test_c2_generate_proposals\": [\n         \"self\"\n      ],\n      \"test_c2_inference_lstm\": [\n         \"self\"\n      ],\n      \"test_c2_roi_align\": [\n         \"self\"\n      ],\n      \"test_ceil\": [\n         \"self\"\n      ],\n      \"test_chunk\": [\n         \"self\"\n      ],\n      \"test_clamp\": [\n         \"self\"\n      ],\n      \"test_consecutive_transposes\": [\n         \"self\"\n      ],\n      \"test_constant\": [\n         \"self\"\n      ],\n      \"test_constantpad2d\": [\n         \"self\"\n      ],\n      \"test_consumed_bn\": [\n         \"self\"\n      ],\n      \"test_convtranspose\": [\n         \"self\"\n      ],\n      \"test_cosine_similarity\": [\n         \"self\"\n      ],\n      \"test_cumsum\": [\n         \"self\"\n      ],\n      \"test_data_dependent_zeros_factory\": [\n         \"self\"\n      ],\n      \"test_dcgan\": [\n         \"self\"\n      ],\n      \"test_densenet\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_dynamic_loop\": [\n         \"self\"\n      ],\n      \"test_dynamic_sizes\": [\n         \"self\"\n      ],\n      \"test_dynamic_slice\": [\n         \"self\"\n      ],\n      \"test_dynamic_slice_script\": [\n         \"self\"\n      ],\n      \"test_dynamic_slice_to_the_end\": [\n         \"self\"\n      ],\n      \"test_embedding\": [\n         \"self\"\n      ],\n      \"test_erf\": [\n         \"self\"\n      ],\n      \"test_flatten\": [\n         \"self\"\n      ],\n      \"test_flatten2D\": [\n         \"self\"\n      ],\n      \"test_floor\": [\n         \"self\"\n      ],\n      \"test_full\": [\n         \"self\"\n      ],\n      \"test_full_script\": [\n         \"self\"\n      ],\n      \"test_fuse_addmm\": [\n         \"self\"\n      ],\n      \"test_gelu\": [\n         \"self\"\n      ],\n      \"test_group_norm\": [\n         \"self\"\n      ],\n      \"test_group_norm_noaffine\": [\n         \"self\"\n      ],\n      \"test_gru_cell\": [\n         \"self\"\n      ],\n      \"test_gru_constant_folding\": [\n         \"self\"\n      ],\n      \"test_implicit_expand\": [\n         \"self\"\n      ],\n      \"test_inception\": [\n         \"self\"\n      ],\n      \"test_index_1d\": [\n         \"self\"\n      ],\n      \"test_index_2d_1dimslice\": [\n         \"self\"\n      ],\n      \"test_index_2d_2dimslice\": [\n         \"self\"\n      ],\n      \"test_index_2d_neg_slice\": [\n         \"self\"\n      ],\n      \"test_index_2d_neg_slice2dim\": [\n         \"self\"\n      ],\n      \"test_index_2d_sliceint\": [\n         \"self\"\n      ],\n      \"test_index_copy\": [\n         \"self\"\n      ],\n      \"test_index_fill\": [\n         \"self\"\n      ],\n      \"test_inplace_arithmetic\": [\n         \"self\"\n      ],\n      \"test_inplace_fill\": [\n         \"self\"\n      ],\n      \"test_inplace_zero\": [\n         \"self\"\n      ],\n      \"test_instance_norm\": [\n         \"self\"\n      ],\n      \"test_int8_export\": [\n         \"self\"\n      ],\n      \"test_interpolate_upsample\": [\n         \"self\"\n      ],\n      \"test_interpolate_upsample_dynamic_sizes\": [\n         \"self\"\n      ],\n      \"test_isnan\": [\n         \"self\"\n      ],\n      \"test_linear\": [\n         \"self\"\n      ],\n      \"test_log\": [\n         \"self\"\n      ],\n      \"test_log2\": [\n         \"self\"\n      ],\n      \"test_logsoftmax\": [\n         \"self\"\n      ],\n      \"test_logsoftmax_dim\": [\n         \"self\"\n      ],\n      \"test_loop\": [\n         \"self\"\n      ],\n      \"test_lstm_cell\": [\n         \"self\"\n      ],\n      \"test_lstm_constant_folding\": [\n         \"self\"\n      ],\n      \"test_masked_fill\": [\n         \"self\"\n      ],\n      \"test_max\": [\n         \"self\"\n      ],\n      \"test_max_keepdim\": [\n         \"self\"\n      ],\n      \"test_max_tensors\": [\n         \"self\"\n      ],\n      \"test_maxpool1d_ceil\": [\n         \"self\"\n      ],\n      \"test_maxpool2d\": [\n         \"self\"\n      ],\n      \"test_maxpool2d_ceil\": [\n         \"self\"\n      ],\n      \"test_maxpool2d_single_padding\": [\n         \"self\"\n      ],\n      \"test_maxpool3d_ceil\": [\n         \"self\"\n      ],\n      \"test_mean\": [\n         \"self\"\n      ],\n      \"test_meshgrid\": [\n         \"self\"\n      ],\n      \"test_min\": [\n         \"self\"\n      ],\n      \"test_mm\": [\n         \"self\"\n      ],\n      \"test_mnist\": [\n         \"self\"\n      ],\n      \"test_multinomial\": [\n         \"self\"\n      ],\n      \"test_narrow\": [\n         \"self\"\n      ],\n      \"test_neg_slice\": [\n         \"self\"\n      ],\n      \"test_neg_slice_large\": [\n         \"self\"\n      ],\n      \"test_neg_slice_large_negone\": [\n         \"self\"\n      ],\n      \"test_nested_loops\": [\n         \"self\"\n      ],\n      \"test_nested_tuple_input_output\": [\n         \"self\"\n      ],\n      \"test_onnx_export_param_name_duplication\": [\n         \"self\"\n      ],\n      \"test_onnx_export_with_parameter_renaming\": [\n         \"self\"\n      ],\n      \"test_or\": [\n         \"self\"\n      ],\n      \"test_pixel_shuffle\": [\n         \"self\"\n      ],\n      \"test_prim_shape\": [\n         \"self\"\n      ],\n      \"test_rand\": [\n         \"self\"\n      ],\n      \"test_randn\": [\n         \"self\"\n      ],\n      \"test_randn_like\": [\n         \"self\"\n      ],\n      \"test_reduce_sum\": [\n         \"self\"\n      ],\n      \"test_reduce_sum_multi_dim\": [\n         \"self\"\n      ],\n      \"test_reflectionpad2d\": [\n         \"self\"\n      ],\n      \"test_remainder\": [\n         \"self\"\n      ],\n      \"test_remainder_scalar\": [\n         \"self\"\n      ],\n      \"test_repeat\": [\n         \"self\"\n      ],\n      \"test_repeat_dim_overflow\": [\n         \"self\"\n      ],\n      \"test_repeat_dynamic\": [\n         \"self\"\n      ],\n      \"test_replicationpad2d\": [\n         \"self\"\n      ],\n      \"test_reshape\": [\n         \"self\"\n      ],\n      \"test_reshape_as\": [\n         \"self\"\n      ],\n      \"test_resnet\": [\n         \"self\"\n      ],\n      \"test_rnn_init_predict_split\": [\n         \"self\"\n      ],\n      \"test_rsqrt\": [\n         \"self\"\n      ],\n      \"test_rsub\": [\n         \"self\"\n      ],\n      \"test_scalar_type\": [\n         \"self\"\n      ],\n      \"test_scatter\": [\n         \"self\"\n      ],\n      \"test_select\": [\n         \"self\"\n      ],\n      \"test_size\": [\n         \"self\"\n      ],\n      \"test_softmax\": [\n         \"self\"\n      ],\n      \"test_softmax_dtype\": [\n         \"self\"\n      ],\n      \"test_sqrt\": [\n         \"self\"\n      ],\n      \"test_squeeze\": [\n         \"self\"\n      ],\n      \"test_squeezenet\": [\n         \"self\"\n      ],\n      \"test_srresnet\": [\n         \"self\"\n      ],\n      \"test_std\": [\n         \"self\"\n      ],\n      \"test_std_along_dims\": [\n         \"self\"\n      ],\n      \"test_subconstant\": [\n         \"self\"\n      ],\n      \"test_sum\": [\n         \"self\"\n      ],\n      \"test_super_resolution\": [\n         \"self\"\n      ],\n      \"test_tensor_factories\": [\n         \"self\"\n      ],\n      \"test_tensor_factories_script\": [\n         \"self\"\n      ],\n      \"test_tensor_index_1d\": [\n         \"self\"\n      ],\n      \"test_tensor_index_2d_1dconstant\": [\n         \"self\"\n      ],\n      \"test_tensor_index_2d_1dslice\": [\n         \"self\"\n      ],\n      \"test_tensor_index_2d_1dslice_first\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing_consecutive\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing_masked\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing_with_slice\": [\n         \"self\"\n      ],\n      \"test_tensor_index_newaxis\": [\n         \"self\"\n      ],\n      \"test_tensor_like_factories_script\": [\n         \"self\"\n      ],\n      \"test_topk\": [\n         \"self\"\n      ],\n      \"test_topk_script\": [\n         \"self\"\n      ],\n      \"test_traced_ints\": [\n         \"self\"\n      ],\n      \"test_trigonometry\": [\n         \"self\"\n      ],\n      \"test_tuple_input_output\": [\n         \"self\"\n      ],\n      \"test_unbind\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_upsample\": [\n         \"self\"\n      ],\n      \"test_vgg16\": [\n         \"self\"\n      ],\n      \"test_vgg16_bn\": [\n         \"self\"\n      ],\n      \"test_vgg19\": [\n         \"self\"\n      ],\n      \"test_vgg19_bn\": [\n         \"self\"\n      ],\n      \"test_weight_norm\": [\n         \"self\"\n      ],\n      \"test_where_functional\": [\n         \"self\"\n      ],\n      \"test_where_method\": [\n         \"self\"\n      ],\n      \"test_while\": [\n         \"self\"\n      ],\n      \"test_while_cond\": [\n         \"self\"\n      ],\n      \"test_word_language_model_GRU\": [\n         \"self\"\n      ],\n      \"test_word_language_model_LSTM\": [\n         \"self\"\n      ],\n      \"test_word_language_model_RNN_RELU\": [\n         \"self\"\n      ],\n      \"test_word_language_model_RNN_TANH\": [\n         \"self\"\n      ]\n   },\n   \"TestCaffe2Basic\": {\n      \"test_dummy_name\": [\n         \"self\"\n      ]\n   },\n   \"TestCaffe2End2End\": {\n      \"_test_net\": [\n         \"self\",\n         \"net_name\",\n         \"input_blob_dims\",\n         \"decimal\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_alexnet\": [\n         \"self\"\n      ],\n      \"test_bvlc_googlenet\": [\n         \"self\"\n      ],\n      \"test_bvlc_reference_caffenet\": [\n         \"self\"\n      ],\n      \"test_bvlc_reference_rcnn_ilsvrc13\": [\n         \"self\"\n      ],\n      \"test_densenet121\": [\n         \"self\"\n      ],\n      \"test_inception_v1\": [\n         \"self\"\n      ],\n      \"test_inception_v2\": [\n         \"self\"\n      ],\n      \"test_resnet50\": [\n         \"self\"\n      ],\n      \"test_squeezenet\": [\n         \"self\"\n      ],\n      \"test_vgg16\": [\n         \"self\"\n      ],\n      \"test_zfnet\": [\n         \"self\"\n      ]\n   },\n   \"TestCase\": {\n      \"assertExpectedInline\": [\n         \"self\",\n         \"actual\",\n         \"expect\",\n         \"skip\"\n      ],\n      \"assertExpectedRaisesInline\": [\n         \"self\",\n         \"exc_type\",\n         \"callable\",\n         \"expect\"\n      ]\n   },\n   \"TestCastOp\": {\n      \"test_cast_int_float\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cast_int_float_empty\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cast_int_to_string\": [\n         \"self\",\n         \"data\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCeil\": {\n      \"test_ceil\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestChannelBackpropStats\": {\n      \"testChannelBackpropStats\": [\n         \"self\",\n         \"size\",\n         \"inputChannels\",\n         \"batchSize\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestChannelStatsOp\": {\n      \"channel_stats_nchw_ref\": [\n         \"self\",\n         \"X\"\n      ],\n      \"channel_stats_nhwc_ref\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_channel_stats_2d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_channel_stats_3d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCheckpoint\": {\n      \"_check_checkpoint_sequential\": [\n         \"self\",\n         \"model\",\n         \"module_lists_to_compare\",\n         \"num_chunks\",\n         \"input\"\n      ],\n      \"test_checkpoint\": [\n         \"self\"\n      ],\n      \"test_checkpoint_module_list\": [\n         \"self\"\n      ],\n      \"test_checkpoint_non_tensor\": [\n         \"self\"\n      ],\n      \"test_checkpoint_rng_cpu\": [\n         \"self\"\n      ],\n      \"test_checkpoint_rng_cuda\": [\n         \"self\"\n      ],\n      \"test_checkpoint_sequential_deprecated_multiple_args\": [\n         \"self\"\n      ],\n      \"test_checkpoint_sequential_deprecated_no_args\": [\n         \"self\"\n      ],\n      \"test_checkpoint_trigger\": [\n         \"self\"\n      ],\n      \"test_checkpoint_valid\": [\n         \"self\"\n      ]\n   },\n   \"TestChoices\": {\n      \"__contains__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"TestClassType\": {\n      \"test_cast_overloads\": [\n         \"self\"\n      ],\n      \"test_class_constant\": [\n         \"self\"\n      ],\n      \"test_class_constructs_itself\": [\n         \"self\"\n      ],\n      \"test_class_inheritance\": [\n         \"self\"\n      ],\n      \"test_class_sorting\": [\n         \"self\"\n      ],\n      \"test_class_specialization\": [\n         \"self\"\n      ],\n      \"test_class_type_as_param\": [\n         \"self\"\n      ],\n      \"test_conditional_set_attr\": [\n         \"self\"\n      ],\n      \"test_get_attr\": [\n         \"self\"\n      ],\n      \"test_get_attr_not_initialized\": [\n         \"self\"\n      ],\n      \"test_get_with_method\": [\n         \"self\"\n      ],\n      \"test_imported_classes\": [\n         \"self\"\n      ],\n      \"test_in\": [\n         \"self\"\n      ],\n      \"test_init_compiled_first\": [\n         \"self\"\n      ],\n      \"test_interface\": [\n         \"self\"\n      ],\n      \"test_optional_type_promotion\": [\n         \"self\"\n      ],\n      \"test_out_of_order_methods\": [\n         \"self\"\n      ],\n      \"test_overloaded_fn\": [\n         \"self\"\n      ],\n      \"test_python_interop\": [\n         \"self\"\n      ],\n      \"test_recursive_class\": [\n         \"self\"\n      ],\n      \"test_save_load_with_classes\": [\n         \"self\"\n      ],\n      \"test_save_load_with_classes_nested\": [\n         \"self\"\n      ],\n      \"test_save_load_with_classes_returned\": [\n         \"self\"\n      ],\n      \"test_schema_human_readable\": [\n         \"self\"\n      ],\n      \"test_set_attr_in_method\": [\n         \"self\"\n      ],\n      \"test_set_attr_non_initialized\": [\n         \"self\"\n      ],\n      \"test_set_attr_type_mismatch\": [\n         \"self\"\n      ],\n      \"test_staticmethod\": [\n         \"self\"\n      ],\n      \"test_type_annotations\": [\n         \"self\"\n      ]\n   },\n   \"TestClip\": {\n      \"test_clip\": [\n         \"self\",\n         \"X\",\n         \"min_\",\n         \"max_\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_clip_default\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestClipTensorByScalingOp\": {\n      \"test_clip_tensor_by_scaling\": [\n         \"self\",\n         \"n\",\n         \"d\",\n         \"threshold\",\n         \"additional_threshold\",\n         \"use_additional_threshold\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCloneNet\": {\n      \"testPartialClone\": [\n         \"self\"\n      ],\n      \"test_mask_clone_update_external_list\": [\n         \"self\"\n      ]\n   },\n   \"TestCollectAndDistributeFpnRpnProposals\": {\n      \"_create_input\": [\n         \"proposal_count\",\n         \"rpn_min_level\",\n         \"rpn_num_levels\",\n         \"roi_canonical_scale\"\n      ],\n      \"test_collect_and_dist\": [\n         \"self\",\n         \"proposal_count\",\n         \"rpn_min_level\",\n         \"rpn_num_levels\",\n         \"roi_min_level\",\n         \"roi_num_levels\",\n         \"rpn_post_nms_topN\",\n         \"roi_canonical_scale\",\n         \"roi_canonical_level\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_collect_and_dist_separately\": [\n         \"self\",\n         \"proposal_count\",\n         \"rpn_min_level\",\n         \"rpn_num_levels\",\n         \"roi_min_level\",\n         \"roi_num_levels\",\n         \"rpn_post_nms_topN\",\n         \"roi_canonical_scale\",\n         \"roi_canonical_level\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCollectEnv\": {\n      \"test_smoke\": [\n         \"self\"\n      ]\n   },\n   \"TestComparatorOps\": {\n      \"test_compare_tensor_scalar\": [\n         \"self\",\n         \"A\",\n         \"b\"\n      ],\n      \"test_compare_tensor_tensor\": [\n         \"self\",\n         \"A\",\n         \"B\"\n      ]\n   },\n   \"TestComplexTensor\": {\n      \"test_copy_real_imag_methods\": [\n         \"self\"\n      ],\n      \"test_exp\": [\n         \"self\"\n      ],\n      \"test_to_list_with_complex_64\": [\n         \"self\"\n      ]\n   },\n   \"TestComplexity\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_generated_functional_tests\": [\n         \"self\"\n      ],\n      \"test_nn_module_tests\": [\n         \"self\"\n      ]\n   },\n   \"TestCompositeReader\": {\n      \"test_composite_reader\": [\n         \"self\"\n      ],\n      \"test_composite_reader_builder\": [\n         \"self\"\n      ]\n   },\n   \"TestConcat\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testConcatNCHW\": [\n         \"self\"\n      ],\n      \"testConcatNHWC\": [\n         \"self\"\n      ]\n   },\n   \"TestConcatDataset\": {\n      \"test_add_dataset\": [\n         \"self\"\n      ],\n      \"test_concat_raises_index_error\": [\n         \"self\"\n      ],\n      \"test_concat_two_non_singletons\": [\n         \"self\"\n      ],\n      \"test_concat_two_non_singletons_with_empty\": [\n         \"self\"\n      ],\n      \"test_concat_two_singletons\": [\n         \"self\"\n      ],\n      \"test_iterable_dataset_err\": [\n         \"self\"\n      ]\n   },\n   \"TestConcatSplitOps\": {\n      \"test_concat\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_concat_add_axis\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_split\": [\n         \"self\",\n         \"tensor_splits\",\n         \"split_as_arg\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_split_by_lengths\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestConditionalOp\": {\n      \"test_conditional\": [\n         \"self\",\n         \"rows_num\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestConfig\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"TestConstraintRegistry\": {\n      \"get_constraints\": [\n         \"self\",\n         \"is_cuda\"\n      ],\n      \"test_biject_to\": [\n         \"self\"\n      ],\n      \"test_biject_to_cuda\": [\n         \"self\"\n      ],\n      \"test_transform_to\": [\n         \"self\"\n      ],\n      \"test_transform_to_cuda\": [\n         \"self\"\n      ]\n   },\n   \"TestConstraints\": {\n      \"test_params_constraints\": [\n         \"self\"\n      ],\n      \"test_support_constraints\": [\n         \"self\"\n      ]\n   },\n   \"TestConsumeOp\": {\n      \"test_jit_consume_op\": [\n         \"self\"\n      ]\n   },\n   \"TestContext\": {\n      \"testDecorator\": [\n         \"self\"\n      ],\n      \"testMultiThreaded\": [\n         \"self\"\n      ],\n      \"use_my_context\": [\n         \"self\"\n      ]\n   },\n   \"TestControl\": {\n      \"BuildAndRunPlan\": [\n         \"self\",\n         \"step\"\n      ],\n      \"CheckNetAllOutput\": [\n         \"self\",\n         \"net\",\n         \"expects\"\n      ],\n      \"CheckNetOutput\": [\n         \"self\",\n         \"nets_and_expects\"\n      ],\n      \"DoUntilLoopTest\": [\n         \"self\",\n         \"nets_or_steps\"\n      ],\n      \"DoWhileLoopTest\": [\n         \"self\",\n         \"nets_or_steps\"\n      ],\n      \"ForLoopTest\": [\n         \"self\",\n         \"nets_or_steps\"\n      ],\n      \"IfCondTest\": [\n         \"self\",\n         \"cond_net\",\n         \"expect\",\n         \"cond_on_blob\"\n      ],\n      \"IfElseCondTest\": [\n         \"self\",\n         \"cond_net\",\n         \"cond_value\",\n         \"expect\",\n         \"cond_on_blob\"\n      ],\n      \"IfNotCondTest\": [\n         \"self\",\n         \"cond_net\",\n         \"expect\",\n         \"cond_on_blob\"\n      ],\n      \"IfNotElseCondTest\": [\n         \"self\",\n         \"cond_net\",\n         \"cond_value\",\n         \"expect\",\n         \"cond_on_blob\"\n      ],\n      \"UntilLoopTest\": [\n         \"self\",\n         \"nets_or_steps\"\n      ],\n      \"WhileLoopTest\": [\n         \"self\",\n         \"nets_or_steps\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testBoolNet\": [\n         \"self\"\n      ],\n      \"testCombineConditions\": [\n         \"self\"\n      ],\n      \"testDoUntilLoopWithNet\": [\n         \"self\"\n      ],\n      \"testDoUntilLoopWithStep\": [\n         \"self\"\n      ],\n      \"testDoWhileLoopWithNet\": [\n         \"self\"\n      ],\n      \"testDoWhileLoopWithStep\": [\n         \"self\"\n      ],\n      \"testForLoopWithNets\": [\n         \"self\"\n      ],\n      \"testForLoopWithStep\": [\n         \"self\"\n      ],\n      \"testIfCondFalseOnBlob\": [\n         \"self\"\n      ],\n      \"testIfCondFalseOnNet\": [\n         \"self\"\n      ],\n      \"testIfCondTrueOnBlob\": [\n         \"self\"\n      ],\n      \"testIfCondTrueOnNet\": [\n         \"self\"\n      ],\n      \"testIfElseCondFalseOnBlob\": [\n         \"self\"\n      ],\n      \"testIfElseCondFalseOnNet\": [\n         \"self\"\n      ],\n      \"testIfElseCondTrueOnBlob\": [\n         \"self\"\n      ],\n      \"testIfElseCondTrueOnNet\": [\n         \"self\"\n      ],\n      \"testIfNotCondFalseOnBlob\": [\n         \"self\"\n      ],\n      \"testIfNotCondFalseOnNet\": [\n         \"self\"\n      ],\n      \"testIfNotCondTrueOnBlob\": [\n         \"self\"\n      ],\n      \"testIfNotCondTrueOnNet\": [\n         \"self\"\n      ],\n      \"testIfNotElseCondFalseOnBlob\": [\n         \"self\"\n      ],\n      \"testIfNotElseCondFalseOnNet\": [\n         \"self\"\n      ],\n      \"testIfNotElseCondTrueOnBlob\": [\n         \"self\"\n      ],\n      \"testIfNotElseCondTrueOnNet\": [\n         \"self\"\n      ],\n      \"testMergeConditionNets\": [\n         \"self\"\n      ],\n      \"testSwitch\": [\n         \"self\"\n      ],\n      \"testSwitchNot\": [\n         \"self\"\n      ],\n      \"testUntilLoopWithNet\": [\n         \"self\"\n      ],\n      \"testUntilLoopWithStep\": [\n         \"self\"\n      ],\n      \"testWhileLoopWithNet\": [\n         \"self\"\n      ],\n      \"testWhileLoopWithStep\": [\n         \"self\"\n      ]\n   },\n   \"TestConversion\": {\n      \"_make_fake_if_op\": [\n         \"self\",\n         \"true_nodes\",\n         \"false_nodes\",\n         \"output_types\"\n      ],\n      \"_make_fake_loop_op\": [\n         \"self\",\n         \"body_nodes\",\n         \"input_types\",\n         \"output_types\"\n      ],\n      \"_run_command\": [\n         \"self\",\n         \"cmd\"\n      ],\n      \"test_caffe2_to_onnx\": [\n         \"self\"\n      ],\n      \"test_caffe2_to_onnx_value_info\": [\n         \"self\"\n      ],\n      \"test_convert_end2end\": [\n         \"self\"\n      ],\n      \"test_onnx_to_caffe2\": [\n         \"self\"\n      ],\n      \"test_onnx_to_caffe2_if\": [\n         \"self\"\n      ],\n      \"test_onnx_to_caffe2_loop\": [\n         \"self\"\n      ],\n      \"test_onnx_to_caffe2_zipfile\": [\n         \"self\"\n      ]\n   },\n   \"TestConvnetBenchmarks\": {\n      \"testConvnetBenchmarks\": [\n         \"self\"\n      ]\n   },\n   \"TestConvolution\": {\n      \"test_conv_gradients\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"deformable_group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_conv_separate_stride_pad_gradients\": [\n         \"self\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"shared_buffer\",\n         \"use_bias\",\n         \"deformable_group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_flat_input_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"deformable_group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_null_offset_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"deformable_group\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_shuffle_input_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"deformable_group\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestConvolutionTranspose\": {\n      \"test_convolution_transpose_gradients\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"adj\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"compute_dX\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_transpose_layout\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"adj\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"engine\",\n         \"shared_buffer\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_transpose_layout_legacy_args\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"adj\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"engine\",\n         \"shared_buffer\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_transpose_separate_stride_pad_adj_gradient\": [\n         \"self\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_t\",\n         \"pad_l\",\n         \"pad_b\",\n         \"pad_r\",\n         \"kernel\",\n         \"adj_h\",\n         \"adj_w\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"compute_dX\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_transpose_separate_stride_pad_adj_layout\": [\n         \"self\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_t\",\n         \"pad_l\",\n         \"pad_b\",\n         \"pad_r\",\n         \"kernel\",\n         \"adj_h\",\n         \"adj_w\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"engine\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_convolution_transpose_with_group\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"adj\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"group\",\n         \"order\",\n         \"engine\",\n         \"shared_buffer\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCopyRowsToTensor\": {\n      \"test_copy_rows_to_tensor\": [\n         \"self\",\n         \"input_tensor\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_copy_rows_to_tensor_invalid_input\": [\n         \"self\",\n         \"input_tensor\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCos\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testCos\": [\n         \"self\"\n      ]\n   },\n   \"TestCosineEmbeddingCriterion\": {\n      \"test_cosine_embedding_criterion\": [\n         \"self\",\n         \"N\",\n         \"seed\",\n         \"margin\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCounterOps\": {\n      \"test_stats_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestCppApiParity\": {},\n   \"TestCppEnforceAsException\": {\n      \"testEnforce\": [\n         \"self\"\n      ]\n   },\n   \"TestCppExtensionAOT\": {\n      \"test_backward\": [\n         \"self\"\n      ],\n      \"test_cuda_extension\": [\n         \"self\"\n      ],\n      \"test_extension_function\": [\n         \"self\"\n      ],\n      \"test_extension_module\": [\n         \"self\"\n      ],\n      \"test_no_python_abi_suffix_sets_the_correct_library_name\": [\n         \"self\"\n      ],\n      \"test_optional\": [\n         \"self\"\n      ]\n   },\n   \"TestCppExtensionJIT\": {\n      \"_run_jit_cuda_archflags\": [\n         \"self\",\n         \"flags\",\n         \"expected\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"tearDownClass\": [\n         \"cls\"\n      ],\n      \"test_autograd_from_cpp\": [\n         \"self\"\n      ],\n      \"test_compilation_error_formatting\": [\n         \"self\"\n      ],\n      \"test_cpp_frontend_module_has_same_output_as_python\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_cpp_frontend_module_has_up_to_date_attributes\": [\n         \"self\"\n      ],\n      \"test_cpp_frontend_module_python_inter_op\": [\n         \"self\"\n      ],\n      \"test_cpp_frontend_module_python_inter_op_with_cuda\": [\n         \"self\"\n      ],\n      \"test_custom_compound_op_autograd\": [\n         \"self\"\n      ],\n      \"test_half_support\": [\n         \"self\"\n      ],\n      \"test_inline_jit_compile_extension_cuda\": [\n         \"self\"\n      ],\n      \"test_inline_jit_compile_extension_multiple_sources_and_no_functions\": [\n         \"self\"\n      ],\n      \"test_inline_jit_compile_extension_throws_when_functions_is_bad\": [\n         \"self\"\n      ],\n      \"test_inline_jit_compile_extension_with_functions_as_dict\": [\n         \"self\"\n      ],\n      \"test_inline_jit_compile_extension_with_functions_as_list\": [\n         \"self\"\n      ],\n      \"test_jit_compile_extension\": [\n         \"self\"\n      ],\n      \"test_jit_cuda_archflags\": [\n         \"self\"\n      ],\n      \"test_jit_cuda_extension\": [\n         \"self\"\n      ],\n      \"test_jit_cudnn_extension\": [\n         \"self\"\n      ],\n      \"test_lenient_flag_handling_in_jit_extensions\": [\n         \"self\"\n      ],\n      \"test_reload_jit_extension\": [\n         \"self\"\n      ],\n      \"test_returns_shared_library_path_when_is_python_module_is_true\": [\n         \"self\"\n      ],\n      \"test_set_default_type_also_changes_aten_default_type\": [\n         \"self\"\n      ],\n      \"test_warning\": [\n         \"self\"\n      ]\n   },\n   \"TestCreateOperator\": {\n      \"testCreate\": [\n         \"self\"\n      ]\n   },\n   \"TestCreatePlan\": {\n      \"test_create_plan_from_proto_correctly\": [\n         \"self\"\n      ]\n   },\n   \"TestCrfDecode\": {\n      \"test_crf_viterbi\": [\n         \"self\",\n         \"num_tags\",\n         \"num_words\"\n      ]\n   },\n   \"TestCrossEntropyOps\": {\n      \"test_cross_entropy_and_unjoied_cross_entropy_relation\": [\n         \"self\",\n         \"log_D_trick\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sigmoid_cross_entropy_with_logits\": [\n         \"self\",\n         \"inputs\",\n         \"options\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_soft_label_cross_entropy\": [\n         \"self\",\n         \"n\",\n         \"b\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_weighted_sigmoid_cross_entropy_with_logits\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestCrossProtoCalls\": {\n      \"testSimple\": [\n         \"self\"\n      ]\n   },\n   \"TestCuda\": {\n      \"_check_memory_stat_consistency\": [\n         \"self\"\n      ],\n      \"_create_scaling_case\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_create_scaling_models_optimizers\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_event_synchronize\": [\n         \"self\",\n         \"spin_time_cycles\"\n      ],\n      \"_event_wait\": [\n         \"self\",\n         \"spin_time_cycles\"\n      ],\n      \"_run_autocast_outofplace\": [\n         \"self\",\n         \"op\",\n         \"args\",\n         \"run_as_type\",\n         \"out_type\",\n         \"module\",\n         \"add_kwargs\"\n      ],\n      \"_run_scaling_case\": [\n         \"self\",\n         \"run\",\n         \"unskipped\",\n         \"skipped\",\n         \"atol\"\n      ],\n      \"_spawn_method\": [\n         \"self\",\n         \"method\",\n         \"arg\"\n      ],\n      \"_stream_synchronize\": [\n         \"self\",\n         \"spin_time_cycles\"\n      ],\n      \"_test_broadcast\": [\n         \"self\",\n         \"input\"\n      ],\n      \"_test_broadcast_coalesced\": [\n         \"self\",\n         \"tensors\",\n         \"buffer_size\"\n      ],\n      \"_test_copy_sync_current_stream\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"_test_gather\": [\n         \"self\",\n         \"dim\"\n      ],\n      \"_test_memory_stats_generator\": [\n         \"self\",\n         \"device\",\n         \"N\"\n      ],\n      \"_test_multinomial_invalid_probs_cuda\": [\n         \"probs\"\n      ],\n      \"_test_reduce_add_coalesced\": [\n         \"self\",\n         \"tensors\",\n         \"buffer_size\"\n      ],\n      \"_test_scatter\": [\n         \"self\",\n         \"input\",\n         \"chunk_sizes\",\n         \"dim\"\n      ],\n      \"_test_stream_event_nogil\": [\n         \"self\",\n         \"sync_func\",\n         \"p2c\",\n         \"c2p\"\n      ],\n      \"args_maybe_kwargs\": [\n         \"self\",\n         \"op_with_args\"\n      ],\n      \"mute\": [],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_arithmetic_large_tensor\": [\n         \"self\"\n      ],\n      \"test_autocast_banned\": [\n         \"self\"\n      ],\n      \"test_autocast_custom_disabled\": [\n         \"self\"\n      ],\n      \"test_autocast_custom_enabled\": [\n         \"self\"\n      ],\n      \"test_autocast_ignored_types\": [\n         \"self\"\n      ],\n      \"test_autocast_methods_expect_builtin_promote\": [\n         \"self\"\n      ],\n      \"test_autocast_methods_fp16\": [\n         \"self\"\n      ],\n      \"test_autocast_methods_fp32\": [\n         \"self\"\n      ],\n      \"test_autocast_nn_fp16\": [\n         \"self\"\n      ],\n      \"test_autocast_nn_fp32\": [\n         \"self\"\n      ],\n      \"test_autocast_torch_expect_builtin_promote\": [\n         \"self\"\n      ],\n      \"test_autocast_torch_fp16\": [\n         \"self\"\n      ],\n      \"test_autocast_torch_fp32\": [\n         \"self\"\n      ],\n      \"test_autocast_torch_need_autocast_promote\": [\n         \"self\"\n      ],\n      \"test_autogpu\": [\n         \"self\"\n      ],\n      \"test_bernoulli\": [\n         \"self\"\n      ],\n      \"test_bincount_ext\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced_dense_only\": [\n         \"self\"\n      ],\n      \"test_broadcast_coalesced_empty_tensors\": [\n         \"self\"\n      ],\n      \"test_broadcast_cpu\": [\n         \"self\"\n      ],\n      \"test_broadcast_gpu\": [\n         \"self\"\n      ],\n      \"test_caching_allocator_record_stream_oom\": [\n         \"self\"\n      ],\n      \"test_caching_pinned_memory\": [\n         \"self\"\n      ],\n      \"test_caching_pinned_memory_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_cat_autogpu\": [\n         \"self\"\n      ],\n      \"test_copy_device\": [\n         \"self\"\n      ],\n      \"test_copy_non_blocking\": [\n         \"self\"\n      ],\n      \"test_copy_streams\": [\n         \"self\"\n      ],\n      \"test_cublas_multiple_threads_same_device\": [\n         \"self\"\n      ],\n      \"test_cuda_get_device_capability\": [\n         \"self\"\n      ],\n      \"test_cuda_get_device_name\": [\n         \"self\"\n      ],\n      \"test_cuda_init_race\": [\n         \"self\"\n      ],\n      \"test_cuda_kernel_loop_overflow\": [\n         \"self\"\n      ],\n      \"test_cuda_kernel_loop_overflow_large\": [\n         \"self\"\n      ],\n      \"test_cuda_memory_leak_detection\": [\n         \"self\"\n      ],\n      \"test_cuda_memory_leak_detection_propagates_errors\": [\n         \"self\"\n      ],\n      \"test_cuda_set_device\": [\n         \"self\"\n      ],\n      \"test_cuda_synchronize\": [\n         \"self\"\n      ],\n      \"test_cudnn_multiple_threads_same_device\": [\n         \"self\"\n      ],\n      \"test_current_stream\": [\n         \"self\"\n      ],\n      \"test_cusparse_multiple_threads_same_device\": [\n         \"self\"\n      ],\n      \"test_default_stream\": [\n         \"self\"\n      ],\n      \"test_events\": [\n         \"self\"\n      ],\n      \"test_events_multi_gpu_elapsed_time\": [\n         \"self\"\n      ],\n      \"test_events_multi_gpu_query\": [\n         \"self\"\n      ],\n      \"test_events_wait\": [\n         \"self\"\n      ],\n      \"test_fft_ifft_rfft_irfft\": [\n         \"self\"\n      ],\n      \"test_gather\": [\n         \"self\"\n      ],\n      \"test_gather_dim\": [\n         \"self\"\n      ],\n      \"test_get_device_index\": [\n         \"self\"\n      ],\n      \"test_get_set_rng_state_all\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_accumulation\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_autocast\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_builtins\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_grad_scaling_clipping\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_clipping_separate_unscale\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_device_as_key\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_multigpu\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_multiple\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_penalty\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_scale\": [\n         \"self\"\n      ],\n      \"test_grad_scaling_state_dict\": [\n         \"self\"\n      ],\n      \"test_huge_index\": [\n         \"self\"\n      ],\n      \"test_is_tensor\": [\n         \"self\"\n      ],\n      \"test_large_trilu_indices\": [\n         \"self\"\n      ],\n      \"test_load_nonexistent_device\": [\n         \"self\"\n      ],\n      \"test_manual_seed\": [\n         \"self\"\n      ],\n      \"test_max_large_axis\": [\n         \"self\"\n      ],\n      \"test_mean_fp16\": [\n         \"self\"\n      ],\n      \"test_memory_allocation\": [\n         \"self\"\n      ],\n      \"test_memory_format_scatter_gather\": [\n         \"self\"\n      ],\n      \"test_memory_stats\": [\n         \"self\"\n      ],\n      \"test_memory_stats_multigpu\": [\n         \"self\"\n      ],\n      \"test_min_max_inits\": [\n         \"self\"\n      ],\n      \"test_multigpu_serialization_remap\": [\n         \"self\"\n      ],\n      \"test_multigpu_serialization_remap_dict\": [\n         \"self\"\n      ],\n      \"test_multigpu_storage_clone\": [\n         \"self\"\n      ],\n      \"test_multinomial_ext\": [\n         \"self\"\n      ],\n      \"test_multinomial_invalid_probs_cuda\": [\n         \"self\"\n      ],\n      \"test_new\": [\n         \"self\"\n      ],\n      \"test_noncontiguous_pinned_memory\": [\n         \"self\"\n      ],\n      \"test_norm_type_conversion\": [\n         \"self\"\n      ],\n      \"test_nvtx\": [\n         \"self\"\n      ],\n      \"test_out_of_memory\": [\n         \"self\"\n      ],\n      \"test_prod_large\": [\n         \"self\"\n      ],\n      \"test_record_stream\": [\n         \"self\"\n      ],\n      \"test_record_stream_on_shifted_view\": [\n         \"self\"\n      ],\n      \"test_reduce_add\": [\n         \"self\"\n      ],\n      \"test_reduce_add_coalesced\": [\n         \"self\"\n      ],\n      \"test_reduce_add_coalesced_dense_only\": [\n         \"self\"\n      ],\n      \"test_reduction_gpu_memory_accessing\": [\n         \"self\"\n      ],\n      \"test_scatter_cpu\": [\n         \"self\"\n      ],\n      \"test_scatter_cpu_dim\": [\n         \"self\"\n      ],\n      \"test_scatter_cpu_neg_dim\": [\n         \"self\"\n      ],\n      \"test_scatter_cpu_sizes\": [\n         \"self\"\n      ],\n      \"test_scatter_gpu\": [\n         \"self\"\n      ],\n      \"test_scatter_gpu_dim\": [\n         \"self\"\n      ],\n      \"test_scatter_gpu_neg_dim\": [\n         \"self\"\n      ],\n      \"test_scatter_gpu_sizes\": [\n         \"self\"\n      ],\n      \"test_serialization_array_with_empty\": [\n         \"self\"\n      ],\n      \"test_serialization_array_with_storage\": [\n         \"self\"\n      ],\n      \"test_specify_improper_device_name\": [\n         \"self\"\n      ],\n      \"test_stream_context\": [\n         \"self\"\n      ],\n      \"test_stream_event_device\": [\n         \"self\"\n      ],\n      \"test_stream_event_nogil\": [\n         \"self\"\n      ],\n      \"test_stream_event_repr\": [\n         \"self\"\n      ],\n      \"test_streaming_backwards_device_transfer\": [\n         \"self\"\n      ],\n      \"test_streaming_backwards_multiple_streams\": [\n         \"self\"\n      ],\n      \"test_streaming_backwards_sync\": [\n         \"self\"\n      ],\n      \"test_streams\": [\n         \"self\"\n      ],\n      \"test_streams_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_streams_multi_gpu_eq\": [\n         \"self\"\n      ],\n      \"test_streams_multi_gpu_query\": [\n         \"self\"\n      ],\n      \"test_streams_priority\": [\n         \"self\"\n      ],\n      \"test_sum_fp16\": [\n         \"self\"\n      ],\n      \"test_tensor_device\": [\n         \"self\"\n      ],\n      \"test_tensor_gather\": [\n         \"self\"\n      ],\n      \"test_tensor_scatter\": [\n         \"self\"\n      ],\n      \"test_tensor_scatterAdd\": [\n         \"self\"\n      ],\n      \"test_tensor_scatterFill\": [\n         \"self\"\n      ],\n      \"test_tiny_half_norm_\": [\n         \"self\"\n      ],\n      \"test_to_non_blocking\": [\n         \"self\"\n      ],\n      \"test_to_numpy\": [\n         \"self\"\n      ],\n      \"test_torch_manual_seed_seeds_cuda_devices\": [\n         \"self\"\n      ],\n      \"test_trilu_indices\": [\n         \"self\"\n      ],\n      \"test_type_conversions\": [\n         \"self\"\n      ]\n   },\n   \"TestCudaFuser\": {\n      \"_binary_test_helper\": [\n         \"self\",\n         \"operation\"\n      ],\n      \"_has_cuda_fusion_group\": [\n         \"self\",\n         \"graph\"\n      ],\n      \"_run_helper\": [\n         \"self\",\n         \"jit_op\",\n         \"op\",\n         \"should_fuse\"\n      ],\n      \"_unary_test_helper\": [\n         \"self\",\n         \"operation\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_binary_ops\": [\n         \"self\"\n      ],\n      \"test_broadcasting\": [\n         \"self\"\n      ],\n      \"test_broadcasting_multiple_output\": [\n         \"self\"\n      ],\n      \"test_broadcasting_multiple_output_shape\": [\n         \"self\"\n      ],\n      \"test_chunk\": [\n         \"self\"\n      ],\n      \"test_const\": [\n         \"self\"\n      ],\n      \"test_scalar_input\": [\n         \"self\"\n      ],\n      \"test_ternary_ops\": [\n         \"self\"\n      ],\n      \"test_unary_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestCudaPrimaryCtx\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_copy\": [\n         \"self\"\n      ],\n      \"test_pin_memory\": [\n         \"self\"\n      ],\n      \"test_str_repr\": [\n         \"self\"\n      ]\n   },\n   \"TestCudaSparse\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"TestCudaUncoalescedSparse\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"TestCustomOperators\": {\n      \"test_calling_scripted_custom_op\": [\n         \"self\"\n      ],\n      \"test_calling_traced_custom_op\": [\n         \"self\"\n      ],\n      \"test_default_arguments_are_used\": [\n         \"self\"\n      ],\n      \"test_dynamic_op_registry\": [\n         \"self\"\n      ],\n      \"test_generic_list\": [\n         \"self\"\n      ],\n      \"test_only_kwargs\": [\n         \"self\"\n      ],\n      \"test_passing_an_argument_both_as_positional_and_kwarg\": [\n         \"self\"\n      ],\n      \"test_passing_and_returning_lists\": [\n         \"self\"\n      ],\n      \"test_passing_one_positional_but_not_the_second\": [\n         \"self\"\n      ],\n      \"test_passing_too_few_args\": [\n         \"self\"\n      ],\n      \"test_passing_too_many_args\": [\n         \"self\"\n      ],\n      \"test_passing_unknown_kwargs\": [\n         \"self\"\n      ],\n      \"test_script_graph_contains_custom_op\": [\n         \"self\"\n      ],\n      \"test_script_graph_for_custom_ops_matches_traced_graph\": [\n         \"self\"\n      ],\n      \"test_simply_calling_an_operator\": [\n         \"self\"\n      ]\n   },\n   \"TestCustomOps\": {\n      \"test_custom_add\": [\n         \"self\"\n      ]\n   },\n   \"TestCustomPinFn\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_custom_batch_pin\": [\n         \"self\"\n      ],\n      \"test_custom_batch_pin_worker\": [\n         \"self\"\n      ]\n   },\n   \"TestDB\": {\n      \"testAddFieldByNestedName\": [\n         \"self\"\n      ],\n      \"testAssignToField\": [\n         \"self\"\n      ],\n      \"testContains\": [\n         \"self\"\n      ],\n      \"testDtypeForCoreType\": [\n         \"self\"\n      ],\n      \"testDupField\": [\n         \"self\"\n      ],\n      \"testFromColumnList\": [\n         \"self\"\n      ],\n      \"testFromEmptyColumnList\": [\n         \"self\"\n      ],\n      \"testGetFieldByNestedName\": [\n         \"self\"\n      ],\n      \"testListInStructIndexing\": [\n         \"self\"\n      ],\n      \"testListSubclassClone\": [\n         \"self\"\n      ],\n      \"testListWithEvictedInStructIndexing\": [\n         \"self\"\n      ],\n      \"testListWithEvictedSubclassClone\": [\n         \"self\"\n      ],\n      \"testMapInStructIndexing\": [\n         \"self\"\n      ],\n      \"testNormalizeField\": [\n         \"self\"\n      ],\n      \"testPicklable\": [\n         \"self\"\n      ],\n      \"testPreservesEmptyFields\": [\n         \"self\"\n      ],\n      \"testPreservesMetadata\": [\n         \"self\"\n      ],\n      \"testRawTuple\": [\n         \"self\"\n      ],\n      \"testScalarForVoidType\": [\n         \"self\"\n      ],\n      \"testScalarShape\": [\n         \"self\"\n      ],\n      \"testStructAddition\": [\n         \"self\"\n      ],\n      \"testStructGet\": [\n         \"self\"\n      ],\n      \"testStructIndexing\": [\n         \"self\"\n      ],\n      \"testStructNestedAddition\": [\n         \"self\"\n      ],\n      \"testStructNestedSubstraction\": [\n         \"self\"\n      ],\n      \"testStructSubclassClone\": [\n         \"self\"\n      ],\n      \"testStructSubstraction\": [\n         \"self\"\n      ],\n      \"testTuple\": [\n         \"self\"\n      ]\n   },\n   \"TestDBFileReader\": {\n      \"_build_source_reader\": [\n         \"ws\",\n         \"size\"\n      ],\n      \"_delete_path\": [\n         \"path\"\n      ],\n      \"_make_temp_path\": [\n         \"self\"\n      ],\n      \"_read_all_data\": [\n         \"ws\",\n         \"reader\",\n         \"session\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_cached_reader\": [\n         \"self\"\n      ],\n      \"test_db_file_reader\": [\n         \"self\"\n      ]\n   },\n   \"TestDTypeInfo\": {\n      \"test_finfo\": [\n         \"self\"\n      ],\n      \"test_iinfo\": [\n         \"self\"\n      ],\n      \"test_invalid_input\": [\n         \"self\"\n      ]\n   },\n   \"TestDataCoupleOp\": {\n      \"test_data_couple_op\": [\n         \"self\"\n      ]\n   },\n   \"TestDataLoader\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_multi_drop\": [\n         \"self\"\n      ],\n      \"test_multi_keep\": [\n         \"self\"\n      ],\n      \"test_random_seed\": [\n         \"self\"\n      ],\n      \"test_single_drop\": [\n         \"self\"\n      ],\n      \"test_single_keep\": [\n         \"self\"\n      ]\n   },\n   \"TestDataParallel\": {},\n   \"TestDatasetOps\": {\n      \"test_collect_tensor_ops\": [\n         \"self\"\n      ],\n      \"test_dataset_ops\": [\n         \"self\"\n      ],\n      \"test_last_n_window_ops\": [\n         \"self\"\n      ],\n      \"test_pack_unpack\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"TestDatasetRandomSplit\": {\n      \"test_lengths_must_equal_dataset_size\": [\n         \"self\"\n      ],\n      \"test_splits_are_mutually_exclusive\": [\n         \"self\"\n      ],\n      \"test_splits_generator\": [\n         \"self\"\n      ],\n      \"test_splits_have_correct_size\": [\n         \"self\"\n      ],\n      \"test_splits_indexing_type\": [\n         \"self\"\n      ],\n      \"test_splits_reproducibility\": [\n         \"self\"\n      ]\n   },\n   \"TestDebugInfoFunc\": {\n      \"backward\": [\n         \"ctx\",\n         \"input\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"input\"\n      ]\n   },\n   \"TestDenseVectorToIdList\": {\n      \"test_dense_vector_to_id_list_op\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dense_vector_to_id_list_ref\": [\n         \"self\"\n      ]\n   },\n   \"TestDeviceOption\": {\n      \"test_check_equal_default_value\": [\n         \"self\"\n      ],\n      \"test_check_equal_node_name\": [\n         \"self\"\n      ]\n   },\n   \"TestDevicePrecision\": {\n      \"_test_linspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"steps\"\n      ],\n      \"_test_logspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"steps\"\n      ],\n      \"_test_logspace_base2\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"steps\"\n      ],\n      \"test_abs_zero\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_advancedindex_mixed_cpu_devices\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_arange\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_arange_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_copy_broadcast\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_copy_noncontig\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_device_rounding\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_device_serialization\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_digamma\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_from_sequence\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_index_add_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_linspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_linspace_special_steps\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_logspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_logspace_base2\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_logspace_special_steps\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_min_max_nan\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multidevice_serialization\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_ones_like\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ones_like_multiple_device\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_polygamma\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve_methods_arg_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sum_cpu_device_mismatch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sum_noncontig\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_type_conversions_same_device\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_var\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_var_large_input\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_zeros_like_multiple_device\": [\n         \"self\",\n         \"devices\"\n      ]\n   },\n   \"TestDict\": {\n      \"dict\": [\n         \"self\"\n      ],\n      \"dict2\": [\n         \"self\"\n      ],\n      \"test_aug_assign\": [\n         \"self\"\n      ],\n      \"test_basic\": [\n         \"self\"\n      ],\n      \"test_clear\": [\n         \"self\"\n      ],\n      \"test_copy\": [\n         \"self\"\n      ],\n      \"test_del\": [\n         \"self\"\n      ],\n      \"test_dict_to_python\": [\n         \"self\"\n      ],\n      \"test_get\": [\n         \"self\"\n      ],\n      \"test_items\": [\n         \"self\"\n      ],\n      \"test_key_type\": [\n         \"self\"\n      ],\n      \"test_keys\": [\n         \"self\"\n      ],\n      \"test_len\": [\n         \"self\"\n      ],\n      \"test_loop\": [\n         \"self\"\n      ],\n      \"test_membership\": [\n         \"self\"\n      ],\n      \"test_mutability\": [\n         \"self\"\n      ],\n      \"test_ordered_dict\": [\n         \"self\"\n      ],\n      \"test_pop\": [\n         \"self\"\n      ],\n      \"test_popitem\": [\n         \"self\"\n      ],\n      \"test_setdefault\": [\n         \"self\"\n      ],\n      \"test_update\": [\n         \"self\"\n      ],\n      \"test_values\": [\n         \"self\"\n      ],\n      \"test_view\": [\n         \"self\"\n      ]\n   },\n   \"TestDictDataLoader\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_pin_memory\": [\n         \"self\"\n      ],\n      \"test_sequential_batch\": [\n         \"self\"\n      ]\n   },\n   \"TestDispatch\": {\n      \"commute\": [\n         \"self\",\n         \"name\",\n         \"ops\",\n         \"ctor_order\",\n         \"expect_raises\"\n      ],\n      \"run_ops\": [\n         \"self\",\n         \"name\",\n         \"ops\",\n         \"ctor_order\",\n         \"dtor_order\",\n         \"results\",\n         \"expect_raises\"\n      ],\n      \"test_all_invariants\": [\n         \"self\"\n      ],\n      \"test_def\": [\n         \"self\"\n      ],\n      \"test_def_impl_schema_mismatch\": [\n         \"self\"\n      ],\n      \"test_def_only\": [\n         \"self\"\n      ],\n      \"test_def_with_explicit_alias\": [\n         \"self\"\n      ],\n      \"test_def_with_inference\": [\n         \"self\"\n      ],\n      \"test_impl_only\": [\n         \"self\"\n      ],\n      \"test_multiple_def_alias_defaulting\": [\n         \"self\"\n      ],\n      \"test_multiple_def_alias_mismatch\": [\n         \"self\"\n      ],\n      \"test_multiple_def_error\": [\n         \"self\"\n      ],\n      \"test_multiple_def_schema_mismatch\": [\n         \"self\"\n      ],\n      \"test_overwrite_catchall\": [\n         \"self\"\n      ]\n   },\n   \"TestDistBackend\": {\n      \"_run\": [\n         \"cls\",\n         \"rank\",\n         \"test_name\",\n         \"file_name\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"setUpClass\": [\n         \"cls\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"world_size\": [\n         \"self\"\n      ]\n   },\n   \"TestDistributed\": {\n      \"test_fake_quant_preserves_buffers\": [\n         \"self\"\n      ],\n      \"test_observers_preserve_buffers\": [\n         \"self\"\n      ],\n      \"test_qat_data_parallel\": [\n         \"self\"\n      ]\n   },\n   \"TestDistributionShapes\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_bernoulli_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_bernoulli_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_beta_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_beta_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_binomial_shape\": [\n         \"self\"\n      ],\n      \"test_binomial_shape_vectorized_n\": [\n         \"self\"\n      ],\n      \"test_categorical_shape\": [\n         \"self\"\n      ],\n      \"test_cauchy_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_cauchy_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_chi2_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_chi2_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_dirichlet_shape\": [\n         \"self\"\n      ],\n      \"test_entropy_shape\": [\n         \"self\"\n      ],\n      \"test_exponential_shape_scalar_param\": [\n         \"self\"\n      ],\n      \"test_exponential_shape_tensor_param\": [\n         \"self\"\n      ],\n      \"test_gamma_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_gamma_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_geometric_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_geometric_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_gumbel_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_halfcauchy_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_halfcauchy_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_laplace_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_laplace_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_mixture_same_family_shape\": [\n         \"self\"\n      ],\n      \"test_multinomial_shape\": [\n         \"self\"\n      ],\n      \"test_normal_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_normal_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_one_hot_categorical_shape\": [\n         \"self\"\n      ],\n      \"test_pareto_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_studentT_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_studentT_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_uniform_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_uniform_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_vonmises_shape_scalar_params\": [\n         \"self\"\n      ],\n      \"test_vonmises_shape_tensor_params\": [\n         \"self\"\n      ],\n      \"test_weibull_scale_scalar_params\": [\n         \"self\"\n      ]\n   },\n   \"TestDistributions\": {\n      \"_check_enumerate_support\": [\n         \"self\",\n         \"dist\",\n         \"examples\"\n      ],\n      \"_check_log_prob\": [\n         \"self\",\n         \"dist\",\n         \"asset_fn\"\n      ],\n      \"_check_sampler_discrete\": [\n         \"self\",\n         \"torch_dist\",\n         \"ref_dist\",\n         \"message\",\n         \"num_samples\",\n         \"failure_rate\"\n      ],\n      \"_check_sampler_sampler\": [\n         \"self\",\n         \"torch_dist\",\n         \"ref_dist\",\n         \"message\",\n         \"multivariate\",\n         \"circular\",\n         \"num_samples\",\n         \"failure_rate\"\n      ],\n      \"_get_logistic_normal_ref_sampler\": [\n         \"self\",\n         \"base_dist\"\n      ],\n      \"_gradcheck_log_prob\": [\n         \"self\",\n         \"dist_ctor\",\n         \"ctor_params\"\n      ],\n      \"test_argmax_relaxed_categorical\": [\n         \"self\"\n      ],\n      \"test_bernoulli\": [\n         \"self\"\n      ],\n      \"test_bernoulli_3d\": [\n         \"self\"\n      ],\n      \"test_bernoulli_enumerate_support\": [\n         \"self\"\n      ],\n      \"test_beta_log_prob\": [\n         \"self\"\n      ],\n      \"test_beta_sample\": [\n         \"self\"\n      ],\n      \"test_beta_shape\": [\n         \"self\"\n      ],\n      \"test_beta_underflow\": [\n         \"self\"\n      ],\n      \"test_beta_underflow_gpu\": [\n         \"self\"\n      ],\n      \"test_binomial\": [\n         \"self\"\n      ],\n      \"test_binomial_enumerate_support\": [\n         \"self\"\n      ],\n      \"test_binomial_extreme_vals\": [\n         \"self\"\n      ],\n      \"test_binomial_log_prob\": [\n         \"self\"\n      ],\n      \"test_binomial_log_prob_vectorized_count\": [\n         \"self\"\n      ],\n      \"test_binomial_sample\": [\n         \"self\"\n      ],\n      \"test_binomial_stable\": [\n         \"self\"\n      ],\n      \"test_binomial_vectorized_count\": [\n         \"self\"\n      ],\n      \"test_categorical_1d\": [\n         \"self\"\n      ],\n      \"test_categorical_2d\": [\n         \"self\"\n      ],\n      \"test_categorical_enumerate_support\": [\n         \"self\"\n      ],\n      \"test_cauchy\": [\n         \"self\"\n      ],\n      \"test_cdf_icdf_inverse\": [\n         \"self\"\n      ],\n      \"test_cdf_log_prob\": [\n         \"self\"\n      ],\n      \"test_chi2_sample\": [\n         \"self\"\n      ],\n      \"test_chi2_shape\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_3d\": [\n         \"self\"\n      ],\n      \"test_dirichlet_log_prob\": [\n         \"self\"\n      ],\n      \"test_dirichlet_sample\": [\n         \"self\"\n      ],\n      \"test_dirichlet_shape\": [\n         \"self\"\n      ],\n      \"test_distribution_expand\": [\n         \"self\"\n      ],\n      \"test_distribution_subclass_expand\": [\n         \"self\"\n      ],\n      \"test_enumerate_support_type\": [\n         \"self\"\n      ],\n      \"test_exponential\": [\n         \"self\"\n      ],\n      \"test_exponential_sample\": [\n         \"self\"\n      ],\n      \"test_fishersnedecor\": [\n         \"self\"\n      ],\n      \"test_fishersnedecor_sample\": [\n         \"self\"\n      ],\n      \"test_gamma_gpu_sample\": [\n         \"self\"\n      ],\n      \"test_gamma_gpu_shape\": [\n         \"self\"\n      ],\n      \"test_gamma_sample\": [\n         \"self\"\n      ],\n      \"test_gamma_shape\": [\n         \"self\"\n      ],\n      \"test_geometric\": [\n         \"self\"\n      ],\n      \"test_geometric_log_prob_and_entropy\": [\n         \"self\"\n      ],\n      \"test_geometric_sample\": [\n         \"self\"\n      ],\n      \"test_gumbel\": [\n         \"self\"\n      ],\n      \"test_gumbel_sample\": [\n         \"self\"\n      ],\n      \"test_halfcauchy\": [\n         \"self\"\n      ],\n      \"test_halfnormal\": [\n         \"self\"\n      ],\n      \"test_halfnormal_logprob\": [\n         \"self\"\n      ],\n      \"test_halfnormal_sample\": [\n         \"self\"\n      ],\n      \"test_has_examples\": [\n         \"self\"\n      ],\n      \"test_independent_expand\": [\n         \"self\"\n      ],\n      \"test_independent_shape\": [\n         \"self\"\n      ],\n      \"test_invalid_parameter_broadcasting\": [\n         \"self\"\n      ],\n      \"test_laplace\": [\n         \"self\"\n      ],\n      \"test_laplace_sample\": [\n         \"self\"\n      ],\n      \"test_lazy_property_grad\": [\n         \"self\"\n      ],\n      \"test_logisticnormal\": [\n         \"self\"\n      ],\n      \"test_logisticnormal_logprob\": [\n         \"self\"\n      ],\n      \"test_logisticnormal_sample\": [\n         \"self\"\n      ],\n      \"test_lognormal\": [\n         \"self\"\n      ],\n      \"test_lognormal_logprob\": [\n         \"self\"\n      ],\n      \"test_lognormal_sample\": [\n         \"self\"\n      ],\n      \"test_lowrank_multivariate_normal_log_prob\": [\n         \"self\"\n      ],\n      \"test_lowrank_multivariate_normal_moments\": [\n         \"self\"\n      ],\n      \"test_lowrank_multivariate_normal_properties\": [\n         \"self\"\n      ],\n      \"test_lowrank_multivariate_normal_sample\": [\n         \"self\"\n      ],\n      \"test_lowrank_multivariate_normal_shape\": [\n         \"self\"\n      ],\n      \"test_mixture_same_family_log_prob\": [\n         \"self\"\n      ],\n      \"test_mixture_same_family_sample\": [\n         \"self\"\n      ],\n      \"test_mixture_same_family_shape\": [\n         \"self\"\n      ],\n      \"test_multinomial_1d\": [\n         \"self\"\n      ],\n      \"test_multinomial_1d_log_prob\": [\n         \"self\"\n      ],\n      \"test_multinomial_2d\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_log_prob\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_moments\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_properties\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_sample\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_shape\": [\n         \"self\"\n      ],\n      \"test_multivariate_normal_stable_with_precision_matrix\": [\n         \"self\"\n      ],\n      \"test_negative_binomial\": [\n         \"self\"\n      ],\n      \"test_negative_binomial_log_prob\": [\n         \"self\"\n      ],\n      \"test_negative_binomial_log_prob_vectorized_count\": [\n         \"self\"\n      ],\n      \"test_normal\": [\n         \"self\"\n      ],\n      \"test_normal_sample\": [\n         \"self\"\n      ],\n      \"test_one_hot_categorical_1d\": [\n         \"self\"\n      ],\n      \"test_one_hot_categorical_2d\": [\n         \"self\"\n      ],\n      \"test_one_hot_categorical_enumerate_support\": [\n         \"self\"\n      ],\n      \"test_pareto\": [\n         \"self\"\n      ],\n      \"test_pareto_sample\": [\n         \"self\"\n      ],\n      \"test_poisson_gpu_sample\": [\n         \"self\"\n      ],\n      \"test_poisson_log_prob\": [\n         \"self\"\n      ],\n      \"test_poisson_sample\": [\n         \"self\"\n      ],\n      \"test_poisson_shape\": [\n         \"self\"\n      ],\n      \"test_relaxed_bernoulli\": [\n         \"self\"\n      ],\n      \"test_relaxed_one_hot_categorical_1d\": [\n         \"self\"\n      ],\n      \"test_relaxed_one_hot_categorical_2d\": [\n         \"self\"\n      ],\n      \"test_repr\": [\n         \"self\"\n      ],\n      \"test_rounded_relaxed_bernoulli\": [\n         \"self\"\n      ],\n      \"test_rsample_requires_grad\": [\n         \"self\"\n      ],\n      \"test_sample_detached\": [\n         \"self\"\n      ],\n      \"test_studentT\": [\n         \"self\"\n      ],\n      \"test_studentT_log_prob\": [\n         \"self\"\n      ],\n      \"test_studentT_sample\": [\n         \"self\"\n      ],\n      \"test_uniform\": [\n         \"self\"\n      ],\n      \"test_valid_parameter_broadcasting\": [\n         \"self\"\n      ],\n      \"test_vonmises_logprob\": [\n         \"self\"\n      ],\n      \"test_vonmises_sample\": [\n         \"self\"\n      ]\n   },\n   \"TestDocCoverage\": {\n      \"_test_tensor\": [\n         \"self\"\n      ],\n      \"_test_torch\": [\n         \"self\"\n      ],\n      \"parse_rst\": [\n         \"filename\",\n         \"regex\"\n      ]\n   },\n   \"TestDropout\": {\n      \"test_dropout_is_test\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"ratio\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_dropout_ratio0\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"output_mask\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestDuplicateOperands\": {\n      \"test_duplicate_operands\": [\n         \"self\"\n      ]\n   },\n   \"TestDynamicQuantizedLinear\": {\n      \"test_qlinear\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"use_bias\",\n         \"use_relu\",\n         \"use_multi_dim_input\",\n         \"use_channelwise\"\n      ],\n      \"test_qlinear_legacy\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels\",\n         \"output_channels\"\n      ]\n   },\n   \"TestDynamicQuantizedModule\": {\n      \"test_linear_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_features\",\n         \"out_features\",\n         \"use_bias\",\n         \"use_default_observer\"\n      ]\n   },\n   \"TestEagerModeNumericSuite\": {\n      \"test_compare_model_outputs\": [\n         \"self\"\n      ],\n      \"test_compare_model_stub\": [\n         \"self\"\n      ],\n      \"test_compare_weights\": [\n         \"self\"\n      ]\n   },\n   \"TestElementwiseBroadcast\": {\n      \"__generate_test_cases\": [\n         \"self\"\n      ],\n      \"__test_binary_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"caffe2_op\",\n         \"op_function\"\n      ],\n      \"test_broadcast_Add\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_broadcast_Mul\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_broadcast_Sub\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_broadcast_powt\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_broadcast_scalar\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_semantic_broadcast\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sum_reduce\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sum_reduce_empty_blob\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sum_reduce_fp16\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestElementwiseLinearOp\": {\n      \"test\": [\n         \"self\",\n         \"n\",\n         \"d\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestElementwiseOps\": {\n      \"_run_single_test\": [\n         \"self\",\n         \"op\",\n         \"ref\",\n         \"A\",\n         \"B\",\n         \"reverse_inputs\",\n         \"test_grad\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"_test_binary_op\": [\n         \"self\",\n         \"op_name\",\n         \"np_ref\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"bias\",\n         \"test_grad\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"_test_binary_op_in_place\": [\n         \"self\",\n         \"op_name\",\n         \"np_ref\",\n         \"n\",\n         \"m\",\n         \"bias\",\n         \"test_grad\",\n         \"in_place_2nd\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"_test_bitwise_binary_op\": [\n         \"self\",\n         \"op_name\",\n         \"np_ref\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_abs\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_add\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bitwise_and\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bitwise_or\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bitwise_xor\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cbrt\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cbrt_grad\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cube\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_div\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_div_legacy_grad\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"broadcast\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_eq\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_eq_bcast\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_exp\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_hard_sigmoid\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"alpha\",\n         \"beta\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_log\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\",\n         \"seed\"\n      ],\n      \"test_mul\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_not\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_powt\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"gc\",\n         \"dc\",\n         \"seed\"\n      ],\n      \"test_reciprocal\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_rsqrt\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sigmoid\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softsign\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sqr\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\",\n         \"seed\"\n      ],\n      \"test_sqrt\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sub\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_swish\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\",\n         \"seed\"\n      ],\n      \"test_swish_gradient_inplace\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"gc\",\n         \"dc\",\n         \"seed\"\n      ]\n   },\n   \"TestEmptySampleOps\": {\n      \"test_emptysample\": [\n         \"self\"\n      ]\n   },\n   \"TestEnforceFinite\": {\n      \"test_enforce_finite\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_enforce_finite_device_check\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestEnsureCPUOutputOp\": {\n      \"test_ensure_cpu_output\": [\n         \"self\",\n         \"input\",\n         \"dev_options\"\n      ]\n   },\n   \"TestEnsureClipped\": {\n      \"test_ensure_clipped\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"sparse\",\n         \"indices\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestErfOp\": {\n      \"test_erf\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestExp\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testExp\": [\n         \"self\"\n      ]\n   },\n   \"TestExpandOp\": {\n      \"_rand_shape\": [\n         \"self\",\n         \"X_shape\",\n         \"max_length\"\n      ],\n      \"_run_expand_op_test\": [\n         \"self\",\n         \"X\",\n         \"shape\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_expand_nonrand_shape1\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_expand_nonrand_shape2\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_expand_rand_shape\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestExpectTest\": {\n      \"test_nth_line_ref\": [\n         \"self\",\n         \"t_lineno\"\n      ],\n      \"test_replace_string_literal_roundtrip\": [\n         \"self\",\n         \"t\",\n         \"raw\",\n         \"quote\"\n      ],\n      \"test_sample\": [\n         \"self\"\n      ]\n   },\n   \"TestExportModes\": {},\n   \"TestExternalInputs\": {\n      \"testSetInputRecordWithBlobs\": [\n         \"self\"\n      ],\n      \"testSetInputRecordWithoutBlobs\": [\n         \"self\"\n      ]\n   },\n   \"TestExtractPredictorNet\": {\n      \"test_extract_simple\": [\n         \"self\"\n      ]\n   },\n   \"TestFFI\": {\n      \"test_deprecated\": [\n         \"self\"\n      ]\n   },\n   \"TestFakeQuantizePerChannel\": {\n      \"test_backward_per_channel\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_forward_per_channel\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_fq_module\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_fq_serializable\": [\n         \"self\"\n      ],\n      \"test_numerical_consistency_per_channel\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ]\n   },\n   \"TestFakeQuantizePerTensor\": {\n      \"test_backward_per_tensor\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_fake_quant_control\": [\n         \"self\"\n      ],\n      \"test_forward_per_tensor\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_fq_module\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ],\n      \"test_fq_serializable\": [\n         \"self\"\n      ],\n      \"test_numerical_consistency_per_tensor\": [\n         \"self\",\n         \"device\",\n         \"X\"\n      ]\n   },\n   \"TestFallbackOps\": {\n      \"test_in_place\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFcOperator\": {\n      \"test_sparse_to_dense_mask\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"use_length\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_to_dense_mask_high_dim\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_to_dense_mask_with_int64\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"use_length\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFeatureMapsOps\": {\n      \"_test_merge_multi_list_or_map_feature_tensors_gradient\": [\n         \"self\",\n         \"op_name\"\n      ],\n      \"_test_merge_single_list_or_map_feature_tensors_gradient\": [\n         \"self\",\n         \"op_name\"\n      ],\n      \"test_merge_multi_list_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_multi_list_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_multi_map_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_multi_map_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_multi_scalar_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_multi_scalar_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_single_list_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_single_list_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_single_map_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_single_map_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_single_scalar_feature_tensors\": [\n         \"self\"\n      ],\n      \"test_merge_single_scalar_feature_tensors_gradient\": [\n         \"self\"\n      ],\n      \"test_merge_single_scalar_feature_tensors_gradient_with_strings\": [\n         \"self\"\n      ]\n   },\n   \"TestFileStoreHandlerOp\": {\n      \"create_store_handler\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_get_timeout\": [\n         \"self\"\n      ],\n      \"test_set_get\": [\n         \"self\"\n      ]\n   },\n   \"TestFiller\": {\n      \"test_filler\": [\n         \"self\"\n      ]\n   },\n   \"TestFillerOperator\": {\n      \"test_diagonal_fill_op_float\": [\n         \"self\",\n         \"shape\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_diagonal_fill_op_int\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gaussian_fill_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_int64_shape\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_range_fill\": [\n         \"self\",\n         \"lengths\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_msra_fill_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_shape_error\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_uniform_fill_using_arg\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_uniform_int_fill_op_blob_input\": [\n         \"self\",\n         \"shape\",\n         \"a\",\n         \"b\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFindOperator\": {\n      \"test_find\": [\n         \"self\",\n         \"n\",\n         \"idxsize\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFlatten\": {\n      \"test_flatten\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFlexibleTopK\": {\n      \"flexible_top_k_ref\": [\n         \"self\",\n         \"X\",\n         \"k\"\n      ],\n      \"test_flexible_top_k\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_flexible_top_k_grad\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFloatToFusedRandRowwiseQuantized\": {\n      \"test_rand_quantization\": [\n         \"self\",\n         \"X\",\n         \"bitwidth_\",\n         \"random_\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFloor\": {\n      \"test_floor\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestFreezing\": {\n      \"test_fold_quantize_freeze\": [\n         \"self\"\n      ],\n      \"test_freeze_module\": [\n         \"self\"\n      ],\n      \"test_freeze_module_detach_gradient\": [\n         \"self\"\n      ],\n      \"test_freeze_module_in_training_mode\": [\n         \"self\"\n      ],\n      \"test_freeze_module_return_self\": [\n         \"self\"\n      ],\n      \"test_freeze_module_return_sub_module\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_attr\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_attr2\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_attr3\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_tensor_attr\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_tensor_attr2\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_tensor_attr3\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_aliased_tensor_attr4\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_helperfunction\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_inplace_mutable\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_list\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_mutable_dict\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_mutable_list\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_mutable_tensor\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_nestedaliasing\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_nestedaliasingscalar\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_overlapping_attrs\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_sharedclasstype\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_submodule\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_tensor\": [\n         \"self\"\n      ],\n      \"test_freeze_module_with_tuple\": [\n         \"self\"\n      ]\n   },\n   \"TestFrontend\": {\n      \"test_instancing_error\": [\n         \"self\"\n      ]\n   },\n   \"TestFrontendSSAConversion\": {\n      \"test_idempotence\": [\n         \"self\"\n      ],\n      \"test_ssa\": [\n         \"self\"\n      ]\n   },\n   \"TestFtrl\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestFunHash\": {\n      \"test_funhash\": [\n         \"self\",\n         \"n_out\",\n         \"n_in\",\n         \"n_data\",\n         \"n_weight\",\n         \"n_alpha\",\n         \"sparsity\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFunctionSchema\": {\n      \"test_backward_compatible_args\": [\n         \"self\"\n      ],\n      \"test_backward_compatible_kwargs\": [\n         \"self\"\n      ],\n      \"test_backward_compatible_ret\": [\n         \"self\"\n      ],\n      \"test_backward_incompatible_args\": [\n         \"self\"\n      ],\n      \"test_backward_incompatible_kwargs\": [\n         \"self\"\n      ],\n      \"test_backward_incompatible_name\": [\n         \"self\"\n      ],\n      \"test_backward_incompatible_returns\": [\n         \"self\"\n      ],\n      \"test_backward_incompatible_vararg\": [\n         \"self\"\n      ],\n      \"test_serialize_and_deserialize\": [\n         \"self\"\n      ]\n   },\n   \"TestFunctional\": {\n      \"test_concat\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_relu\": [\n         \"self\",\n         \"X\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_split\": [\n         \"self\",\n         \"tensor_splits\",\n         \"split_as_arg\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestFunctionalBlocks\": {\n      \"test_lower_linear\": [\n         \"self\"\n      ],\n      \"test_remove_mutation_aten_inplace\": [\n         \"self\"\n      ],\n      \"test_remove_mutation_if_output\": [\n         \"self\"\n      ],\n      \"test_remove_mutation_if_output_fail\": [\n         \"self\"\n      ],\n      \"test_remove_mutation_lists_append\": [\n         \"self\"\n      ],\n      \"test_subgraph_creation\": [\n         \"self\"\n      ]\n   },\n   \"TestFunctionalModule\": {\n      \"test_functional_module\": [\n         \"self\",\n         \"train_mode\"\n      ]\n   },\n   \"TestFunctors\": {\n      \"test_cat_transform\": [\n         \"self\"\n      ],\n      \"test_cat_transform_non_uniform\": [\n         \"self\"\n      ],\n      \"test_stack_transform\": [\n         \"self\"\n      ]\n   },\n   \"TestFused8BitRowwiseQuantizationConversion\": {\n      \"test_quantize_and_dequantize_op\": [\n         \"self\",\n         \"input_data\"\n      ],\n      \"test_quantize_op\": [\n         \"self\",\n         \"input_data\"\n      ]\n   },\n   \"TestFusedNBitRowwiseQuantizationConversion\": {\n      \"test_quantize_and_dequantize_op\": [\n         \"self\",\n         \"input_data\",\n         \"bit_rate\"\n      ],\n      \"test_quantize_op\": [\n         \"self\",\n         \"input_data\",\n         \"bit_rate\"\n      ]\n   },\n   \"TestFuser\": {\n      \"_test_chunk_correctness\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_fused_abs\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_zero_element_tensors\": [\n         \"self\",\n         \"device\"\n      ],\n      \"assertAllFused\": [\n         \"self\",\n         \"graph\",\n         \"except_for\"\n      ],\n      \"fn_test_comparison_gt_lt\": [\n         \"x\",\n         \"y\"\n      ],\n      \"fn_test_exp\": [\n         \"x\",\n         \"y\"\n      ],\n      \"fn_test_relu\": [\n         \"x\",\n         \"y\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_abs_cpu\": [\n         \"self\"\n      ],\n      \"test_abs_cuda\": [\n         \"self\"\n      ],\n      \"test_addcmul_cuda\": [\n         \"self\"\n      ],\n      \"test_arg_configurations_smoke_cuda\": [\n         \"self\"\n      ],\n      \"test_broadcast_cuda\": [\n         \"self\"\n      ],\n      \"test_checks_cat_inputs\": [\n         \"self\"\n      ],\n      \"test_chunk_correctness\": [\n         \"self\"\n      ],\n      \"test_chunk_correctness_cuda\": [\n         \"self\"\n      ],\n      \"test_chunk_cuda\": [\n         \"self\"\n      ],\n      \"test_chunk_distributes_cuda\": [\n         \"self\"\n      ],\n      \"test_chunk_motion_deduplicates_inputs\": [\n         \"self\"\n      ],\n      \"test_chunk_multiple_cuda\": [\n         \"self\"\n      ],\n      \"test_clamp\": [\n         \"self\"\n      ],\n      \"test_comparison_eq_ne\": [\n         \"self\"\n      ],\n      \"test_comparison_ge_le_cuda\": [\n         \"self\"\n      ],\n      \"test_comparison_gt_lt_cuda\": [\n         \"self\"\n      ],\n      \"test_concat_cuda\": [\n         \"self\"\n      ],\n      \"test_concat_invariant_cuda\": [\n         \"self\"\n      ],\n      \"test_cuda_half\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_erf_cuda\": [\n         \"self\"\n      ],\n      \"test_exp_cuda\": [\n         \"self\"\n      ],\n      \"test_fuse_decompose_normalization\": [\n         \"self\"\n      ],\n      \"test_fuser_deduplication\": [\n         \"self\"\n      ],\n      \"test_fuser_iou\": [\n         \"self\"\n      ],\n      \"test_fusion_reuse_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_grad_sum_to_size_elimination\": [\n         \"self\"\n      ],\n      \"test_kernel_cache_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_lerp\": [\n         \"self\"\n      ],\n      \"test_lstm_concat_cuda\": [\n         \"self\"\n      ],\n      \"test_lstm_cuda\": [\n         \"self\"\n      ],\n      \"test_lstm_gates_permutations_cuda\": [\n         \"self\"\n      ],\n      \"test_lstm_traced_cpu\": [\n         \"self\"\n      ],\n      \"test_lstm_traced_cuda\": [\n         \"self\"\n      ],\n      \"test_milstm_cuda\": [\n         \"self\"\n      ],\n      \"test_nonzero_device_cuda\": [\n         \"self\"\n      ],\n      \"test_rand_broadcast_cuda\": [\n         \"self\"\n      ],\n      \"test_rand_cuda\": [\n         \"self\"\n      ],\n      \"test_rand_diamond\": [\n         \"self\"\n      ],\n      \"test_relu_cuda\": [\n         \"self\"\n      ],\n      \"test_scalar\": [\n         \"self\"\n      ],\n      \"test_scalar_arg_cuda\": [\n         \"self\"\n      ],\n      \"test_small_constant_cuda\": [\n         \"self\"\n      ],\n      \"test_tensor_scalar_ops_cuda\": [\n         \"self\"\n      ],\n      \"test_threshold\": [\n         \"self\"\n      ],\n      \"test_where_and_typing\": [\n         \"self\"\n      ],\n      \"test_zero_element_tensors_cpu\": [\n         \"self\"\n      ],\n      \"test_zero_element_tensors_cuda\": [\n         \"self\"\n      ]\n   },\n   \"TestFusion\": {\n      \"checkModelWithSequentialQuantized\": [\n         \"self\",\n         \"model\"\n      ],\n      \"test_fuse_module_eval\": [\n         \"self\"\n      ],\n      \"test_fuse_module_train\": [\n         \"self\"\n      ],\n      \"test_fusion_conv_with_bias\": [\n         \"self\"\n      ],\n      \"test_fusion_sequential_model_eval\": [\n         \"self\"\n      ],\n      \"test_fusion_sequential_model_train\": [\n         \"self\"\n      ]\n   },\n   \"TestFusionEval\": {\n      \"test_fuse_module_eval_numerics\": [\n         \"self\",\n         \"X\",\n         \"running_mean\",\n         \"running_var\"\n      ]\n   },\n   \"TestGFtrl\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"testSparse\": [\n         \"self\"\n      ]\n   },\n   \"TestGatherFused8BitRowwise\": {\n      \"test_batch_gather_ops\": [\n         \"self\",\n         \"rows_num\",\n         \"cols_num\",\n         \"index_num\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGatherOps\": {\n      \"test_batch_gather_op_match_outer\": [\n         \"self\",\n         \"batch_num\",\n         \"rows_num\",\n         \"index_num\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_op_match_outer_axis2_data4D_ind4D\": [\n         \"self\",\n         \"batch_num\",\n         \"rows_num\",\n         \"axis2_num\",\n         \"index_num\",\n         \"index_num2\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ops\": [\n         \"self\",\n         \"rows_num\",\n         \"index_num\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ops_axis2\": [\n         \"self\",\n         \"batch_num\",\n         \"rows_num\",\n         \"index_num\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ops_match_outer\": [\n         \"self\",\n         \"batch_num\",\n         \"rows_num\",\n         \"index_num\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGatherRanges\": {\n      \"test_empty_range_check\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ranges\": [\n         \"self\",\n         \"boarders_and_data\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ranges_split\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_ranges_with_key_split\": [\n         \"self\",\n         \"tensor_splits\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_shape_and_type_inference\": [\n         \"self\"\n      ]\n   },\n   \"TestGivenTensorByteStringToUInt8FillOps\": {\n      \"test_empty_given_tensor_byte_string_to_uint8_fill\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_given_tensor_byte_string_to_uint8_fill\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGivenTensorFillOps\": {\n      \"test_given_tensor_fill\": [\n         \"self\",\n         \"X\",\n         \"t\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGlu\": {\n      \"test_glu_old\": [\n         \"self\",\n         \"X_axis\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGradientCalculation\": {\n      \"assertOperatorListEqual\": [\n         \"self\",\n         \"operatorDefList1\",\n         \"operatorDefList2\"\n      ],\n      \"testDirect\": [\n         \"self\",\n         \"device_option\"\n      ],\n      \"testDirectButNoOutputGradientGiven\": [\n         \"self\"\n      ],\n      \"testDirectImplicitGradientSource\": [\n         \"self\"\n      ],\n      \"testDirectInPlace\": [\n         \"self\"\n      ],\n      \"testDoesNotGenerateUnnecessaryGradients\": [\n         \"self\"\n      ],\n      \"testGradientCalculationWithPrint\": [\n         \"self\"\n      ],\n      \"testGradientMappingUsingSumOp\": [\n         \"self\"\n      ],\n      \"testMultiUseInput\": [\n         \"self\",\n         \"device_option\"\n      ],\n      \"testMultiUseInputAndMultipleVersions\": [\n         \"self\"\n      ],\n      \"testMultiUseInputAndMultipleVersionsBig\": [\n         \"self\"\n      ],\n      \"testMultiUseInputButWithNoGradient\": [\n         \"self\"\n      ],\n      \"testStopGradient\": [\n         \"self\"\n      ],\n      \"testStopGradientInplace\": [\n         \"self\"\n      ],\n      \"testStopGradientOrphan\": [\n         \"self\"\n      ],\n      \"testStopGradientWithMultiUseOperators\": [\n         \"self\"\n      ],\n      \"testUseInput\": [\n         \"self\"\n      ],\n      \"testUseInputButInputHasBeenChanged\": [\n         \"self\"\n      ],\n      \"testUseOutput\": [\n         \"self\"\n      ],\n      \"testUseOutputButOutputHasBeenChanged\": [\n         \"self\"\n      ],\n      \"testUseOutputInPlace\": [\n         \"self\"\n      ],\n      \"testVersionMismatch\": [\n         \"self\"\n      ],\n      \"test_two_grads\": [\n         \"self\"\n      ],\n      \"test_zero_gradient\": [\n         \"self\"\n      ]\n   },\n   \"TestGradientsAccumulationWithNoGradientOps\": {\n      \"testAccumulationWithNoGradientBranch\": [\n         \"self\"\n      ],\n      \"testNormalAccumulation\": [\n         \"self\"\n      ]\n   },\n   \"TestGradientsAccumulationWithPassThroughGradients\": {\n      \"testAccumulationRuns\": [\n         \"self\"\n      ],\n      \"testAddAndDynamicConstant\": [\n         \"self\"\n      ],\n      \"testAddAndStaticConstant\": [\n         \"self\"\n      ],\n      \"testAddOpAtLeaf\": [\n         \"self\"\n      ],\n      \"testAddOpInMiddle\": [\n         \"self\"\n      ],\n      \"testDeviceOptionsPropagation\": [\n         \"self\"\n      ],\n      \"testIncorrectOperator\": [\n         \"self\"\n      ],\n      \"testMultiLayerAddOps\": [\n         \"self\"\n      ],\n      \"testMultiLayerSubOps\": [\n         \"self\"\n      ],\n      \"testSubOpAtLeaf\": [\n         \"self\"\n      ],\n      \"testSubOpInMiddle\": [\n         \"self\"\n      ]\n   },\n   \"TestGraphModePostTrainingStatic\": {\n      \"test_conv\": [\n         \"self\"\n      ],\n      \"test_conv_bn\": [\n         \"self\"\n      ],\n      \"test_nested\": [\n         \"self\"\n      ],\n      \"test_observer_with_ignored_function\": [\n         \"self\"\n      ],\n      \"test_single_linear\": [\n         \"self\"\n      ],\n      \"test_single_linear_dynamic\": [\n         \"self\"\n      ],\n      \"test_skip_quant\": [\n         \"self\"\n      ]\n   },\n   \"TestGroupConvolution\": {\n      \"test_group_convolution\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"engine\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestGroupNormOp\": {\n      \"group_norm_nchw_ref\": [\n         \"self\",\n         \"X\",\n         \"gamma\",\n         \"beta\",\n         \"group\",\n         \"epsilon\"\n      ],\n      \"group_norm_nhwc_ref\": [\n         \"self\",\n         \"X\",\n         \"gamma\",\n         \"beta\",\n         \"group\",\n         \"epsilon\"\n      ],\n      \"test_group_norm_2d\": [\n         \"self\",\n         \"N\",\n         \"G\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"epsilon\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_group_norm_3d\": [\n         \"self\",\n         \"N\",\n         \"G\",\n         \"D\",\n         \"T\",\n         \"H\",\n         \"W\",\n         \"epsilon\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_group_norm_grad\": [\n         \"self\",\n         \"N\",\n         \"G\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"epsilon\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestHeatmapMaxKeypointOp\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_approx_heatmap_keypoint\": [\n         \"self\"\n      ],\n      \"test_caffe2_pytorch_eq\": [\n         \"self\"\n      ],\n      \"test_close_to_FAIR\": [\n         \"self\"\n      ],\n      \"test_special_cases\": [\n         \"self\"\n      ]\n   },\n   \"TestHipify\": {\n      \"test_import_hipify\": [\n         \"self\"\n      ]\n   },\n   \"TestHsm\": {\n      \"test_hsm_forward\": [\n         \"self\"\n      ],\n      \"test_hsm_gradient\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_hsm_run_once\": [\n         \"self\"\n      ],\n      \"test_hsm_search\": [\n         \"self\"\n      ],\n      \"test_huffman_tree_hierarchy\": [\n         \"self\"\n      ]\n   },\n   \"TestHub\": {\n      \"test_download_url_to_file\": [\n         \"self\"\n      ],\n      \"test_hub_dir\": [\n         \"self\"\n      ],\n      \"test_list_entrypoints\": [\n         \"self\"\n      ],\n      \"test_load_from_branch\": [\n         \"self\"\n      ],\n      \"test_load_from_github\": [\n         \"self\"\n      ],\n      \"test_load_state_dict_from_url\": [\n         \"self\"\n      ],\n      \"test_load_zip_checkpoint\": [\n         \"self\"\n      ],\n      \"test_set_dir\": [\n         \"self\"\n      ]\n   },\n   \"TestHyperbolicOps\": {\n      \"_test_hyperbolic_op\": [\n         \"self\",\n         \"op_name\",\n         \"np_ref\",\n         \"X\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_cosh\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sinh\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_tanh\": [\n         \"self\",\n         \"X\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestIf\": {\n      \"testIf\": [\n         \"self\"\n      ]\n   },\n   \"TestImmedibate\": {\n      \"testImmediateEnterExit\": [\n         \"self\"\n      ],\n      \"testImmediateRootFolder\": [\n         \"self\"\n      ],\n      \"testImmediateRunsCorrectly\": [\n         \"self\"\n      ]\n   },\n   \"TestImport\": {\n      \"test_imageinput\": [\n         \"self\",\n         \"size_tuple\",\n         \"means\",\n         \"stds\",\n         \"label_type\",\n         \"num_labels\",\n         \"is_test\",\n         \"scale_jitter_type\",\n         \"color_jitter\",\n         \"color_lighting\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_imageinput_with_additional_outputs\": [\n         \"self\",\n         \"size_tuple\",\n         \"means\",\n         \"stds\",\n         \"label_type\",\n         \"num_labels\",\n         \"is_test\",\n         \"scale_jitter_type\",\n         \"color_jitter\",\n         \"color_lighting\",\n         \"output1\",\n         \"output2_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"validate_image_and_label\": [\n         \"self\",\n         \"expected_images\",\n         \"device_option\",\n         \"count_images\",\n         \"label_type\",\n         \"is_test\",\n         \"scale_jitter_type\",\n         \"color_jitter\",\n         \"color_lighting\"\n      ]\n   },\n   \"TestIndexHashOps\": {\n      \"test_index_hash_ops\": [\n         \"self\",\n         \"indices\",\n         \"seed\",\n         \"modulo\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_shape_and_type_inference\": [\n         \"self\"\n      ]\n   },\n   \"TestIndexOps\": {\n      \"_test_index_ops\": [\n         \"self\",\n         \"entries\",\n         \"dtype\",\n         \"index_create_op\"\n      ],\n      \"test_int_index_ops\": [\n         \"self\"\n      ],\n      \"test_long_index_ops\": [\n         \"self\"\n      ],\n      \"test_string_index_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestIndexing\": {\n      \"test_basic_advanced_combined\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bool_indices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bool_indices_accumulate\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_byte_mask\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_byte_mask2d\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_byte_mask_accumulate\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_byte_tensor_assignment\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ellipsis_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_ndim_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_ndim_index_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_slice\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_getitem_scalars\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_getitem_copy_bools_slices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_put_accumulate_large_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_put_src_datatype\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_index_scalar_with_bool_mask\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_setitem_bools_slices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_src_datatype\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_int_assignment\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_indices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_indices2d\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_indices_broadcast\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_invalid_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_invalid_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multiple_bool_indices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multiple_byte_mask\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multiple_int\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_none\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_out_of_bound_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_setitem_expansion_error\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_setitem_scalars\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_single_int\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_step\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_step_assignment\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_variable_slicing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_zero_dim_index\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"TestIndividualWorkerQueue\": {\n      \"_run_ind_worker_queue_test\": [\n         \"self\",\n         \"batch_size\",\n         \"num_workers\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_ind_worker_queue\": [\n         \"self\"\n      ]\n   },\n   \"TestInferDevice\": {\n      \"_test_op\": [\n         \"self\",\n         \"op_name\",\n         \"in_option\",\n         \"out_option\",\n         \"op_option\",\n         \"inputs\",\n         \"outputs\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_blob_inplace\": [\n         \"self\"\n      ],\n      \"test_cross_nets\": [\n         \"self\"\n      ],\n      \"test_cross_nets_no_change\": [\n         \"self\"\n      ],\n      \"test_device_inference_function\": [\n         \"self\"\n      ],\n      \"test_infer_device\": [\n         \"self\"\n      ],\n      \"test_infer_device_adam\": [\n         \"self\"\n      ],\n      \"test_infer_device_cross_device\": [\n         \"self\"\n      ],\n      \"test_infer_device_split_by_lengths\": [\n         \"self\"\n      ],\n      \"test_inject_copy\": [\n         \"self\"\n      ],\n      \"test_inject_copy_multi_use\": [\n         \"self\"\n      ],\n      \"test_inject_copy_placeholder_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestInferDeviceCpuOnly\": {\n      \"test_inject_copy\": [\n         \"self\"\n      ]\n   },\n   \"TestInstanceNorm\": {\n      \"_feed_inputs\": [\n         \"self\",\n         \"input_blobs\",\n         \"device_option\"\n      ],\n      \"_get_inputs\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\"\n      ],\n      \"_get_op\": [\n         \"self\",\n         \"device_option\",\n         \"store_mean\",\n         \"store_inv_stdev\",\n         \"epsilon\",\n         \"order\",\n         \"inplace\"\n      ],\n      \"test_instance_norm_device_check\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"store_mean\",\n         \"store_inv_stdev\",\n         \"epsilon\",\n         \"seed\"\n      ],\n      \"test_instance_norm_gradients\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"store_mean\",\n         \"store_inv_stdev\",\n         \"epsilon\",\n         \"seed\"\n      ],\n      \"test_instance_norm_layout\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"store_mean\",\n         \"store_inv_stdev\",\n         \"epsilon\",\n         \"seed\"\n      ],\n      \"test_instance_norm_model_helper\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"epsilon\",\n         \"seed\",\n         \"is_test\"\n      ],\n      \"test_instance_norm_reference_check\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"store_mean\",\n         \"store_inv_stdev\",\n         \"epsilon\",\n         \"seed\",\n         \"inplace\"\n      ]\n   },\n   \"TestIntegralImageOps\": {\n      \"test_integral_image_gradient_ops\": [\n         \"self\",\n         \"batch_size\",\n         \"height\",\n         \"width\",\n         \"channels\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_integral_image_ops\": [\n         \"self\",\n         \"batch_size\",\n         \"height\",\n         \"width\",\n         \"channels\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestIsMemberOf\": {\n      \"test_is_member_of\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestJSDOps\": {\n      \"test_bernoulli_jsd\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestJit\": {\n      \"do_trace_arange\": [\n         \"self\",\n         \"requires_grad\"\n      ],\n      \"do_trace_size\": [\n         \"self\",\n         \"requires_grad\"\n      ],\n      \"do_trace_slice\": [\n         \"self\",\n         \"requires_grad\"\n      ],\n      \"run_ge_tests\": [\n         \"self\",\n         \"optimize\",\n         \"use_cuda\"\n      ],\n      \"test_arg_configurations\": [\n         \"self\"\n      ],\n      \"test_attrs\": [\n         \"self\"\n      ],\n      \"test_batchnorm\": [\n         \"self\"\n      ],\n      \"test_big\": [\n         \"self\"\n      ],\n      \"test_canonicalize_tensor_iterator\": [\n         \"self\"\n      ],\n      \"test_constant\": [\n         \"self\"\n      ],\n      \"test_constant_insertion\": [\n         \"self\"\n      ],\n      \"test_constant_prop_aliasing_type\": [\n         \"self\"\n      ],\n      \"test_constant_prop_exception\": [\n         \"self\"\n      ],\n      \"test_constant_prop_if_constant\": [\n         \"self\"\n      ],\n      \"test_constant_prop_if_inline\": [\n         \"self\"\n      ],\n      \"test_constant_prop_loop_constant\": [\n         \"self\"\n      ],\n      \"test_constant_prop_nested\": [\n         \"self\"\n      ],\n      \"test_constant_prop_none\": [\n         \"self\"\n      ],\n      \"test_constant_prop_print\": [\n         \"self\"\n      ],\n      \"test_constant_prop_rand\": [\n         \"self\"\n      ],\n      \"test_constant_prop_remove_output\": [\n         \"self\"\n      ],\n      \"test_constant_prop_simple\": [\n         \"self\"\n      ],\n      \"test_constants_pkl\": [\n         \"self\"\n      ],\n      \"test_conv\": [\n         \"self\"\n      ],\n      \"test_cpp\": [\n         \"self\"\n      ],\n      \"test_cpp_cuda\": [\n         \"self\"\n      ],\n      \"test_cse\": [\n         \"self\"\n      ],\n      \"test_cse_not_introduce_aliasing\": [\n         \"self\"\n      ],\n      \"test_cu_escaped_number\": [\n         \"self\"\n      ],\n      \"test_cuda_export_restore\": [\n         \"self\"\n      ],\n      \"test_decompose_addmm\": [\n         \"self\"\n      ],\n      \"test_diff_subgraph_clones_constants\": [\n         \"self\"\n      ],\n      \"test_disabled\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_dropout_cuda\": [\n         \"self\"\n      ],\n      \"test_dropout_func_requires_grad\": [\n         \"self\"\n      ],\n      \"test_dropout_module_requires_grad\": [\n         \"self\"\n      ],\n      \"test_einsum\": [\n         \"self\"\n      ],\n      \"test_element_size\": [\n         \"self\"\n      ],\n      \"test_expand_fold_quant_inputs\": [\n         \"self\"\n      ],\n      \"test_expand_quantlint\": [\n         \"self\"\n      ],\n      \"test_export_batchnorm\": [\n         \"self\"\n      ],\n      \"test_export_dropout\": [\n         \"self\"\n      ],\n      \"test_export_lstm\": [\n         \"self\"\n      ],\n      \"test_export_no_reorder\": [\n         \"self\"\n      ],\n      \"test_export_opnames\": [\n         \"self\"\n      ],\n      \"test_export_rnn\": [\n         \"self\"\n      ],\n      \"test_export_tensoroption_to\": [\n         \"self\"\n      ],\n      \"test_flags\": [\n         \"self\"\n      ],\n      \"test_force_outplace_check_fill\": [\n         \"self\"\n      ],\n      \"test_force_outplace_check_zero\": [\n         \"self\"\n      ],\n      \"test_function_default_values\": [\n         \"self\"\n      ],\n      \"test_fuse_addmm\": [\n         \"self\"\n      ],\n      \"test_ge\": [\n         \"self\"\n      ],\n      \"test_ge_cuda\": [\n         \"self\"\n      ],\n      \"test_ge_optimized\": [\n         \"self\"\n      ],\n      \"test_ge_unoptimized\": [\n         \"self\"\n      ],\n      \"test_import_method\": [\n         \"self\"\n      ],\n      \"test_index\": [\n         \"self\"\n      ],\n      \"test_index_constant\": [\n         \"self\"\n      ],\n      \"test_index_put\": [\n         \"self\"\n      ],\n      \"test_inplace_check\": [\n         \"self\"\n      ],\n      \"test_inplace_copy\": [\n         \"self\"\n      ],\n      \"test_inplace_flags\": [\n         \"self\"\n      ],\n      \"test_inplace_transplant\": [\n         \"self\"\n      ],\n      \"test_input_dict_checkTrace_mut\": [\n         \"self\"\n      ],\n      \"test_input_dict_empty\": [\n         \"self\"\n      ],\n      \"test_input_dict_empty_list\": [\n         \"self\"\n      ],\n      \"test_input_dict_flattens\": [\n         \"self\"\n      ],\n      \"test_input_dict_flattens_recursive\": [\n         \"self\"\n      ],\n      \"test_input_dict_of_dicts\": [\n         \"self\"\n      ],\n      \"test_input_dict_of_lists\": [\n         \"self\"\n      ],\n      \"test_input_dict_unify\": [\n         \"self\"\n      ],\n      \"test_input_flatten\": [\n         \"self\"\n      ],\n      \"test_input_list_mixed_type\": [\n         \"self\"\n      ],\n      \"test_input_list_of_tuples\": [\n         \"self\"\n      ],\n      \"test_input_list_toplevel_flatten\": [\n         \"self\"\n      ],\n      \"test_input_list_toplevel_flatten_direct\": [\n         \"self\"\n      ],\n      \"test_input_tuple_of_dicts\": [\n         \"self\"\n      ],\n      \"test_large_nbr_kernel_args\": [\n         \"self\"\n      ],\n      \"test_layout\": [\n         \"self\"\n      ],\n      \"test_max_pool\": [\n         \"self\"\n      ],\n      \"test_model_save_error\": [\n         \"self\"\n      ],\n      \"test_module_default_values\": [\n         \"self\"\n      ],\n      \"test_mutable_default_values\": [\n         \"self\"\n      ],\n      \"test_nested_inplace\": [\n         \"self\"\n      ],\n      \"test_no_erroneous_warnings\": [\n         \"self\"\n      ],\n      \"test_numel\": [\n         \"self\"\n      ],\n      \"test_onnx_transpose_incomplete_tensor_type\": [\n         \"self\"\n      ],\n      \"test_output_unflatten\": [\n         \"self\"\n      ],\n      \"test_pattern_based_module_rewrite\": [\n         \"self\"\n      ],\n      \"test_pattern_based_rewrite\": [\n         \"self\"\n      ],\n      \"test_peephole\": [\n         \"self\"\n      ],\n      \"test_peephole_cuda\": [\n         \"self\"\n      ],\n      \"test_peephole_dynamic\": [\n         \"self\"\n      ],\n      \"test_peephole_list_ops\": [\n         \"self\"\n      ],\n      \"test_peephole_no_output_aliasing\": [\n         \"self\"\n      ],\n      \"test_peephole_optimize_shape_ops\": [\n         \"self\"\n      ],\n      \"test_peephole_type_refinements\": [\n         \"self\"\n      ],\n      \"test_peephole_with_non_output_writes\": [\n         \"self\"\n      ],\n      \"test_peephole_with_writes\": [\n         \"self\"\n      ],\n      \"test_pretty_printer\": [\n         \"self\"\n      ],\n      \"test_print_op_module\": [\n         \"self\"\n      ],\n      \"test_python_bindings\": [\n         \"self\"\n      ],\n      \"test_python_function\": [\n         \"self\"\n      ],\n      \"test_python_function_tup\": [\n         \"self\"\n      ],\n      \"test_python_ir\": [\n         \"self\"\n      ],\n      \"test_python_ivalue\": [\n         \"self\"\n      ],\n      \"test_pytorch_jit_env_off\": [\n         \"self\"\n      ],\n      \"test_recursive_cse\": [\n         \"self\"\n      ],\n      \"test_repeated_input\": [\n         \"self\"\n      ],\n      \"test_repeated_output\": [\n         \"self\"\n      ],\n      \"test_restore_device\": [\n         \"self\"\n      ],\n      \"test_restore_device_cuda\": [\n         \"self\"\n      ],\n      \"test_restore_shared_storage_on_cuda\": [\n         \"self\"\n      ],\n      \"test_script_autograd_grad\": [\n         \"self\"\n      ],\n      \"test_script_backward\": [\n         \"self\"\n      ],\n      \"test_serialize_qtensor\": [\n         \"self\"\n      ],\n      \"test_shape_analysis_broadcast\": [\n         \"self\"\n      ],\n      \"test_shared_param\": [\n         \"self\"\n      ],\n      \"test_short_circuit_optimization\": [\n         \"self\"\n      ],\n      \"test_simple\": [\n         \"self\"\n      ],\n      \"test_single_tuple_trace\": [\n         \"self\"\n      ],\n      \"test_sparse_tensors\": [\n         \"self\"\n      ],\n      \"test_tensorexpr_cpp\": [\n         \"self\"\n      ],\n      \"test_tensorexpr_cpp_cuda\": [\n         \"self\"\n      ],\n      \"test_torch_load_error\": [\n         \"self\"\n      ],\n      \"test_torch_load_zipfile_check\": [\n         \"self\"\n      ],\n      \"test_torch_ops_overloaded\": [\n         \"self\"\n      ],\n      \"test_trace_aliased_parameter\": [\n         \"self\"\n      ],\n      \"test_trace_annotation\": [\n         \"self\"\n      ],\n      \"test_trace_arange\": [\n         \"self\"\n      ],\n      \"test_trace_arange_with_grad\": [\n         \"self\"\n      ],\n      \"test_trace_c10_ops\": [\n         \"self\"\n      ],\n      \"test_trace_casts\": [\n         \"self\"\n      ],\n      \"test_trace_checking_with_global_name\": [\n         \"self\"\n      ],\n      \"test_trace_detach\": [\n         \"self\"\n      ],\n      \"test_trace_detach_inplace\": [\n         \"self\"\n      ],\n      \"test_trace_detach_onnx_erase\": [\n         \"self\"\n      ],\n      \"test_trace_dict_input\": [\n         \"self\"\n      ],\n      \"test_trace_dict_output\": [\n         \"self\"\n      ],\n      \"test_trace_full_dynamic_shape\": [\n         \"self\"\n      ],\n      \"test_trace_indexed_assignment\": [\n         \"self\"\n      ],\n      \"test_trace_inline_shape\": [\n         \"self\"\n      ],\n      \"test_trace_legacy_ctor\": [\n         \"self\"\n      ],\n      \"test_trace_namedtuple\": [\n         \"self\"\n      ],\n      \"test_trace_nested_fn\": [\n         \"self\"\n      ],\n      \"test_trace_random\": [\n         \"self\"\n      ],\n      \"test_trace_records_names\": [\n         \"self\"\n      ],\n      \"test_trace_save\": [\n         \"self\"\n      ],\n      \"test_trace_script\": [\n         \"self\"\n      ],\n      \"test_trace_size\": [\n         \"self\"\n      ],\n      \"test_trace_size_with_grad\": [\n         \"self\"\n      ],\n      \"test_trace_slice\": [\n         \"self\"\n      ],\n      \"test_trace_slice_expr_complete_type\": [\n         \"self\"\n      ],\n      \"test_trace_slice_full_dim\": [\n         \"self\"\n      ],\n      \"test_trace_slice_with_grad\": [\n         \"self\"\n      ],\n      \"test_trace_tensor_factory\": [\n         \"self\"\n      ],\n      \"test_trace_tuple\": [\n         \"self\"\n      ],\n      \"test_trace_variable_instantiation\": [\n         \"self\"\n      ],\n      \"test_trace_warn\": [\n         \"self\"\n      ],\n      \"test_trace_with_nested_tensor_list_output\": [\n         \"self\"\n      ],\n      \"test_trace_with_number_list_output\": [\n         \"self\"\n      ],\n      \"test_trace_with_tensor_list_output\": [\n         \"self\"\n      ],\n      \"test_traced_module_cuda\": [\n         \"self\"\n      ],\n      \"test_train_eval\": [\n         \"self\"\n      ],\n      \"test_tuple_specialization\": [\n         \"self\"\n      ],\n      \"test_typeas_trace_check\": [\n         \"self\"\n      ],\n      \"test_unchecked_cast\": [\n         \"self\"\n      ],\n      \"test_unique_state_dict\": [\n         \"self\"\n      ],\n      \"test_verify\": [\n         \"self\"\n      ],\n      \"test_warnings\": [\n         \"self\"\n      ]\n   },\n   \"TestJitDisabled\": {\n      \"compare_enabled_disabled\": [\n         \"self\",\n         \"src\"\n      ],\n      \"test_attribute\": [\n         \"self\"\n      ],\n      \"test_recursive_script\": [\n         \"self\"\n      ],\n      \"test_script_module_construction\": [\n         \"self\"\n      ]\n   },\n   \"TestJitGeneratedAutograd\": {},\n   \"TestJitGeneratedFunctional\": {},\n   \"TestJitGeneratedModule\": {},\n   \"TestKL\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_entropy_exponential_family\": [\n         \"self\"\n      ],\n      \"test_entropy_monte_carlo\": [\n         \"self\"\n      ],\n      \"test_kl_edgecases\": [\n         \"self\"\n      ],\n      \"test_kl_exponential_family\": [\n         \"self\"\n      ],\n      \"test_kl_infinite\": [\n         \"self\"\n      ],\n      \"test_kl_lowrank_multivariate_normal\": [\n         \"self\"\n      ],\n      \"test_kl_lowrank_multivariate_normal_batched\": [\n         \"self\"\n      ],\n      \"test_kl_monte_carlo\": [\n         \"self\"\n      ],\n      \"test_kl_multivariate_normal\": [\n         \"self\"\n      ],\n      \"test_kl_multivariate_normal_batched\": [\n         \"self\"\n      ],\n      \"test_kl_multivariate_normal_batched_broadcasted\": [\n         \"self\"\n      ],\n      \"test_kl_shape\": [\n         \"self\"\n      ]\n   },\n   \"TestKeySplitOps\": {\n      \"test_key_split_op\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLRN\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testLRN\": [\n         \"self\"\n      ]\n   },\n   \"TestLRScheduler\": {\n      \"_check_scheduler_state_dict\": [\n         \"self\",\n         \"constr\",\n         \"constr2\",\n         \"epochs\"\n      ],\n      \"_test\": [\n         \"self\",\n         \"schedulers\",\n         \"targets\",\n         \"epochs\"\n      ],\n      \"_test_CosineAnnealingWarmRestarts\": [\n         \"self\",\n         \"scheduler\",\n         \"targets\",\n         \"epochs\"\n      ],\n      \"_test_against_closed_form\": [\n         \"self\",\n         \"scheduler\",\n         \"closed_form_scheduler\",\n         \"epochs\"\n      ],\n      \"_test_cycle_lr\": [\n         \"self\",\n         \"scheduler\",\n         \"lr_targets\",\n         \"momentum_targets\",\n         \"batch_iterations\",\n         \"verbose\",\n         \"use_beta1\"\n      ],\n      \"_test_get_last_lr\": [\n         \"self\",\n         \"schedulers\",\n         \"targets\",\n         \"epochs\"\n      ],\n      \"_test_interleaved_CosineAnnealingWarmRestarts\": [\n         \"self\",\n         \"scheduler\",\n         \"targets\",\n         \"epochs\"\n      ],\n      \"_test_lr_is_constant_for_constant_epoch\": [\n         \"self\",\n         \"scheduler\"\n      ],\n      \"_test_reduce_lr_on_plateau\": [\n         \"self\",\n         \"schedulers\",\n         \"targets\",\n         \"metrics\",\n         \"epochs\",\n         \"verbose\"\n      ],\n      \"_test_swalr\": [\n         \"self\",\n         \"swa_scheduler\",\n         \"scheduler\",\n         \"targets\",\n         \"swa_start\",\n         \"epochs\"\n      ],\n      \"_test_with_epoch\": [\n         \"self\",\n         \"schedulers\",\n         \"targets\",\n         \"epochs\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_CosineAnnealingWarmRestarts_lr1\": [\n         \"self\"\n      ],\n      \"test_CosineAnnealingWarmRestarts_lr2\": [\n         \"self\"\n      ],\n      \"test_CosineAnnealingWarmRestarts_lr3\": [\n         \"self\"\n      ],\n      \"test_CosineAnnealingWarmRestarts_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_closed_form_cos_anneal_lr\": [\n         \"self\"\n      ],\n      \"test_closed_form_exp_lr\": [\n         \"self\"\n      ],\n      \"test_closed_form_multi_step_lr\": [\n         \"self\"\n      ],\n      \"test_closed_form_step_lr\": [\n         \"self\"\n      ],\n      \"test_compound_cosanneal_and_exp_lr\": [\n         \"self\"\n      ],\n      \"test_compound_cosanneal_and_multistep_lr\": [\n         \"self\"\n      ],\n      \"test_compound_cosanneal_and_step_lr\": [\n         \"self\"\n      ],\n      \"test_compound_exp_and_multistep_lr\": [\n         \"self\"\n      ],\n      \"test_compound_reduce_lr_on_plateau1\": [\n         \"self\"\n      ],\n      \"test_compound_reduce_lr_on_plateau2\": [\n         \"self\"\n      ],\n      \"test_compound_reduce_lr_on_plateau3\": [\n         \"self\"\n      ],\n      \"test_compound_reduce_lr_on_plateau4\": [\n         \"self\"\n      ],\n      \"test_compound_step_and_exp_lr\": [\n         \"self\"\n      ],\n      \"test_compound_step_and_multistep_lr\": [\n         \"self\"\n      ],\n      \"test_cos_anneal_lr\": [\n         \"self\"\n      ],\n      \"test_cosine_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_cosine_then_cyclic\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_cycle_momentum_fail_with_momentumless_optimizer\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_exp_range_mode\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_exp_range_mode_one_lr\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_exp_range_mode_step_size_up_down\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_invalid_mode\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular2_mode\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular2_mode_one_lr\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular2_mode_step_size_up_down\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular_mode\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular_mode_one_lr\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular_mode_one_lr_no_momentum\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_triangular_mode_step_size_up_down\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_with_adam\": [\n         \"self\"\n      ],\n      \"test_cycle_lr_with_momentumless_optimizer\": [\n         \"self\"\n      ],\n      \"test_error_when_getlr_has_epoch\": [\n         \"self\"\n      ],\n      \"test_exp_lr\": [\n         \"self\"\n      ],\n      \"test_exp_step_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_exponential_lr_is_constant_for_constant_epoch\": [\n         \"self\"\n      ],\n      \"test_get_last_lr_multi_step_lr\": [\n         \"self\"\n      ],\n      \"test_get_last_lr_step_lr\": [\n         \"self\"\n      ],\n      \"test_lambda_lr\": [\n         \"self\"\n      ],\n      \"test_lambda_lr_state_dict_fn\": [\n         \"self\"\n      ],\n      \"test_lambda_lr_state_dict_obj\": [\n         \"self\"\n      ],\n      \"test_multi_step_lr\": [\n         \"self\"\n      ],\n      \"test_multi_step_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_multi_step_lr_with_epoch\": [\n         \"self\"\n      ],\n      \"test_multiplicative_lr\": [\n         \"self\"\n      ],\n      \"test_new_pattern_no_warning\": [\n         \"self\"\n      ],\n      \"test_new_pattern_no_warning_with_arg\": [\n         \"self\"\n      ],\n      \"test_new_pattern_no_warning_with_overridden_optim_step\": [\n         \"self\"\n      ],\n      \"test_no_cyclic_references\": [\n         \"self\"\n      ],\n      \"test_old_pattern_warning\": [\n         \"self\"\n      ],\n      \"test_old_pattern_warning_resuming\": [\n         \"self\"\n      ],\n      \"test_old_pattern_warning_resuming_with_arg\": [\n         \"self\"\n      ],\n      \"test_old_pattern_warning_with_arg\": [\n         \"self\"\n      ],\n      \"test_old_pattern_warning_with_overridden_optim_step\": [\n         \"self\"\n      ],\n      \"test_onecycle_lr_cannot_calculate_total_steps\": [\n         \"self\"\n      ],\n      \"test_onecycle_lr_cosine_annealing\": [\n         \"self\"\n      ],\n      \"test_onecycle_lr_invalid_anneal_strategy\": [\n         \"self\"\n      ],\n      \"test_onecycle_lr_invalid_pct_start\": [\n         \"self\"\n      ],\n      \"test_onecycle_lr_linear_annealing\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau1\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau2\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau3\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau4\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau5\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau6\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau7\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau8\": [\n         \"self\"\n      ],\n      \"test_reduce_lr_on_plateau_state_dict\": [\n         \"self\"\n      ],\n      \"test_step_lr\": [\n         \"self\"\n      ],\n      \"test_step_lr_is_constant_for_constant_epoch\": [\n         \"self\"\n      ],\n      \"test_step_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_swa_lr_state_dict\": [\n         \"self\"\n      ],\n      \"test_swalr_cosine_anneal_after_multiplicative\": [\n         \"self\"\n      ],\n      \"test_swalr_hypers\": [\n         \"self\"\n      ],\n      \"test_swalr_linear_anneal_after_multiplicative\": [\n         \"self\"\n      ],\n      \"test_swalr_no_anneal\": [\n         \"self\"\n      ]\n   },\n   \"TestLSTMs\": {\n      \"testEqualToCudnn\": [\n         \"self\"\n      ]\n   },\n   \"TestLars\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"testSparse\": [\n         \"self\"\n      ]\n   },\n   \"TestLayerNormOp\": {\n      \"test_layer_norm_brew_wrapper\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_grad\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"axis\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_grad_op\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op_c10\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op_c10_preallocated_outputs\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op_jit\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op_pytorch\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_layer_norm_op_pytorch_cuda\": [\n         \"self\",\n         \"X\",\n         \"eps\",\n         \"elementwise_affine\"\n      ]\n   },\n   \"TestLayers\": {\n      \"_testLabelSmooth\": [\n         \"self\",\n         \"categories\",\n         \"binary_prob_label\",\n         \"bsz\"\n      ],\n      \"_test_net\": [\n         \"self\",\n         \"net\",\n         \"ops_list\"\n      ],\n      \"testAdaptiveWeight\": [\n         \"self\",\n         \"num\",\n         \"feed_weight\",\n         \"use_inv_var_parameterization\",\n         \"use_log_barrier\",\n         \"enable_diagnose\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testAddLoss\": [\n         \"self\"\n      ],\n      \"testAddOutputSchema\": [\n         \"self\"\n      ],\n      \"testArcCosineFeatureMap\": [\n         \"self\",\n         \"batch_size\",\n         \"input_dims\",\n         \"output_dims\",\n         \"s\",\n         \"scale\",\n         \"set_weight_as_global_constant\"\n      ],\n      \"testBPRLoss\": [\n         \"self\"\n      ],\n      \"testBatchHuberLoss\": [\n         \"self\"\n      ],\n      \"testBatchLRLoss\": [\n         \"self\"\n      ],\n      \"testBatchLRLossWithUncertainty\": [\n         \"self\"\n      ],\n      \"testBatchMSELoss\": [\n         \"self\"\n      ],\n      \"testBatchNormalization\": [\n         \"self\",\n         \"X\"\n      ],\n      \"testBatchSigmoidCrossEntropyLoss\": [\n         \"self\"\n      ],\n      \"testBatchSoftmaxLoss\": [\n         \"self\"\n      ],\n      \"testBatchSoftmaxLossWeight\": [\n         \"self\"\n      ],\n      \"testBlobWeightedSum\": [\n         \"self\",\n         \"num_inputs\",\n         \"batch_size\",\n         \"input_dim\",\n         \"seed\"\n      ],\n      \"testConcat\": [\n         \"self\"\n      ],\n      \"testConstantWeight\": [\n         \"self\",\n         \"num\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testConv\": [\n         \"self\"\n      ],\n      \"testDropout\": [\n         \"self\",\n         \"X\",\n         \"dropout_for_eval\"\n      ],\n      \"testFCTransposed\": [\n         \"self\"\n      ],\n      \"testFCTransposedWithMaxFCSize\": [\n         \"self\"\n      ],\n      \"testFCWithBootstrap\": [\n         \"self\"\n      ],\n      \"testFCWithoutBias\": [\n         \"self\"\n      ],\n      \"testFCwithAxis2\": [\n         \"self\"\n      ],\n      \"testFeatureSparseToDenseGetAccessedFeatures\": [\n         \"self\"\n      ],\n      \"testFilterMetricSchema\": [\n         \"self\"\n      ],\n      \"testFunctionalLayer\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerHelper\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerHelperAutoInference\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerHelperAutoInferenceScalar\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerInputCoercion\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerSameOperatorOutputNames\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerWithOutputDtypes\": [\n         \"self\"\n      ],\n      \"testFunctionalLayerWithOutputNames\": [\n         \"self\"\n      ],\n      \"testGatherRecord\": [\n         \"self\"\n      ],\n      \"testHalfToFloatTypeInference\": [\n         \"self\"\n      ],\n      \"testHomotopyWeight\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testLabelSmoothForBinaryProbLabel\": [\n         \"self\",\n         \"bsz\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testLabelSmoothForCategoricalLabel\": [\n         \"self\",\n         \"categories\",\n         \"bsz\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testLastNWindowCollector\": [\n         \"self\",\n         \"X\",\n         \"num_to_collect\"\n      ],\n      \"testLayerNormalization\": [\n         \"self\",\n         \"X\",\n         \"use_layer_norm_op\"\n      ],\n      \"testMapToRange\": [\n         \"self\"\n      ],\n      \"testMarginRankLoss\": [\n         \"self\"\n      ],\n      \"testMergeIdListsLayer\": [\n         \"self\",\n         \"num_inputs\",\n         \"batch_size\"\n      ],\n      \"testPairwiseSimilarityIncorrectInput\": [\n         \"self\"\n      ],\n      \"testPairwiseSimilarityWithAllEmbeddings\": [\n         \"self\"\n      ],\n      \"testPairwiseSimilarityWithXandYEmbeddings\": [\n         \"self\"\n      ],\n      \"testPairwiseSimilarityWithXandYEmbeddingsAndGather\": [\n         \"self\"\n      ],\n      \"testPropagateRequestOnly\": [\n         \"self\"\n      ],\n      \"testRandomFourierFeatures\": [\n         \"self\",\n         \"batch_size\",\n         \"input_dims\",\n         \"output_dims\",\n         \"bandwidth\"\n      ],\n      \"testReservoirSamplingWithID\": [\n         \"self\",\n         \"X\",\n         \"num_to_collect\"\n      ],\n      \"testSamplingTrain\": [\n         \"self\"\n      ],\n      \"testSelectRecordByContext\": [\n         \"self\"\n      ],\n      \"testSemiRandomFeatures\": [\n         \"self\",\n         \"batch_size\",\n         \"input_dims\",\n         \"output_dims\",\n         \"s\",\n         \"scale\",\n         \"set_weight_as_global_constant\",\n         \"use_struct_input\"\n      ],\n      \"testSetRequestOnly\": [\n         \"self\"\n      ],\n      \"testSparseDropoutWithReplacement\": [\n         \"self\"\n      ],\n      \"testSparseFeatureHashIdList\": [\n         \"self\",\n         \"use_hashing\",\n         \"modulo\",\n         \"use_divide_mod\",\n         \"divisor\"\n      ],\n      \"testSparseFeatureHashIdScoreList\": [\n         \"self\",\n         \"use_hashing\",\n         \"modulo\"\n      ],\n      \"testSparseLookupIncorrectPositionWeightedOnIdList\": [\n         \"self\"\n      ],\n      \"testSparseLookupIncorrectRecencyWeightedOnIdList\": [\n         \"self\"\n      ],\n      \"testSparseLookupPositionWeightedOnIdList\": [\n         \"self\"\n      ],\n      \"testSparseLookupPositionWeightedOnIdScoreList\": [\n         \"self\"\n      ],\n      \"testSparseLookupRecencyWeightedOnIdScoreList\": [\n         \"self\"\n      ],\n      \"testSparseLookupSumPooling\": [\n         \"self\"\n      ],\n      \"testSparseLookupSumPoolingWithEviction\": [\n         \"self\"\n      ],\n      \"testSparseLookupWithAttentionWeightOnIdScoreList\": [\n         \"self\"\n      ],\n      \"testUniformSampling\": [\n         \"self\"\n      ],\n      \"testUniformSamplingWithIncorrectSampleSize\": [\n         \"self\"\n      ],\n      \"test_get_key\": [\n         \"self\"\n      ]\n   },\n   \"TestLazyLogitsInitialization\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_lazy_logits_initialization\": [\n         \"self\"\n      ],\n      \"test_lazy_probs_initialization\": [\n         \"self\"\n      ]\n   },\n   \"TestLeakyRelu\": {\n      \"_feed_inputs\": [\n         \"self\",\n         \"input_blobs\",\n         \"device_option\"\n      ],\n      \"_get_inputs\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\"\n      ],\n      \"_get_op\": [\n         \"self\",\n         \"device_option\",\n         \"alpha\",\n         \"order\",\n         \"inplace\"\n      ],\n      \"test_leaky_relu_device_check\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"alpha\",\n         \"seed\"\n      ],\n      \"test_leaky_relu_gradients\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"alpha\",\n         \"seed\"\n      ],\n      \"test_leaky_relu_layout\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"alpha\",\n         \"seed\"\n      ],\n      \"test_leaky_relu_model_helper_helper\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"alpha\",\n         \"seed\"\n      ],\n      \"test_leaky_relu_reference_check\": [\n         \"self\",\n         \"gc\",\n         \"dc\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"order\",\n         \"alpha\",\n         \"seed\",\n         \"inplace\"\n      ]\n   },\n   \"TestLearningRate\": {\n      \"test_alter_learning_rate_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_composite_learning_rate_op\": [\n         \"self\",\n         \"gc\",\n         \"min_num_iter\",\n         \"max_num_iter\"\n      ],\n      \"test_gate_learningrate\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_hill_learning_rate_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLearningRateAdaption\": {\n      \"test_learning_rate_adaption_op_normalization\": [\n         \"self\",\n         \"inputs\",\n         \"lr\",\n         \"lr_alpha\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_learning_rate_adaption_op_without_normalization\": [\n         \"self\",\n         \"inputs\",\n         \"lr\",\n         \"lr_alpha\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLengthSplitOperator\": {\n      \"_length_split_op_ref\": [\n         \"self\",\n         \"input_lengths\",\n         \"n_split_array\"\n      ],\n      \"test_length_split_arg\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_length_split_edge\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_length_split_even_divide\": [\n         \"self\",\n         \"m\",\n         \"n_split\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_length_split_override_arg\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_length_split_random\": [\n         \"self\",\n         \"m\",\n         \"n_split\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLengthsPadOp\": {\n      \"test_lengths_pad\": [\n         \"self\",\n         \"inputs\",\n         \"delta_length\",\n         \"padding_value\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLengthsReducerOpsFused8BitRowwise\": {\n      \"test_sparse_lengths_mean\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"seed\",\n         \"empty_indices\",\n         \"fp16\"\n      ],\n      \"test_sparse_lengths_sum\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"weighted\",\n         \"seed\",\n         \"empty_indices\",\n         \"fp16\"\n      ]\n   },\n   \"TestLengthsReducerOpsFusedNBitRowwise\": {\n      \"test_sparse_lengths_mean\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"seed\",\n         \"empty_indices\",\n         \"engine\",\n         \"bit_rate\"\n      ],\n      \"test_sparse_lengths_mean_rowwise_sparse_with_skipped_pruning\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"seed\",\n         \"empty_indices\",\n         \"engine\",\n         \"bit_rate\"\n      ],\n      \"test_sparse_lengths_sum\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"weighted\",\n         \"seed\",\n         \"empty_indices\",\n         \"engine\",\n         \"bit_rate\"\n      ],\n      \"test_sparse_lengths_sum_rowwise_sparse\": [\n         \"self\",\n         \"num_rows\",\n         \"blocksize\",\n         \"weighted\",\n         \"empty_indices\",\n         \"bit_rate\",\n         \"indices_64bit\"\n      ]\n   },\n   \"TestLengthsTileOp\": {\n      \"test_lengths_tile\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLengthsToShapeOps\": {\n      \"test_backprop\": [\n         \"self\"\n      ],\n      \"test_basic_reshape\": [\n         \"self\"\n      ],\n      \"test_empty_tensor\": [\n         \"self\"\n      ],\n      \"test_in_place\": [\n         \"self\"\n      ],\n      \"test_input_shape_changes\": [\n         \"self\"\n      ],\n      \"test_lengths_to_shape_ops\": [\n         \"self\"\n      ],\n      \"test_missing_dim\": [\n         \"self\"\n      ],\n      \"test_nonempty_tensor_gradient\": [\n         \"self\"\n      ],\n      \"test_one_dim_and_empty_tensor\": [\n         \"self\"\n      ],\n      \"test_one_dim_empty_tensor_gradient\": [\n         \"self\"\n      ],\n      \"test_reshape_ops\": [\n         \"self\"\n      ],\n      \"test_scalar_to_tensor\": [\n         \"self\"\n      ],\n      \"test_zero_dim\": [\n         \"self\"\n      ],\n      \"test_zero_dim_and_missing_dim\": [\n         \"self\"\n      ]\n   },\n   \"TestLengthsTopKOps\": {\n      \"test_lengths_top_k_empty_op\": [\n         \"self\",\n         \"N\",\n         \"K\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_top_k_op\": [\n         \"self\",\n         \"N\",\n         \"K\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestList\": {\n      \"test_comprehension_iterable\": [\n         \"self\"\n      ],\n      \"test_comprehension_out_type_not_in_type\": [\n         \"self\"\n      ],\n      \"test_comprehensions_basic\": [\n         \"self\"\n      ],\n      \"test_comprehensions_basic_float\": [\n         \"self\"\n      ],\n      \"test_comprehensions_two_comps\": [\n         \"self\"\n      ],\n      \"test_copy_list_immutable\": [\n         \"self\"\n      ],\n      \"test_copy_list_mutable\": [\n         \"self\"\n      ],\n      \"test_del\": [\n         \"self\"\n      ],\n      \"test_extend_list_immutable\": [\n         \"self\"\n      ],\n      \"test_extend_list_mutable\": [\n         \"self\"\n      ],\n      \"test_in_check\": [\n         \"self\"\n      ],\n      \"test_list_count\": [\n         \"self\"\n      ],\n      \"test_list_count_not_existing\": [\n         \"self\"\n      ],\n      \"test_list_gather\": [\n         \"self\"\n      ],\n      \"test_list_index\": [\n         \"self\"\n      ],\n      \"test_list_index_not_existing\": [\n         \"self\"\n      ],\n      \"test_list_len\": [\n         \"self\"\n      ],\n      \"test_list_literal\": [\n         \"self\"\n      ],\n      \"test_list_ops\": [\n         \"self\"\n      ],\n      \"test_list_slice\": [\n         \"self\"\n      ],\n      \"test_list_sort\": [\n         \"self\"\n      ],\n      \"test_min_bool_list\": [\n         \"self\"\n      ],\n      \"test_min_max_list\": [\n         \"self\"\n      ],\n      \"test_min_max_single_list\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append_2\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append_if\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append_if_else\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append_loop\": [\n         \"self\"\n      ],\n      \"test_mutable_list_append_loop_if\": [\n         \"self\"\n      ],\n      \"test_mutable_list_clear\": [\n         \"self\"\n      ],\n      \"test_mutable_list_clear_empty\": [\n         \"self\"\n      ],\n      \"test_mutable_list_function_inline\": [\n         \"self\"\n      ],\n      \"test_mutable_list_insert\": [\n         \"self\"\n      ],\n      \"test_mutable_list_insert_neg_out_of_bounds\": [\n         \"self\"\n      ],\n      \"test_mutable_list_insert_negative\": [\n         \"self\"\n      ],\n      \"test_mutable_list_insert_out_of_bounds\": [\n         \"self\"\n      ],\n      \"test_mutable_list_nested_loop\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop2\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_at\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_at2\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_at_negative\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_at_negative2\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_empty\": [\n         \"self\"\n      ],\n      \"test_mutable_list_pop_slice\": [\n         \"self\"\n      ],\n      \"test_mutable_list_remove\": [\n         \"self\"\n      ],\n      \"test_mutable_list_remove2\": [\n         \"self\"\n      ],\n      \"test_mutable_list_remove_not_existing\": [\n         \"self\"\n      ],\n      \"test_mutable_list_remove_tensor\": [\n         \"self\"\n      ],\n      \"test_mutable_list_reverse\": [\n         \"self\"\n      ],\n      \"test_mutable_list_reverse_empty\": [\n         \"self\"\n      ],\n      \"test_mutable_tensor_list_reverse\": [\n         \"self\"\n      ],\n      \"test_tensor_list_count\": [\n         \"self\"\n      ],\n      \"test_tensor_list_count_not_existing\": [\n         \"self\"\n      ],\n      \"test_tensor_list_index\": [\n         \"self\"\n      ],\n      \"test_tensor_list_index_not_existing\": [\n         \"self\"\n      ],\n      \"test_to_list\": [\n         \"self\"\n      ],\n      \"test_to_list_gpu\": [\n         \"self\"\n      ]\n   },\n   \"TestListwiseL2rOps\": {\n      \"ref_lambda_rank_loss\": [\n         \"self\",\n         \"y\",\n         \"r\",\n         \"use_ndcg_as_loss\",\n         \"use_idcg_normalization\",\n         \"use_exp_gain\"\n      ],\n      \"test_lambda_rank_loss\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"m\"\n      ]\n   },\n   \"TestLoadSave\": {\n      \"testBlobNameOverrides\": [\n         \"self\"\n      ],\n      \"testLoadAllMultipleFiles\": [\n         \"self\"\n      ],\n      \"testLoadAllMultipleFilesWithSameKey\": [\n         \"self\"\n      ],\n      \"testLoadExcessblobs\": [\n         \"self\"\n      ],\n      \"testLoadMultipleFilesGivenSourceBlobNames\": [\n         \"self\"\n      ],\n      \"testLoadRepeatedFiles\": [\n         \"self\"\n      ],\n      \"testLoadSave\": [\n         \"self\"\n      ],\n      \"testMissingFile\": [\n         \"self\"\n      ],\n      \"testRepeatedArgs\": [\n         \"self\"\n      ],\n      \"testTruncatedFile\": [\n         \"self\"\n      ]\n   },\n   \"TestLoadSaveBase\": {\n      \"__init__\": [\n         \"self\",\n         \"methodName\",\n         \"db_type\"\n      ],\n      \"load_save\": [\n         \"self\",\n         \"src_device_type\",\n         \"src_gpu_id\",\n         \"dst_device_type\",\n         \"dst_gpu_id\"\n      ],\n      \"saveFile\": [\n         \"self\",\n         \"tmp_folder\",\n         \"db_name\",\n         \"db_type\",\n         \"start_blob_id\"\n      ]\n   },\n   \"TestLocalSession\": {\n      \"test_local_session\": [\n         \"self\"\n      ]\n   },\n   \"TestLocallyConnectedOp\": {\n      \"test_lc_1d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"size\",\n         \"M\",\n         \"kernel\",\n         \"op_name\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lc_2d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"M\",\n         \"kernel\",\n         \"op_name\",\n         \"order\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lc_3d\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"T\",\n         \"H\",\n         \"W\",\n         \"M\",\n         \"kernel\",\n         \"op_name\",\n         \"use_bias\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestLogging\": {\n      \"test_bump_numeric_counter\": [\n         \"self\"\n      ],\n      \"test_counter_aggregation\": [\n         \"self\"\n      ],\n      \"test_time_measurement_counter\": [\n         \"self\"\n      ],\n      \"test_time_measurement_counter_script\": [\n         \"self\"\n      ],\n      \"test_trace_numeric_counter\": [\n         \"self\"\n      ]\n   },\n   \"TestLossOps\": {\n      \"test_averaged_loss\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMKLBasic\": {\n      \"testConvSpeed\": [\n         \"self\"\n      ],\n      \"testReLUSpeed\": [\n         \"self\"\n      ]\n   },\n   \"TestMPI\": {},\n   \"TestMSNPUTensor\": {\n      \"test_add\": [\n         \"self\"\n      ],\n      \"test_conv_backend_override\": [\n         \"self\"\n      ],\n      \"test_unregistered\": [\n         \"self\"\n      ],\n      \"test_zeros\": [\n         \"self\"\n      ]\n   },\n   \"TestMakeTwoClass\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testMakeTwoClass\": [\n         \"self\"\n      ]\n   },\n   \"TestMap\": {\n      \"test_create_map\": [\n         \"self\"\n      ],\n      \"test_map\": [\n         \"self\"\n      ]\n   },\n   \"TestMarginRankingCriterion\": {\n      \"test_margin_ranking_criterion\": [\n         \"self\",\n         \"N\",\n         \"seed\",\n         \"margin\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMatMul\": {\n      \"test_matmul\": [\n         \"self\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"trans_a\",\n         \"trans_b\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_matmul_axis\": [\n         \"self\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"axis_a\",\n         \"axis_b\",\n         \"trans_a\",\n         \"trans_b\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMathOps\": {\n      \"test_elementwise_power\": [\n         \"self\",\n         \"X\",\n         \"exponent\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sign\": [\n         \"self\",\n         \"X\",\n         \"exponent\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMean\": {\n      \"test_mean\": [\n         \"self\",\n         \"k\",\n         \"n\",\n         \"m\",\n         \"in_place\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMergeIdListsOp\": {\n      \"test_merge_id_lists_op\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_merge_id_lists_ref\": [\n         \"self\"\n      ]\n   },\n   \"TestMiniAlexNet\": {\n      \"_MiniAlexNetNoDropout\": [\n         \"self\",\n         \"order\"\n      ],\n      \"_testMiniAlexNet\": [\n         \"self\",\n         \"order\"\n      ],\n      \"testMiniAlexNetNCHW\": [\n         \"self\"\n      ]\n   },\n   \"TestMkldnn\": {\n      \"_test_imagenet_model\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_test_serialization\": [\n         \"self\",\n         \"module\",\n         \"inputs\"\n      ],\n      \"_test_tracing\": [\n         \"self\",\n         \"module\",\n         \"inputs\"\n      ],\n      \"test_adaptive_avg_pool2d\": [\n         \"self\"\n      ],\n      \"test_add\": [\n         \"self\"\n      ],\n      \"test_autograd_from_mkldnn\": [\n         \"self\"\n      ],\n      \"test_autograd_to_mkldnn\": [\n         \"self\"\n      ],\n      \"test_avg_pool2d\": [\n         \"self\"\n      ],\n      \"test_batch_norm2d\": [\n         \"self\"\n      ],\n      \"test_clone\": [\n         \"self\"\n      ],\n      \"test_conv2d\": [\n         \"self\"\n      ],\n      \"test_conv2d_legacy_jit_model\": [\n         \"self\"\n      ],\n      \"test_conversion\": [\n         \"self\"\n      ],\n      \"test_detach\": [\n         \"self\"\n      ],\n      \"test_empty\": [\n         \"self\"\n      ],\n      \"test_is_mkldnn\": [\n         \"self\"\n      ],\n      \"test_is_mkldnn_jit\": [\n         \"self\"\n      ],\n      \"test_legacy_new_failure\": [\n         \"self\"\n      ],\n      \"test_linear\": [\n         \"self\"\n      ],\n      \"test_max_pool2d\": [\n         \"self\"\n      ],\n      \"test_mul\": [\n         \"self\"\n      ],\n      \"test_relu\": [\n         \"self\"\n      ],\n      \"test_relu_\": [\n         \"self\"\n      ],\n      \"test_repr\": [\n         \"self\"\n      ],\n      \"test_reshape\": [\n         \"self\"\n      ],\n      \"test_reshape_blocked_format\": [\n         \"self\"\n      ],\n      \"test_resnet18\": [\n         \"self\"\n      ],\n      \"test_resnext50_32x4d\": [\n         \"self\"\n      ],\n      \"test_set_data_tensorimpl_type\": [\n         \"self\"\n      ],\n      \"test_sigmoid\": [\n         \"self\"\n      ],\n      \"test_softmax\": [\n         \"self\"\n      ],\n      \"test_transpose\": [\n         \"self\"\n      ],\n      \"test_unsupported\": [\n         \"self\"\n      ],\n      \"test_view\": [\n         \"self\"\n      ],\n      \"test_zero_\": [\n         \"self\"\n      ]\n   },\n   \"TestMobileExporter\": {\n      \"test_mobile_exporter\": [\n         \"self\"\n      ],\n      \"test_mobile_exporter_datatypes\": [\n         \"self\"\n      ]\n   },\n   \"TestMod\": {\n      \"test_mod\": [\n         \"self\",\n         \"data\",\n         \"divisor\",\n         \"inplace\",\n         \"sign_follow_divisor\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestModelNumerics\": {\n      \"test_fake_quant_true_quant_compare\": [\n         \"self\"\n      ],\n      \"test_float_quant_compare_per_channel\": [\n         \"self\"\n      ],\n      \"test_float_quant_compare_per_tensor\": [\n         \"self\"\n      ],\n      \"test_weight_only_activation_only_fakequant\": [\n         \"self\"\n      ]\n   },\n   \"TestModels\": {\n      \"exportTest\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"rtol\",\n         \"atol\"\n      ],\n      \"test_alexnet\": [\n         \"self\"\n      ],\n      \"test_concat\": [\n         \"self\"\n      ],\n      \"test_dcgan_netD\": [\n         \"self\"\n      ],\n      \"test_dcgan_netG\": [\n         \"self\"\n      ],\n      \"test_densenet\": [\n         \"self\"\n      ],\n      \"test_inception\": [\n         \"self\"\n      ],\n      \"test_mnist\": [\n         \"self\"\n      ],\n      \"test_ops\": [\n         \"self\"\n      ],\n      \"test_permute\": [\n         \"self\"\n      ],\n      \"test_prelu\": [\n         \"self\"\n      ],\n      \"test_resnet\": [\n         \"self\"\n      ],\n      \"test_squeezenet\": [\n         \"self\"\n      ],\n      \"test_srresnet\": [\n         \"self\"\n      ],\n      \"test_super_resolution\": [\n         \"self\"\n      ],\n      \"test_vgg16\": [\n         \"self\"\n      ],\n      \"test_vgg16_bn\": [\n         \"self\"\n      ],\n      \"test_vgg19\": [\n         \"self\"\n      ],\n      \"test_vgg19_bn\": [\n         \"self\"\n      ]\n   },\n   \"TestModuleInterface\": {\n      \"test_freeze_module_with_interface\": [\n         \"self\"\n      ],\n      \"test_module_apis_interface\": [\n         \"self\"\n      ],\n      \"test_module_interface\": [\n         \"self\"\n      ],\n      \"test_module_interface_inheritance\": [\n         \"self\"\n      ],\n      \"test_module_interface_subtype\": [\n         \"self\"\n      ],\n      \"test_module_swap\": [\n         \"self\"\n      ],\n      \"test_module_swap_no_lazy_compile\": [\n         \"self\"\n      ],\n      \"test_module_swap_no_module_interface\": [\n         \"self\"\n      ],\n      \"test_module_swap_wrong_module\": [\n         \"self\"\n      ],\n      \"test_not_submodule_interface_call\": [\n         \"self\"\n      ],\n      \"test_script_module_as_interface_swap\": [\n         \"self\"\n      ]\n   },\n   \"TestMomentsOp\": {\n      \"run_moments_test\": [\n         \"self\",\n         \"X\",\n         \"axes\",\n         \"keepdims\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_moments\": [\n         \"self\",\n         \"X\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMomentumSGD\": {\n      \"test_fp16momentum_sgd\": [\n         \"self\",\n         \"n\",\n         \"nesterov\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_momentum_sgd\": [\n         \"self\",\n         \"n\",\n         \"nesterov\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_momentum_sgd\": [\n         \"self\",\n         \"inputs\",\n         \"momentum\",\n         \"nesterov\",\n         \"lr\",\n         \"data_strategy\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMomentumSGDUpdateOps\": {\n      \"test_MomentumSGDUpdate\": [\n         \"self\",\n         \"n\",\n         \"nesterov\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestMomentumSgd\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestMuji\": {\n      \"RunningAllreduceWithGPUs\": [\n         \"self\",\n         \"gpu_ids\",\n         \"allreduce_function\"\n      ],\n      \"testAllreduceFallback\": [\n         \"self\"\n      ],\n      \"testAllreduceSingleGPU\": [\n         \"self\"\n      ],\n      \"testAllreduceWithEightGPUs\": [\n         \"self\"\n      ],\n      \"testAllreduceWithFourGPUs\": [\n         \"self\"\n      ],\n      \"testAllreduceWithFourGPUsAndTwoGroups\": [\n         \"self\"\n      ],\n      \"testAllreduceWithTwoGPUs\": [\n         \"self\"\n      ]\n   },\n   \"TestMultiOptimizers\": {\n      \"test_multiple_optimizers\": [\n         \"self\"\n      ]\n   },\n   \"TestMultiPrecisionSgd\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"testGPUDense\": [\n         \"self\"\n      ]\n   },\n   \"TestMultiWorkspaces\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testCreateWorkspace\": [\n         \"self\"\n      ]\n   },\n   \"TestMultiprocessing\": {\n      \"_test_autograd_sharing\": [\n         \"self\",\n         \"var\",\n         \"ctx\",\n         \"is_parameter\"\n      ],\n      \"_test_empty_tensor_sharing\": [\n         \"self\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"_test_event_handle_exporter_consumer\": [\n         \"handle\",\n         \"p2c\",\n         \"c2p\"\n      ],\n      \"_test_event_handle_importer_consumer\": [\n         \"handle\",\n         \"p2c\",\n         \"c2p\"\n      ],\n      \"_test_event_multiprocess_child\": [\n         \"event\",\n         \"p2c\",\n         \"c2p\"\n      ],\n      \"_test_is_shared\": [\n         \"self\"\n      ],\n      \"_test_mixed_types_cuda_sharing\": [\n         \"self\",\n         \"ctx\"\n      ],\n      \"_test_pool\": [\n         \"self\",\n         \"ctx\",\n         \"repeat\"\n      ],\n      \"_test_preserve_sharing\": [\n         \"self\",\n         \"ctx\",\n         \"repeat\"\n      ],\n      \"_test_sharing\": [\n         \"self\",\n         \"ctx\",\n         \"type\",\n         \"repeat\"\n      ],\n      \"run_process_no_exception\": [\n         \"code\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_autograd_errors\": [\n         \"self\"\n      ],\n      \"test_autograd_fine_with_spawn\": [\n         \"self\"\n      ],\n      \"test_cuda_bad_call\": [\n         \"self\"\n      ],\n      \"test_cuda_memory_allocation\": [\n         \"self\"\n      ],\n      \"test_cuda_parameter_sharing\": [\n         \"self\"\n      ],\n      \"test_cuda_send_many\": [\n         \"self\",\n         \"name\",\n         \"size\",\n         \"count\"\n      ],\n      \"test_cuda_simple\": [\n         \"self\"\n      ],\n      \"test_cuda_small_tensors\": [\n         \"self\"\n      ],\n      \"test_cuda_variable_sharing\": [\n         \"self\"\n      ],\n      \"test_empty_shared\": [\n         \"self\"\n      ],\n      \"test_empty_tensor_sharing\": [\n         \"self\"\n      ],\n      \"test_empty_tensor_sharing_cuda\": [\n         \"self\"\n      ],\n      \"test_event\": [\n         \"self\"\n      ],\n      \"test_event_handle_exporter\": [\n         \"self\"\n      ],\n      \"test_event_handle_importer\": [\n         \"self\"\n      ],\n      \"test_event_handle_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_event_multiprocess\": [\n         \"self\"\n      ],\n      \"test_fd_pool\": [\n         \"self\"\n      ],\n      \"test_fd_preserve_sharing\": [\n         \"self\"\n      ],\n      \"test_fd_sharing\": [\n         \"self\"\n      ],\n      \"test_fs\": [\n         \"self\"\n      ],\n      \"test_fs_is_shared\": [\n         \"self\"\n      ],\n      \"test_fs_pool\": [\n         \"self\"\n      ],\n      \"test_fs_preserve_sharing\": [\n         \"self\"\n      ],\n      \"test_fs_sharing\": [\n         \"self\"\n      ],\n      \"test_inherit_tensor\": [\n         \"self\"\n      ],\n      \"test_integer_parameter_serialization\": [\n         \"self\"\n      ],\n      \"test_is_shared\": [\n         \"self\"\n      ],\n      \"test_is_shared_cuda\": [\n         \"self\"\n      ],\n      \"test_leaf_variable_sharing\": [\n         \"self\"\n      ],\n      \"test_mixed_types_cuda_sharing\": [\n         \"self\"\n      ],\n      \"test_non_leaf_variable_sharing\": [\n         \"self\"\n      ],\n      \"test_parameter_sharing\": [\n         \"self\"\n      ],\n      \"test_variable_sharing\": [\n         \"self\"\n      ],\n      \"test_wrong_cuda_fork\": [\n         \"self\"\n      ]\n   },\n   \"TestMultithreadAutograd\": {\n      \"_run_py_multithread_fn\": [\n         \"self\",\n         \"fn\",\n         \"args\",\n         \"num_threads\",\n         \"kwargs\"\n      ],\n      \"test_fork_join_in_middle\": [\n         \"self\"\n      ],\n      \"test_python_thread_in_middle\": [\n         \"self\"\n      ],\n      \"test_simple_backward\": [\n         \"self\"\n      ],\n      \"test_simple_backward_same_input\": [\n         \"self\"\n      ]\n   },\n   \"TestNBitFakeFused\": {\n      \"testNBit\": [\n         \"self\",\n         \"bit_rate\"\n      ]\n   },\n   \"TestNBitGreedyFused\": {\n      \"testNBit\": [\n         \"self\",\n         \"bit_rate\"\n      ]\n   },\n   \"TestNCCL\": {\n      \"test_all_gather\": [\n         \"self\"\n      ],\n      \"test_all_reduce\": [\n         \"self\"\n      ],\n      \"test_broadcast\": [\n         \"self\"\n      ],\n      \"test_reduce\": [\n         \"self\"\n      ],\n      \"test_reduce_scatter\": [\n         \"self\"\n      ],\n      \"test_unique_id\": [\n         \"self\"\n      ]\n   },\n   \"TestNGramOps\": {\n      \"test_ngram_from_categorical_op\": [\n         \"self\",\n         \"seed\",\n         \"N\",\n         \"D\",\n         \"out_of_vcb\",\n         \"max_categorical_limit\",\n         \"max_in_vcb_val\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestNN\": {\n      \"_backward\": [\n         \"self\",\n         \"module\",\n         \"input\",\n         \"output\",\n         \"grad_output\",\n         \"create_graph\"\n      ],\n      \"_backward_criterion\": [\n         \"self\",\n         \"criterion\",\n         \"input\",\n         \"target\",\n         \"gradOutput\",\n         \"extra_args\"\n      ],\n      \"_compatible_subtest\": [\n         \"self\"\n      ],\n      \"_create_basic_net\": [\n         \"self\"\n      ],\n      \"_forward\": [\n         \"self\",\n         \"module\",\n         \"input\"\n      ],\n      \"_forward_criterion\": [\n         \"self\",\n         \"criterion\",\n         \"input\",\n         \"target\",\n         \"extra_args\"\n      ],\n      \"_get_parameters\": [\n         \"self\",\n         \"module\"\n      ],\n      \"_test_RNN_cpu_vs_cudnn\": [\n         \"self\",\n         \"dropout\",\n         \"dtype\"\n      ],\n      \"_test_alpha_dropout\": [\n         \"self\",\n         \"cls\",\n         \"input\"\n      ],\n      \"_test_loss_equal_input_target_shape\": [\n         \"self\",\n         \"cast\"\n      ],\n      \"_verify_pixel_shuffle\": [\n         \"self\",\n         \"input\",\n         \"output\",\n         \"upscale_factor\"\n      ],\n      \"_zero_grad_parameters\": [\n         \"self\",\n         \"module\"\n      ],\n      \"run_conv_double_back_test\": [\n         \"self\",\n         \"kern\",\n         \"stride\",\n         \"padding\",\n         \"chan_in\",\n         \"chan_out\",\n         \"batch_size\",\n         \"inp_size\",\n         \"dilation\",\n         \"no_weight\",\n         \"groups\",\n         \"use_cuda\",\n         \"use_bias\",\n         \"dtype\"\n      ],\n      \"run_grad_conv_test\": [\n         \"self\",\n         \"func_forward\",\n         \"func_backward\",\n         \"dim\",\n         \"gradient\"\n      ],\n      \"test_AlphaDropout\": [\n         \"self\"\n      ],\n      \"test_CTCLoss_lengthchecks_cpu\": [\n         \"self\"\n      ],\n      \"test_CTCLoss_lengthchecks_cuda\": [\n         \"self\"\n      ],\n      \"test_CTCLoss_long_targets\": [\n         \"self\"\n      ],\n      \"test_CTCLoss_typechecks\": [\n         \"self\"\n      ],\n      \"test_CTCLoss_zero_infinity\": [\n         \"self\"\n      ],\n      \"test_Conv2d_backward_twice\": [\n         \"self\"\n      ],\n      \"test_Conv2d_depthwise_naive_groups_cuda\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_Conv2d_deterministic_cudnn\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_Conv2d_groups_nobias\": [\n         \"self\"\n      ],\n      \"test_Conv2d_groups_nobias_v2\": [\n         \"self\"\n      ],\n      \"test_Conv2d_inconsistent_types\": [\n         \"self\"\n      ],\n      \"test_Conv2d_inconsistent_types_on_GPU_with_cudnn\": [\n         \"self\"\n      ],\n      \"test_Conv2d_inconsistent_types_on_GPU_without_cudnn\": [\n         \"self\"\n      ],\n      \"test_Conv2d_large_workspace\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_Conv2d_missing_argument\": [\n         \"self\"\n      ],\n      \"test_Conv3d_groups_nobias\": [\n         \"self\"\n      ],\n      \"test_Conv3d_groups_wbias\": [\n         \"self\"\n      ],\n      \"test_ConvTranspose2d_half_cublas_gemm\": [\n         \"self\"\n      ],\n      \"test_ConvTranspose2d_output_size\": [\n         \"self\"\n      ],\n      \"test_ConvTranspose3d_correct_output_size\": [\n         \"self\"\n      ],\n      \"test_FeatureAlphaDropout\": [\n         \"self\"\n      ],\n      \"test_KLDivLoss_batch_mean\": [\n         \"self\"\n      ],\n      \"test_KLDivLoss_batch_mean_log_target\": [\n         \"self\"\n      ],\n      \"test_LSTM_cell\": [\n         \"self\"\n      ],\n      \"test_MaxUnpool2d_output_size\": [\n         \"self\"\n      ],\n      \"test_ModuleDict\": [\n         \"self\"\n      ],\n      \"test_ModuleList\": [\n         \"self\"\n      ],\n      \"test_PReLU_backward_requires_grad_false\": [\n         \"self\"\n      ],\n      \"test_ParameterDict\": [\n         \"self\"\n      ],\n      \"test_ParameterList\": [\n         \"self\"\n      ],\n      \"test_RNN_cell\": [\n         \"self\"\n      ],\n      \"test_RNN_cell_no_broadcasting\": [\n         \"self\"\n      ],\n      \"test_RNN_change_dropout\": [\n         \"self\"\n      ],\n      \"test_RNN_cpu_vs_cudnn_no_dropout\": [\n         \"self\"\n      ],\n      \"test_RNN_cpu_vs_cudnn_with_dropout\": [\n         \"self\"\n      ],\n      \"test_RNN_cudnn_weight_norm\": [\n         \"self\"\n      ],\n      \"test_RNN_dropout\": [\n         \"self\"\n      ],\n      \"test_RNN_dropout_state\": [\n         \"self\"\n      ],\n      \"test_RNN_nonlinearity\": [\n         \"self\"\n      ],\n      \"test_Sequential_delitem\": [\n         \"self\"\n      ],\n      \"test_Sequential_getitem\": [\n         \"self\"\n      ],\n      \"test_Sequential_setitem\": [\n         \"self\"\n      ],\n      \"test_Sequential_setitem_named\": [\n         \"self\"\n      ],\n      \"test_Transformer_cell\": [\n         \"self\"\n      ],\n      \"test_adaptive_log_softmax\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_avg_nhwc\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_avg_nhwc_launch_config_backward\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_avg_nhwc_launch_config_forward\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_avg_nhwc_non_contiguous\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_input_size\": [\n         \"self\"\n      ],\n      \"test_adaptive_pooling_size_none\": [\n         \"self\"\n      ],\n      \"test_add_module\": [\n         \"self\"\n      ],\n      \"test_add_module_raises_error_if_attr_exists\": [\n         \"self\"\n      ],\n      \"test_affine_2d_rotate0\": [\n         \"self\"\n      ],\n      \"test_affine_2d_rotate45\": [\n         \"self\"\n      ],\n      \"test_affine_2d_rotate90\": [\n         \"self\"\n      ],\n      \"test_affine_2d_rotateRandom\": [\n         \"self\"\n      ],\n      \"test_affine_3d_rotateRandom\": [\n         \"self\"\n      ],\n      \"test_affine_grid\": [\n         \"self\"\n      ],\n      \"test_affine_grid_3d\": [\n         \"self\"\n      ],\n      \"test_affine_grid_error_checking\": [\n         \"self\"\n      ],\n      \"test_assignment\": [\n         \"self\"\n      ],\n      \"test_batchnorm_cudnn_half\": [\n         \"self\"\n      ],\n      \"test_batchnorm_cudnn_nhwc\": [\n         \"self\"\n      ],\n      \"test_batchnorm_large_batch\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_batchnorm_nonaffine_cuda_half_input\": [\n         \"self\"\n      ],\n      \"test_batchnorm_raises_error_if_bias_is_not_same_size_as_input\": [\n         \"self\"\n      ],\n      \"test_batchnorm_raises_error_if_less_than_one_value_per_channel\": [\n         \"self\"\n      ],\n      \"test_batchnorm_raises_error_if_running_mean_is_not_same_size_as_input\": [\n         \"self\"\n      ],\n      \"test_batchnorm_raises_error_if_running_var_is_not_same_size_as_input\": [\n         \"self\"\n      ],\n      \"test_batchnorm_raises_error_if_weight_is_not_same_size_as_input\": [\n         \"self\"\n      ],\n      \"test_bce_loss_always_nonnegative\": [\n         \"self\"\n      ],\n      \"test_bce_loss_broadcasts_weights\": [\n         \"self\"\n      ],\n      \"test_bce_loss_input_range\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_broadcasts_pos_weights\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_broadcasts_weights\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss_large_tensors_with_grad\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_has_correct_grad_at_zero\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_raises_if_target_and_input_are_different_size\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_stability\": [\n         \"self\"\n      ],\n      \"test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero\": [\n         \"self\"\n      ],\n      \"test_bilinear\": [\n         \"self\"\n      ],\n      \"test_bilinear_broadcasting\": [\n         \"self\"\n      ],\n      \"test_bilinear_no_bias\": [\n         \"self\"\n      ],\n      \"test_broadcast_double_backwards_gpu\": [\n         \"self\"\n      ],\n      \"test_broadcast_no_grad\": [\n         \"self\"\n      ],\n      \"test_broadcast_not_requiring_grad\": [\n         \"self\"\n      ],\n      \"test_buffer_not_persistent\": [\n         \"self\"\n      ],\n      \"test_buffer_not_persistent_assign\": [\n         \"self\"\n      ],\n      \"test_buffer_not_persistent_del\": [\n         \"self\"\n      ],\n      \"test_buffer_not_persistent_load\": [\n         \"self\"\n      ],\n      \"test_buffer_not_persistent_overwrite\": [\n         \"self\"\n      ],\n      \"test_buffers_and_named_buffers\": [\n         \"self\"\n      ],\n      \"test_call_supports_python_dict_output\": [\n         \"self\"\n      ],\n      \"test_channel_shuffle\": [\n         \"self\"\n      ],\n      \"test_children\": [\n         \"self\"\n      ],\n      \"test_clip_grad_norm\": [\n         \"self\"\n      ],\n      \"test_clip_grad_value\": [\n         \"self\"\n      ],\n      \"test_compute_nparams_to_prune\": [\n         \"self\"\n      ],\n      \"test_container_copy\": [\n         \"self\"\n      ],\n      \"test_conv_backcompat\": [\n         \"self\"\n      ],\n      \"test_conv_cudnn_memory_layout_dominance\": [\n         \"self\"\n      ],\n      \"test_conv_double_backward\": [\n         \"self\"\n      ],\n      \"test_conv_double_backward_cuda\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_conv_double_backward_groups\": [\n         \"self\"\n      ],\n      \"test_conv_double_backward_no_bias\": [\n         \"self\"\n      ],\n      \"test_conv_double_backward_stride\": [\n         \"self\"\n      ],\n      \"test_conv_modules_raise_error_on_incorrect_input_size\": [\n         \"self\"\n      ],\n      \"test_conv_padding_mode\": [\n         \"self\"\n      ],\n      \"test_conv_shapecheck\": [\n         \"self\"\n      ],\n      \"test_conv_tbc\": [\n         \"self\"\n      ],\n      \"test_convert_sync_batchnorm\": [\n         \"self\"\n      ],\n      \"test_cosine_embedding_loss_margin_no_reduce\": [\n         \"self\"\n      ],\n      \"test_cosine_embedding_loss_no_reduce\": [\n         \"self\"\n      ],\n      \"test_cosine_embedding_loss_with_diff_type\": [\n         \"self\"\n      ],\n      \"test_cosine_similarity\": [\n         \"self\"\n      ],\n      \"test_cross_entropy_loss\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_cuda_rnn_fused\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_cudnn_non_contiguous\": [\n         \"self\"\n      ],\n      \"test_cudnn_noncontiguous_weight\": [\n         \"self\"\n      ],\n      \"test_cudnn_rnn_dropout_states_device\": [\n         \"self\"\n      ],\n      \"test_cudnn_weight_format\": [\n         \"self\"\n      ],\n      \"test_cudnn_weight_tying\": [\n         \"self\"\n      ],\n      \"test_custom_from_mask_pruning\": [\n         \"self\"\n      ],\n      \"test_dir\": [\n         \"self\"\n      ],\n      \"test_dir_digit\": [\n         \"self\"\n      ],\n      \"test_elu_inplace_gradgrad\": [\n         \"self\"\n      ],\n      \"test_elu_inplace_view\": [\n         \"self\"\n      ],\n      \"test_embedding_from_pretrained\": [\n         \"self\"\n      ],\n      \"test_embedding_from_pretrained_options\": [\n         \"self\"\n      ],\n      \"test_embedding_functional\": [\n         \"self\"\n      ],\n      \"test_embedding_max_norm\": [\n         \"self\"\n      ],\n      \"test_embedding_sparse_basic\": [\n         \"self\"\n      ],\n      \"test_embedding_sparse_empty_tensor\": [\n         \"self\"\n      ],\n      \"test_embeddingbag_from_pretrained\": [\n         \"self\"\n      ],\n      \"test_embeddingbag_from_pretrained_options\": [\n         \"self\"\n      ],\n      \"test_fb_fc_packed\": [\n         \"self\"\n      ],\n      \"test_fold_invalid_arg\": [\n         \"self\"\n      ],\n      \"test_fractional_max_pool2d\": [\n         \"self\"\n      ],\n      \"test_functional_grad_conv\": [\n         \"self\"\n      ],\n      \"test_gelu\": [\n         \"self\"\n      ],\n      \"test_getattr_with_property\": [\n         \"self\"\n      ],\n      \"test_global_pruning\": [\n         \"self\"\n      ],\n      \"test_grad_conv1d_input\": [\n         \"self\"\n      ],\n      \"test_grad_conv1d_weight\": [\n         \"self\"\n      ],\n      \"test_grad_conv2d_input\": [\n         \"self\"\n      ],\n      \"test_grad_conv2d_weight\": [\n         \"self\"\n      ],\n      \"test_grad_conv3d_input\": [\n         \"self\"\n      ],\n      \"test_grad_conv3d_weight\": [\n         \"self\"\n      ],\n      \"test_grid_sample\": [\n         \"self\"\n      ],\n      \"test_grid_sample_3d\": [\n         \"self\"\n      ],\n      \"test_grid_sample_error_checking\": [\n         \"self\"\n      ],\n      \"test_grouped_conv_cudnn_nhwc_support\": [\n         \"self\"\n      ],\n      \"test_hardtanh_backward\": [\n         \"self\"\n      ],\n      \"test_hardtanh_inplace_gradgrad\": [\n         \"self\"\n      ],\n      \"test_hook_cpp\": [\n         \"self\"\n      ],\n      \"test_hook_fail\": [\n         \"self\"\n      ],\n      \"test_hook_mutations\": [\n         \"self\"\n      ],\n      \"test_hook_writeable\": [\n         \"self\"\n      ],\n      \"test_hooks\": [\n         \"self\"\n      ],\n      \"test_identity_pruning\": [\n         \"self\"\n      ],\n      \"test_inplace_thnn\": [\n         \"self\"\n      ],\n      \"test_interpolate\": [\n         \"self\"\n      ],\n      \"test_invalid_conv1d\": [\n         \"self\"\n      ],\n      \"test_invalid_conv2d\": [\n         \"self\"\n      ],\n      \"test_invalid_conv3d\": [\n         \"self\"\n      ],\n      \"test_invalid_dropout_p\": [\n         \"self\"\n      ],\n      \"test_kl_div_log_softmax_target\": [\n         \"self\"\n      ],\n      \"test_kl_div_with_diff_type\": [\n         \"self\"\n      ],\n      \"test_kl_div_with_diff_type_log_target\": [\n         \"self\"\n      ],\n      \"test_l1_loss_correct\": [\n         \"self\"\n      ],\n      \"test_l1_unstructured_pruning\": [\n         \"self\"\n      ],\n      \"test_linear_broadcasting\": [\n         \"self\"\n      ],\n      \"test_ln_structured_pruning\": [\n         \"self\"\n      ],\n      \"test_load_state_dict\": [\n         \"self\"\n      ],\n      \"test_load_state_dict_BC\": [\n         \"self\"\n      ],\n      \"test_load_state_dict_custom\": [\n         \"self\"\n      ],\n      \"test_load_state_dict_ref_cycle\": [\n         \"self\"\n      ],\n      \"test_log_softmax\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_log_softmax_cpu\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_loss_equal_input_target_shape\": [\n         \"self\"\n      ],\n      \"test_margin_ranking_loss_margin_no_reduce\": [\n         \"self\"\n      ],\n      \"test_margin_ranking_loss_no_reduce\": [\n         \"self\"\n      ],\n      \"test_mismatch_shape_conv2d\": [\n         \"self\"\n      ],\n      \"test_module_apply_inplace_op\": [\n         \"self\"\n      ],\n      \"test_module_backcompat\": [\n         \"self\"\n      ],\n      \"test_module_to_argparse\": [\n         \"self\"\n      ],\n      \"test_modules\": [\n         \"self\"\n      ],\n      \"test_move_sparse_half_embedding\": [\n         \"self\"\n      ],\n      \"test_mse_loss_size_warning\": [\n         \"self\"\n      ],\n      \"test_multihead_attention\": [\n         \"self\"\n      ],\n      \"test_multihead_attn_3d_attn_mask\": [\n         \"self\"\n      ],\n      \"test_multiple_pruning_calls\": [\n         \"self\"\n      ],\n      \"test_named_children\": [\n         \"self\"\n      ],\n      \"test_named_modules\": [\n         \"self\"\n      ],\n      \"test_nnpack_conv\": [\n         \"self\"\n      ],\n      \"test_no_grad\": [\n         \"self\"\n      ],\n      \"test_non_leaf_parameters\": [\n         \"self\"\n      ],\n      \"test_noncontig_conv_grad_cuda\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"test_normalize\": [\n         \"self\"\n      ],\n      \"test_overwrite_module_params_on_conversion\": [\n         \"self\"\n      ],\n      \"test_pack_padded_sequence\": [\n         \"self\"\n      ],\n      \"test_pack_sequence\": [\n         \"self\"\n      ],\n      \"test_pack_sequence_batch_sizes_throw\": [\n         \"self\"\n      ],\n      \"test_pad\": [\n         \"self\"\n      ],\n      \"test_pad_scalar_error\": [\n         \"self\"\n      ],\n      \"test_pad_sequence\": [\n         \"self\"\n      ],\n      \"test_pairwise_distance\": [\n         \"self\"\n      ],\n      \"test_parameter_assignment\": [\n         \"self\"\n      ],\n      \"test_parameters_and_named_parameters\": [\n         \"self\"\n      ],\n      \"test_parameters_to_vector\": [\n         \"self\"\n      ],\n      \"test_partial_flat_weights\": [\n         \"self\"\n      ],\n      \"test_pdist\": [\n         \"self\"\n      ],\n      \"test_pdist_cpu_gradgrad_unimplemented\": [\n         \"self\"\n      ],\n      \"test_pdist_cuda_gradgrad_unimplemented\": [\n         \"self\"\n      ],\n      \"test_pdist_empty_col\": [\n         \"self\"\n      ],\n      \"test_pdist_empty_row\": [\n         \"self\"\n      ],\n      \"test_pdist_zeros\": [\n         \"self\"\n      ],\n      \"test_pixel_shuffle\": [\n         \"self\"\n      ],\n      \"test_pointwise_loss_broadcast\": [\n         \"self\"\n      ],\n      \"test_pointwise_loss_target_grad_none_reduction\": [\n         \"self\"\n      ],\n      \"test_poisson_nll_loss_reduction_modes\": [\n         \"self\"\n      ],\n      \"test_prune\": [\n         \"self\"\n      ],\n      \"test_pruning_container\": [\n         \"self\"\n      ],\n      \"test_pruning_container_compute_mask\": [\n         \"self\"\n      ],\n      \"test_pruning_id_consistency\": [\n         \"self\"\n      ],\n      \"test_pruning_rollback\": [\n         \"self\"\n      ],\n      \"test_pruning_serialization_model\": [\n         \"self\"\n      ],\n      \"test_pruning_serialization_state_dict\": [\n         \"self\"\n      ],\n      \"test_random_pruning\": [\n         \"self\"\n      ],\n      \"test_random_pruning_0perc\": [\n         \"self\"\n      ],\n      \"test_random_pruning_forward\": [\n         \"self\"\n      ],\n      \"test_random_pruning_new_weight\": [\n         \"self\"\n      ],\n      \"test_random_pruning_orig\": [\n         \"self\"\n      ],\n      \"test_random_pruning_pickle\": [\n         \"self\"\n      ],\n      \"test_random_pruning_sizes\": [\n         \"self\"\n      ],\n      \"test_random_structured_pruning_amount\": [\n         \"self\"\n      ],\n      \"test_register_buffer_allows_overwriting_with_same_name\": [\n         \"self\"\n      ],\n      \"test_register_buffer_raises_error_if_attr_exists\": [\n         \"self\"\n      ],\n      \"test_register_buffer_raises_error_if_name_is_not_string\": [\n         \"self\"\n      ],\n      \"test_register_buffer_raises_error_if_not_tensor\": [\n         \"self\"\n      ],\n      \"test_register_parameter_allows_overwriting_with_same_name\": [\n         \"self\"\n      ],\n      \"test_register_parameter_raises_error_if_attr_exists\": [\n         \"self\"\n      ],\n      \"test_register_parameter_raises_error_if_name_is_not_string\": [\n         \"self\"\n      ],\n      \"test_relu_inplace_view\": [\n         \"self\"\n      ],\n      \"test_remove_pruning\": [\n         \"self\"\n      ],\n      \"test_remove_pruning_exception\": [\n         \"self\"\n      ],\n      \"test_remove_pruning_forward\": [\n         \"self\"\n      ],\n      \"test_repr\": [\n         \"self\"\n      ],\n      \"test_requires_grad_\": [\n         \"self\"\n      ],\n      \"test_rnn_args_check\": [\n         \"self\"\n      ],\n      \"test_rnn_check_device\": [\n         \"self\"\n      ],\n      \"test_rnn_initial_hidden_state\": [\n         \"self\"\n      ],\n      \"test_rnn_pruning\": [\n         \"self\"\n      ],\n      \"test_rnn_weight_norm\": [\n         \"self\"\n      ],\n      \"test_share_memory\": [\n         \"self\"\n      ],\n      \"test_softmin\": [\n         \"self\"\n      ],\n      \"test_spectral_norm\": [\n         \"self\"\n      ],\n      \"test_spectral_norm_dim\": [\n         \"self\"\n      ],\n      \"test_spectral_norm_forward\": [\n         \"self\"\n      ],\n      \"test_spectral_norm_load_state_dict\": [\n         \"self\"\n      ],\n      \"test_spectral_norm_pickle\": [\n         \"self\"\n      ],\n      \"test_state_dict\": [\n         \"self\"\n      ],\n      \"test_threshold_int\": [\n         \"self\"\n      ],\n      \"test_to\": [\n         \"self\"\n      ],\n      \"test_transformer_args_check\": [\n         \"self\"\n      ],\n      \"test_transformer_layer_args_check\": [\n         \"self\"\n      ],\n      \"test_transformerdecoderlayer\": [\n         \"self\"\n      ],\n      \"test_transformerdecoderlayer_gelu\": [\n         \"self\"\n      ],\n      \"test_transformerencoderlayer\": [\n         \"self\"\n      ],\n      \"test_transformerencoderlayer_gelu\": [\n         \"self\"\n      ],\n      \"test_triplet_margin_loss\": [\n         \"self\"\n      ],\n      \"test_triplet_margin_loss_no_reduce\": [\n         \"self\"\n      ],\n      \"test_triplet_margin_loss_swap\": [\n         \"self\"\n      ],\n      \"test_triplet_margin_loss_swap_no_reduce\": [\n         \"self\"\n      ],\n      \"test_type\": [\n         \"self\"\n      ],\n      \"test_unfold_invalid_arg\": [\n         \"self\"\n      ],\n      \"test_unstructured_pruning_same_magnitude\": [\n         \"self\"\n      ],\n      \"test_upsamplingBicubic2d\": [\n         \"self\"\n      ],\n      \"test_upsamplingBilinear2d\": [\n         \"self\"\n      ],\n      \"test_upsamplingBilinear2d_spatial_invariance\": [\n         \"self\"\n      ],\n      \"test_upsamplingLinear1d\": [\n         \"self\"\n      ],\n      \"test_upsamplingLinear1d_spatial_invariance\": [\n         \"self\"\n      ],\n      \"test_upsamplingNearest1d\": [\n         \"self\"\n      ],\n      \"test_upsamplingNearest2d\": [\n         \"self\"\n      ],\n      \"test_upsamplingNearest3d\": [\n         \"self\"\n      ],\n      \"test_upsamplingTrilinear3d\": [\n         \"self\"\n      ],\n      \"test_upsamplingTrilinear3d_spatial_invariance\": [\n         \"self\"\n      ],\n      \"test_upsampling_not_recompute_scale_factor\": [\n         \"self\"\n      ],\n      \"test_validate_pruning_amount\": [\n         \"self\"\n      ],\n      \"test_validate_pruning_amount_init\": [\n         \"self\"\n      ],\n      \"test_vector_to_parameters\": [\n         \"self\"\n      ],\n      \"test_weight_norm\": [\n         \"self\"\n      ],\n      \"test_weight_norm_pickle\": [\n         \"self\"\n      ],\n      \"test_zero_grad\": [\n         \"self\"\n      ]\n   },\n   \"TestNNDeviceType\": {\n      \"_embedding_bag_reference_impl\": [\n         \"self\",\n         \"input\",\n         \"weight\",\n         \"offsets\",\n         \"mode\",\n         \"per_sample_weights\",\n         \"include_last_offset\"\n      ],\n      \"_nll_loss_helper\": [\n         \"self\",\n         \"input_size\",\n         \"reduction\",\n         \"expected\",\n         \"device\"\n      ],\n      \"_ordered_sequence\": [\n         \"self\",\n         \"tensor_type\"\n      ],\n      \"_padded_sequence\": [\n         \"self\",\n         \"tensor_type\"\n      ],\n      \"_run_conv\": [\n         \"self\",\n         \"layer\",\n         \"device\",\n         \"inp\",\n         \"grad\",\n         \"ref_conv\",\n         \"ref_input\",\n         \"ref_out\",\n         \"input_format\",\n         \"weight_format\",\n         \"grad_format\",\n         \"output_format\"\n      ],\n      \"_test_EmbeddingBag\": [\n         \"self\",\n         \"device\",\n         \"mode\",\n         \"sparse\",\n         \"dtype\",\n         \"test_backward\"\n      ],\n      \"_test_EmbeddingBag_vs_Embedding\": [\n         \"self\",\n         \"N\",\n         \"D\",\n         \"B\",\n         \"L\",\n         \"max_norm\",\n         \"mode\",\n         \"device\",\n         \"dtype\",\n         \"test_per_sample_weights\",\n         \"trainable_per_sample_weights\",\n         \"sparse\",\n         \"test_backward\",\n         \"backward_prec\"\n      ],\n      \"_test_GroupNorm_cuda_half\": [\n         \"self\"\n      ],\n      \"_test_GroupNorm_general\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_InstanceNorm_cuda_half\": [\n         \"self\",\n         \"cls\",\n         \"input\",\n         \"device\"\n      ],\n      \"_test_InstanceNorm_general\": [\n         \"self\",\n         \"cls\",\n         \"input\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_LayerNorm_cuda_half\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_LayerNorm_general\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_batchnorm_eval\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_batchnorm_grad\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_batchnorm_simple_average\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_batchnorm_update_stats\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_bfloat16_ops\": [\n         \"self\",\n         \"op\",\n         \"device\",\n         \"inp_dims\",\n         \"prec\"\n      ],\n      \"_test_conv_cudnn_nhwc_nchw\": [\n         \"self\",\n         \"layer\",\n         \"n\",\n         \"c\",\n         \"h\",\n         \"w\",\n         \"k\",\n         \"filter_size\",\n         \"device\"\n      ],\n      \"_test_dropout\": [\n         \"self\",\n         \"cls\",\n         \"device\",\n         \"input\",\n         \"memory_format\"\n      ],\n      \"_test_gumbel_softmax_grad\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_gumbel_softmax_st_shapes\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"shape\",\n         \"dim\",\n         \"count_expected\"\n      ],\n      \"_test_gumbel_softmax_straight_through\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_maxpool_indices\": [\n         \"self\",\n         \"num_dim\",\n         \"adaptive\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_module_empty_input\": [\n         \"self\",\n         \"module\",\n         \"inp\",\n         \"check_size\"\n      ],\n      \"_test_rnn_retain_variables\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_AdaptiveMaxPool1d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_AdaptiveMaxPool2d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_AdaptiveMaxPool3d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_AvgPool3d_backward_after_cat_dim1_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_BatchNorm_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_CTCLoss_cudnn\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_CTCLoss_empty_target\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_Conv2d_naive_groups\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_Dropout\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_Dropout2d\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_Dropout3d\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_EmbeddingBag_per_sample_weights_and_new_offsets\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_EmbeddingBag_per_sample_weights_and_no_offsets\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_EmbeddingBag_per_sample_weights_and_offsets\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_EmbeddingBag_per_sample_weights_failures\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_GroupNorm_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_GroupNorm_general\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_GroupNorm_raises_error_if_one_value_per_group\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_InstanceNorm1d_general\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_InstanceNorm2d_general\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_InstanceNorm3d_general\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_LayerNorm_general\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_MaxPool1d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_MaxPool2d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_MaxPool3d_indices\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_activations_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_avg_pool2d_nhwc\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_batchnorm_eval\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_batchnorm_eval_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_batchnorm_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_batchnorm_simple_average\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_batchnorm_update_stats\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_contig_wrong_stride_cudnn\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_convTranspose_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_cudnn_mismatch_memory_format\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_cudnn_nhwc\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_cudnn_nhwc_support\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_conv_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_large_nosplit\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_noncontig_weights\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_noncontig_weights_and_bias\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_transposed_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_convert_conv2d_weight_memory_format\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_device_mask\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_embedding_backward\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_embedding_bag_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_embedding_bag_device\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_embedding_bag_empty_input\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_embedding_dense_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_embedding_max_norm_device\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_embedding_padding_idx\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_empty_dropout\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_fold\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_grid_sample_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_group_convTranspose_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_group_conv_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_gumbel_softmax\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_hardsigmoid_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_hardswish_grad\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_instancenorm_raises_error_if_less_than_one_value_per_channel\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_linear_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logsigmoid_out\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_max_pool2d_nhwc\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_max_pool_nan\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_maxpool3d_non_square_backward\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multi_margin_loss_errors\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multihead_attention_dtype\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_nll_loss_empty_tensor_reduction_mean\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nll_loss_empty_tensor_reduction_none\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nll_loss_empty_tensor_reduction_sum\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nll_loss_mismatched_batch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nll_loss_out_of_bounds_ignore_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nll_loss_total_weight_is_zero\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nn_scalars\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nn_scalars_reductions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nonlinearity_propagate_nan\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_one_hot\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_overwrite_module_params_on_conversion_cpu_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pool3d_size_one_feature_dim\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pool_invalid_size\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_pool_large_size\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_pooling_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_prelu_backward_32bit_indexing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_rnn_retain_variables\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_softmax\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_softmax_backward\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_softmax_bfloat16\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_softshrink_negative\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unfold\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_upsamplingNearest1d_launch_config\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_upsamplingNearest2d_launch_config\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_upsamplingNearest2d_launch_fail\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_upsamplingNearest2d_launch_rocm\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_upsamplingNearest3d_launch_config\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_variable_sequence\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ]\n   },\n   \"TestNNInit\": {\n      \"_create_random_nd_tensor\": [\n         \"self\",\n         \"dims\",\n         \"size_min\",\n         \"size_max\"\n      ],\n      \"_is_normal\": [\n         \"self\",\n         \"tensor\",\n         \"mean\",\n         \"std\"\n      ],\n      \"_is_trunc_normal\": [\n         \"self\",\n         \"tensor\",\n         \"mean\",\n         \"std\",\n         \"a\",\n         \"b\"\n      ],\n      \"_is_uniform\": [\n         \"self\",\n         \"tensor\",\n         \"a\",\n         \"b\"\n      ],\n      \"_random_float\": [\n         \"self\",\n         \"a\",\n         \"b\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_calculate_gain_leaky_relu\": [\n         \"self\"\n      ],\n      \"test_calculate_gain_leaky_relu_only_accepts_numbers\": [\n         \"self\"\n      ],\n      \"test_calculate_gain_linear\": [\n         \"self\"\n      ],\n      \"test_calculate_gain_nonlinear\": [\n         \"self\"\n      ],\n      \"test_calculate_gain_only_accepts_valid_nonlinearities\": [\n         \"self\"\n      ],\n      \"test_constant\": [\n         \"self\"\n      ],\n      \"test_deprecation\": [\n         \"self\"\n      ],\n      \"test_dirac_identity\": [\n         \"self\"\n      ],\n      \"test_dirac_only_works_on_3_4_5d_inputs\": [\n         \"self\"\n      ],\n      \"test_dirac_properties\": [\n         \"self\"\n      ],\n      \"test_eye\": [\n         \"self\"\n      ],\n      \"test_eye_only_works_on_2d_inputs\": [\n         \"self\"\n      ],\n      \"test_kaiming_normal\": [\n         \"self\"\n      ],\n      \"test_kaiming_normal_errors_on_inputs_smaller_than_2d\": [\n         \"self\"\n      ],\n      \"test_kaiming_uniform\": [\n         \"self\"\n      ],\n      \"test_kaiming_uniform_errors_on_inputs_smaller_than_2d\": [\n         \"self\"\n      ],\n      \"test_max_unpool\": [\n         \"self\"\n      ],\n      \"test_normal\": [\n         \"self\"\n      ],\n      \"test_ones_and_zeros\": [\n         \"self\"\n      ],\n      \"test_orthogonal\": [\n         \"self\"\n      ],\n      \"test_sparse_default_std\": [\n         \"self\"\n      ],\n      \"test_sparse_only_works_on_2d_inputs\": [\n         \"self\"\n      ],\n      \"test_trunc_normal\": [\n         \"self\"\n      ],\n      \"test_uniform\": [\n         \"self\"\n      ],\n      \"test_xavier_normal\": [\n         \"self\"\n      ],\n      \"test_xavier_normal_errors_on_inputs_smaller_than_2d\": [\n         \"self\"\n      ],\n      \"test_xavier_uniform\": [\n         \"self\"\n      ],\n      \"test_xavier_uniform_errors_on_inputs_smaller_than_2d\": [\n         \"self\"\n      ]\n   },\n   \"TestNamedTensor\": {\n      \"_test_as_strided\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_factory\": [\n         \"self\",\n         \"factory\",\n         \"device\"\n      ],\n      \"_test_name_inference\": [\n         \"self\",\n         \"op\",\n         \"args\",\n         \"expected_names\",\n         \"device\",\n         \"maybe_raises_regex\"\n      ],\n      \"_test_select\": [\n         \"self\",\n         \"device\"\n      ],\n      \"assertTensorDataAndNamesEqual\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"test_aaa_must_run_first_check_experimental_warning\": [\n         \"self\"\n      ],\n      \"test_addcmul_addcdiv\": [\n         \"self\"\n      ],\n      \"test_addmm\": [\n         \"self\"\n      ],\n      \"test_addmv\": [\n         \"self\"\n      ],\n      \"test_align_as\": [\n         \"self\"\n      ],\n      \"test_align_tensors\": [\n         \"self\"\n      ],\n      \"test_align_tensors_two_inputs\": [\n         \"self\"\n      ],\n      \"test_align_to\": [\n         \"self\"\n      ],\n      \"test_align_to_ellipsis\": [\n         \"self\"\n      ],\n      \"test_any_all\": [\n         \"self\"\n      ],\n      \"test_as_strided\": [\n         \"self\"\n      ],\n      \"test_as_strided_cuda\": [\n         \"self\"\n      ],\n      \"test_autograd_ignores_names\": [\n         \"self\"\n      ],\n      \"test_autograd_smoke\": [\n         \"self\"\n      ],\n      \"test_autograd_warns_named_grad\": [\n         \"self\"\n      ],\n      \"test_bernoulli\": [\n         \"self\"\n      ],\n      \"test_big_tensor_repr_has_names\": [\n         \"self\"\n      ],\n      \"test_binary_ops\": [\n         \"self\"\n      ],\n      \"test_bitwise_not\": [\n         \"self\"\n      ],\n      \"test_bmm\": [\n         \"self\"\n      ],\n      \"test_cat\": [\n         \"self\"\n      ],\n      \"test_cdist\": [\n         \"self\"\n      ],\n      \"test_comparison_ops\": [\n         \"self\"\n      ],\n      \"test_copy_transpose\": [\n         \"self\"\n      ],\n      \"test_cummax_cummin\": [\n         \"self\"\n      ],\n      \"test_detach\": [\n         \"self\"\n      ],\n      \"test_diagonal\": [\n         \"self\"\n      ],\n      \"test_dot\": [\n         \"self\"\n      ],\n      \"test_equal\": [\n         \"self\"\n      ],\n      \"test_expand\": [\n         \"self\"\n      ],\n      \"test_factory_coverage\": [\n         \"self\"\n      ],\n      \"test_factory_edge_cases\": [\n         \"self\"\n      ],\n      \"test_flatten\": [\n         \"self\"\n      ],\n      \"test_has_names\": [\n         \"self\"\n      ],\n      \"test_index_fill\": [\n         \"self\"\n      ],\n      \"test_info_smoke\": [\n         \"self\"\n      ],\n      \"test_logical_not\": [\n         \"self\"\n      ],\n      \"test_logical_ops\": [\n         \"self\"\n      ],\n      \"test_masked_fill\": [\n         \"self\"\n      ],\n      \"test_masked_select\": [\n         \"self\"\n      ],\n      \"test_matmul\": [\n         \"self\"\n      ],\n      \"test_max_pooling\": [\n         \"self\"\n      ],\n      \"test_mm\": [\n         \"self\"\n      ],\n      \"test_mv\": [\n         \"self\"\n      ],\n      \"test_no_jit_script_support\": [\n         \"self\"\n      ],\n      \"test_no_jit_tracer_support\": [\n         \"self\"\n      ],\n      \"test_no_multiprocessing_support\": [\n         \"self\"\n      ],\n      \"test_no_pickle_support\": [\n         \"self\"\n      ],\n      \"test_no_save_support\": [\n         \"self\"\n      ],\n      \"test_noncontig_contiguous\": [\n         \"self\"\n      ],\n      \"test_none_names_refcount\": [\n         \"self\"\n      ],\n      \"test_nyi_dimname_overload_msg\": [\n         \"self\"\n      ],\n      \"test_out_fn_semantics\": [\n         \"self\"\n      ],\n      \"test_pow_special\": [\n         \"self\"\n      ],\n      \"test_py3_ellipsis\": [\n         \"self\"\n      ],\n      \"test_reduction_fns\": [\n         \"self\"\n      ],\n      \"test_refine_names\": [\n         \"self\"\n      ],\n      \"test_rename\": [\n         \"self\"\n      ],\n      \"test_rename_\": [\n         \"self\"\n      ],\n      \"test_rename_globber\": [\n         \"self\"\n      ],\n      \"test_rename_rename_map\": [\n         \"self\"\n      ],\n      \"test_repr\": [\n         \"self\"\n      ],\n      \"test_resize\": [\n         \"self\"\n      ],\n      \"test_select\": [\n         \"self\"\n      ],\n      \"test_select_cuda\": [\n         \"self\"\n      ],\n      \"test_set_names_property\": [\n         \"self\"\n      ],\n      \"test_size\": [\n         \"self\"\n      ],\n      \"test_split_fns_propagates_names\": [\n         \"self\"\n      ],\n      \"test_squeeze\": [\n         \"self\"\n      ],\n      \"test_stride\": [\n         \"self\"\n      ],\n      \"test_tensor_from_lists\": [\n         \"self\"\n      ],\n      \"test_tensor_from_named_tensor\": [\n         \"self\"\n      ],\n      \"test_tensor_from_numpy\": [\n         \"self\"\n      ],\n      \"test_tensor_from_tensor\": [\n         \"self\"\n      ],\n      \"test_tensor_grad_is_unnamed\": [\n         \"self\"\n      ],\n      \"test_transpose_variants\": [\n         \"self\"\n      ],\n      \"test_trivial\": [\n         \"self\"\n      ],\n      \"test_unary_propagate_names_fns\": [\n         \"self\"\n      ],\n      \"test_unflatten\": [\n         \"self\"\n      ],\n      \"test_unsupported_op_error_msg\": [\n         \"self\"\n      ],\n      \"test_using_seen_interned_string_doesnt_bump_refcount\": [\n         \"self\"\n      ],\n      \"test_using_unseen_interned_string_bumps_refcount_permanently\": [\n         \"self\"\n      ],\n      \"test_using_unseen_uninterned_string_refcounts\": [\n         \"self\"\n      ]\n   },\n   \"TestNamedTupleAPI\": {\n      \"test_namedtuple_return\": [\n         \"self\"\n      ],\n      \"test_native_functions_yaml\": [\n         \"self\"\n      ]\n   },\n   \"TestNamedTupleDataLoader\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_dataloader_with_namedtuple\": [\n         \"self\"\n      ]\n   },\n   \"TestNegateGradient\": {\n      \"test_forward\": [\n         \"self\",\n         \"X\",\n         \"inplace\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_grad\": [\n         \"self\",\n         \"size\"\n      ]\n   },\n   \"TestNetBuilder\": {\n      \"_actual_loop\": [\n         \"self\"\n      ],\n      \"_expected_loop\": [\n         \"self\"\n      ],\n      \"test_if_net\": [\n         \"self\"\n      ],\n      \"test_loops\": [\n         \"self\"\n      ],\n      \"test_multi_instance\": [\n         \"self\"\n      ],\n      \"test_multi_instance_python_op\": [\n         \"self\"\n      ],\n      \"test_net_multi_use\": [\n         \"self\"\n      ],\n      \"test_ops\": [\n         \"self\"\n      ],\n      \"test_setup\": [\n         \"self\"\n      ],\n      \"test_while_net\": [\n         \"self\"\n      ]\n   },\n   \"TestNetGradientChecker\": {\n      \"test_net_comparison\": [\n         \"self\"\n      ],\n      \"test_net_gradient_checker\": [\n         \"self\"\n      ]\n   },\n   \"TestNetPrinter\": {\n      \"test_multiple_definition\": [\n         \"self\"\n      ],\n      \"test_print\": [\n         \"self\"\n      ],\n      \"test_undefined_blob\": [\n         \"self\"\n      ],\n      \"test_valid_job\": [\n         \"self\"\n      ]\n   },\n   \"TestNomnigraphTransformations\": {\n      \"test_simple_replace\": [\n         \"self\"\n      ],\n      \"test_simple_rewire\": [\n         \"self\"\n      ],\n      \"test_transpose_network\": [\n         \"self\",\n         \"batch_size\",\n         \"channels\",\n         \"height\",\n         \"width\",\n         \"seed\",\n         \"kernel\"\n      ]\n   },\n   \"TestNormalizeOp\": {\n      \"test_normalize\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_normalize_L1\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestNormalizerContext\": {\n      \"test_normalizer_context\": [\n         \"self\"\n      ]\n   },\n   \"TestNumbaIntegration\": {\n      \"test_active_device\": [\n         \"self\"\n      ],\n      \"test_array_adaptor\": [\n         \"self\"\n      ],\n      \"test_conversion_errors\": [\n         \"self\"\n      ],\n      \"test_cuda_array_interface\": [\n         \"self\"\n      ],\n      \"test_from_cuda_array_interface\": [\n         \"self\"\n      ],\n      \"test_from_cuda_array_interface_active_device\": [\n         \"self\"\n      ],\n      \"test_from_cuda_array_interface_inferred_strides\": [\n         \"self\"\n      ],\n      \"test_from_cuda_array_interface_lifetime\": [\n         \"self\"\n      ]\n   },\n   \"TestNumericalEquivalence\": {\n      \"testBlobs\": [\n         \"self\"\n      ]\n   },\n   \"TestNumericalStability\": {\n      \"_test_pdf_score\": [\n         \"self\",\n         \"dist_class\",\n         \"x\",\n         \"expected_value\",\n         \"probs\",\n         \"logits\",\n         \"expected_gradient\",\n         \"atol\"\n      ],\n      \"test_bernoulli_gradient\": [\n         \"self\"\n      ],\n      \"test_bernoulli_with_logits_overflow\": [\n         \"self\"\n      ],\n      \"test_bernoulli_with_logits_underflow\": [\n         \"self\"\n      ],\n      \"test_categorical_log_prob\": [\n         \"self\"\n      ],\n      \"test_categorical_log_prob_with_logits\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_gradient\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_with_logits_overflow\": [\n         \"self\"\n      ],\n      \"test_continuous_bernoulli_with_logits_underflow\": [\n         \"self\"\n      ],\n      \"test_multinomial_log_prob\": [\n         \"self\"\n      ],\n      \"test_multinomial_log_prob_with_logits\": [\n         \"self\"\n      ]\n   },\n   \"TestNumpyTile\": {\n      \"test_numpy_tile\": [\n         \"self\",\n         \"ndim\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_numpy_tile_zero_dim\": [\n         \"self\",\n         \"ndim\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestONNXOpset\": {\n      \"test_cast_constant\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_flip\": [\n         \"self\"\n      ],\n      \"test_full\": [\n         \"self\"\n      ],\n      \"test_interpolate\": [\n         \"self\"\n      ],\n      \"test_maxpool\": [\n         \"self\"\n      ],\n      \"test_opset_fallback\": [\n         \"self\"\n      ],\n      \"test_slice\": [\n         \"self\"\n      ],\n      \"test_std\": [\n         \"self\"\n      ],\n      \"test_std_along_dims\": [\n         \"self\"\n      ],\n      \"test_topk\": [\n         \"self\"\n      ],\n      \"test_upsample\": [\n         \"self\"\n      ]\n   },\n   \"TestONNXRuntime\": {\n      \"_crossentropyloss\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"_dispatch_rnn_test\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_elman_rnn_test\": [\n         \"self\",\n         \"layers\",\n         \"nonlinearity\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_gru_test\": [\n         \"self\",\n         \"layers\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_interpolate\": [\n         \"self\",\n         \"x\",\n         \"mode\",\n         \"use_size\",\n         \"is_upsample\",\n         \"align_corners\"\n      ],\n      \"_interpolate_script\": [\n         \"self\",\n         \"x\",\n         \"mode\",\n         \"use_size\",\n         \"is_upsample\",\n         \"align_corners\"\n      ],\n      \"_interpolate_tests\": [\n         \"self\",\n         \"is_upsample\"\n      ],\n      \"_lstm_test\": [\n         \"self\",\n         \"layers\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"packed_sequence\",\n         \"dropout\"\n      ],\n      \"_test_index_generic\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"get_image_from_url\": [\n         \"self\",\n         \"url\"\n      ],\n      \"get_test_images\": [\n         \"self\"\n      ],\n      \"run_model_test_with_external_data\": [\n         \"self\",\n         \"model\",\n         \"input\",\n         \"rtol\",\n         \"atol\",\n         \"example_outputs\",\n         \"do_constant_folding\",\n         \"dynamic_axes\",\n         \"input_names\",\n         \"output_names\",\n         \"ort_optim_on\"\n      ],\n      \"run_test\": [\n         \"self\",\n         \"model\",\n         \"input\",\n         \"rtol\",\n         \"atol\",\n         \"do_constant_folding\",\n         \"batch_size\",\n         \"use_gpu\",\n         \"dynamic_axes\",\n         \"test_with_inputs\",\n         \"input_names\",\n         \"output_names\",\n         \"fixed_batch_size\"\n      ],\n      \"run_word_language_model\": [\n         \"self\",\n         \"model_name\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test__dim_arange\": [\n         \"self\"\n      ],\n      \"test_add_inplace\": [\n         \"self\"\n      ],\n      \"test_alexnet\": [\n         \"self\"\n      ],\n      \"test_arange\": [\n         \"self\"\n      ],\n      \"test_arange_dynamic\": [\n         \"self\"\n      ],\n      \"test_arange_end\": [\n         \"self\"\n      ],\n      \"test_arange_end_notype\": [\n         \"self\"\n      ],\n      \"test_arange_no_type\": [\n         \"self\"\n      ],\n      \"test_arange_start_end\": [\n         \"self\"\n      ],\n      \"test_arange_start_end_notype\": [\n         \"self\"\n      ],\n      \"test_arange_start_end_step\": [\n         \"self\"\n      ],\n      \"test_arange_start_end_step_notype\": [\n         \"self\"\n      ],\n      \"test_arithmetic\": [\n         \"self\"\n      ],\n      \"test_avgpool\": [\n         \"self\"\n      ],\n      \"test_avgpool_1d_ceil\": [\n         \"self\"\n      ],\n      \"test_avgpool_2d_ceil\": [\n         \"self\"\n      ],\n      \"test_avgpool_3d_ceil\": [\n         \"self\"\n      ],\n      \"test_avgpool_default_stride\": [\n         \"self\"\n      ],\n      \"test_baddbmm\": [\n         \"self\"\n      ],\n      \"test_baddbmm_dynamic\": [\n         \"self\"\n      ],\n      \"test_batchnorm1d\": [\n         \"self\"\n      ],\n      \"test_batchnorm1d_noaffine\": [\n         \"self\"\n      ],\n      \"test_batchnorm2d\": [\n         \"self\"\n      ],\n      \"test_batchnorm2d_noaffine\": [\n         \"self\"\n      ],\n      \"test_batchnorm3d\": [\n         \"self\"\n      ],\n      \"test_batchnorm3d_noaffine\": [\n         \"self\"\n      ],\n      \"test_bitshift\": [\n         \"self\"\n      ],\n      \"test_bitshift_other_fp\": [\n         \"self\"\n      ],\n      \"test_bitshift_uint8\": [\n         \"self\"\n      ],\n      \"test_cast_to\": [\n         \"self\"\n      ],\n      \"test_clamp\": [\n         \"self\"\n      ],\n      \"test_clamp_dyn\": [\n         \"self\"\n      ],\n      \"test_concat\": [\n         \"self\"\n      ],\n      \"test_concat_dynamic\": [\n         \"self\"\n      ],\n      \"test_constant_pad\": [\n         \"self\"\n      ],\n      \"test_conv\": [\n         \"self\"\n      ],\n      \"test_conv_transpose\": [\n         \"self\"\n      ],\n      \"test_copy_\": [\n         \"self\"\n      ],\n      \"test_copy_ellipsis\": [\n         \"self\"\n      ],\n      \"test_crossentropyloss\": [\n         \"self\"\n      ],\n      \"test_cste_script\": [\n         \"self\"\n      ],\n      \"test_cumsum\": [\n         \"self\"\n      ],\n      \"test_deeplab\": [\n         \"self\"\n      ],\n      \"test_densenets\": [\n         \"self\"\n      ],\n      \"test_det\": [\n         \"self\"\n      ],\n      \"test_dict\": [\n         \"self\"\n      ],\n      \"test_dict_str\": [\n         \"self\"\n      ],\n      \"test_dim\": [\n         \"self\"\n      ],\n      \"test_einsum\": [\n         \"self\"\n      ],\n      \"test_embedding_model_with_external_data\": [\n         \"self\"\n      ],\n      \"test_empty_branch\": [\n         \"self\"\n      ],\n      \"test_expand\": [\n         \"self\"\n      ],\n      \"test_faster_rcnn\": [\n         \"self\"\n      ],\n      \"test_fcn\": [\n         \"self\"\n      ],\n      \"test_flatten\": [\n         \"self\"\n      ],\n      \"test_flatten2d\": [\n         \"self\"\n      ],\n      \"test_flatten2d_neg\": [\n         \"self\"\n      ],\n      \"test_flip\": [\n         \"self\"\n      ],\n      \"test_floor_div\": [\n         \"self\"\n      ],\n      \"test_floor_div_script\": [\n         \"self\"\n      ],\n      \"test_fmod\": [\n         \"self\"\n      ],\n      \"test_fmod_scalar\": [\n         \"self\"\n      ],\n      \"test_frobenius_norm\": [\n         \"self\"\n      ],\n      \"test_frobenius_norm_keepdim\": [\n         \"self\"\n      ],\n      \"test_full_script\": [\n         \"self\"\n      ],\n      \"test_full_trace\": [\n         \"self\"\n      ],\n      \"test_fuse_addmm\": [\n         \"self\"\n      ],\n      \"test_gather\": [\n         \"self\"\n      ],\n      \"test_gelu\": [\n         \"self\"\n      ],\n      \"test_getitem\": [\n         \"self\"\n      ],\n      \"test_googlenet\": [\n         \"self\"\n      ],\n      \"test_groupnorm\": [\n         \"self\"\n      ],\n      \"test_groupnorm_noaffine\": [\n         \"self\"\n      ],\n      \"test_gru_constant_folding\": [\n         \"self\"\n      ],\n      \"test_gt\": [\n         \"self\"\n      ],\n      \"test_gt_scalar\": [\n         \"self\"\n      ],\n      \"test_hardtanh\": [\n         \"self\"\n      ],\n      \"test_hardtanh_script_with_default_values\": [\n         \"self\"\n      ],\n      \"test_im2col\": [\n         \"self\"\n      ],\n      \"test_inception\": [\n         \"self\"\n      ],\n      \"test_index_1d\": [\n         \"self\"\n      ],\n      \"test_index_2d_1dimslice\": [\n         \"self\"\n      ],\n      \"test_index_2d_neg_slice\": [\n         \"self\"\n      ],\n      \"test_index_2d_sliceint\": [\n         \"self\"\n      ],\n      \"test_index_copy\": [\n         \"self\"\n      ],\n      \"test_index_fill\": [\n         \"self\"\n      ],\n      \"test_index_mask\": [\n         \"self\"\n      ],\n      \"test_index_put\": [\n         \"self\"\n      ],\n      \"test_index_put_accumulate\": [\n         \"self\"\n      ],\n      \"test_index_put_ellipsis\": [\n         \"self\"\n      ],\n      \"test_index_put_slice_index\": [\n         \"self\"\n      ],\n      \"test_index_select_constant_scaler_index\": [\n         \"self\"\n      ],\n      \"test_index_select_scaler_index\": [\n         \"self\"\n      ],\n      \"test_inplace_arithmetic\": [\n         \"self\"\n      ],\n      \"test_inplace_fill\": [\n         \"self\"\n      ],\n      \"test_inplace_zero\": [\n         \"self\"\n      ],\n      \"test_interpolate_downsample\": [\n         \"self\"\n      ],\n      \"test_interpolate_function_substitution\": [\n         \"self\"\n      ],\n      \"test_interpolate_no_shape\": [\n         \"self\"\n      ],\n      \"test_interpolate_upsample\": [\n         \"self\"\n      ],\n      \"test_keypoint_rcnn\": [\n         \"self\"\n      ],\n      \"test_l1_norm\": [\n         \"self\"\n      ],\n      \"test_l2_norm\": [\n         \"self\"\n      ],\n      \"test_layer_norm\": [\n         \"self\"\n      ],\n      \"test_len\": [\n         \"self\"\n      ],\n      \"test_list\": [\n         \"self\"\n      ],\n      \"test_log\": [\n         \"self\"\n      ],\n      \"test_log1p\": [\n         \"self\"\n      ],\n      \"test_logdet\": [\n         \"self\"\n      ],\n      \"test_logsoftmax\": [\n         \"self\"\n      ],\n      \"test_logsoftmax_dim\": [\n         \"self\"\n      ],\n      \"test_loop_dynamic\": [\n         \"self\"\n      ],\n      \"test_loop_nested\": [\n         \"self\"\n      ],\n      \"test_loop_with_list\": [\n         \"self\"\n      ],\n      \"test_lstm\": [\n         \"self\"\n      ],\n      \"test_lstm_constant_folding\": [\n         \"self\"\n      ],\n      \"test_lstm_default_init_state\": [\n         \"self\"\n      ],\n      \"test_lstm_fixed_batch_size\": [\n         \"self\"\n      ],\n      \"test_lstm_post_fix_init_state\": [\n         \"self\"\n      ],\n      \"test_lt\": [\n         \"self\"\n      ],\n      \"test_mask_rcnn\": [\n         \"self\"\n      ],\n      \"test_masked_fill\": [\n         \"self\"\n      ],\n      \"test_masked_scatter\": [\n         \"self\"\n      ],\n      \"test_masked_select\": [\n         \"self\"\n      ],\n      \"test_matmul\": [\n         \"self\"\n      ],\n      \"test_matmul_batch\": [\n         \"self\"\n      ],\n      \"test_max_tensors\": [\n         \"self\"\n      ],\n      \"test_maxpool\": [\n         \"self\"\n      ],\n      \"test_maxpool_1d_ceil\": [\n         \"self\"\n      ],\n      \"test_maxpool_2d\": [\n         \"self\"\n      ],\n      \"test_maxpool_2d_ceil\": [\n         \"self\"\n      ],\n      \"test_maxpool_3d_ceil\": [\n         \"self\"\n      ],\n      \"test_maxpool_adaptive\": [\n         \"self\"\n      ],\n      \"test_maxpool_default_stride\": [\n         \"self\"\n      ],\n      \"test_maxpool_dilation\": [\n         \"self\"\n      ],\n      \"test_maxpool_with_indices\": [\n         \"self\"\n      ],\n      \"test_mc3_18_video\": [\n         \"self\"\n      ],\n      \"test_meshgrid\": [\n         \"self\"\n      ],\n      \"test_meshgrid_scalar\": [\n         \"self\"\n      ],\n      \"test_mnasnet\": [\n         \"self\"\n      ],\n      \"test_mobilenet\": [\n         \"self\"\n      ],\n      \"test_mobilenet_v2_with_external_data\": [\n         \"self\"\n      ],\n      \"test_multinomial\": [\n         \"self\"\n      ],\n      \"test_narrow\": [\n         \"self\"\n      ],\n      \"test_new_zero\": [\n         \"self\"\n      ],\n      \"test_nllloss\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_mean\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_mean_ignore_index\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_mean_ignore_index_weights\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_mean_weights\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_none\": [\n         \"self\"\n      ],\n      \"test_nllloss_2d_sum\": [\n         \"self\"\n      ],\n      \"test_normalize\": [\n         \"self\"\n      ],\n      \"test_numel\": [\n         \"self\"\n      ],\n      \"test_numel_empty\": [\n         \"self\"\n      ],\n      \"test_one_hot\": [\n         \"self\"\n      ],\n      \"test_onnx_proto_checker\": [\n         \"self\"\n      ],\n      \"test_pad_types\": [\n         \"self\"\n      ],\n      \"test_pixel_shuffle\": [\n         \"self\"\n      ],\n      \"test_r2plus1d_18_video\": [\n         \"self\"\n      ],\n      \"test_r3d_18_video\": [\n         \"self\"\n      ],\n      \"test_random\": [\n         \"self\"\n      ],\n      \"test_random_dynamic_size\": [\n         \"self\"\n      ],\n      \"test_random_like\": [\n         \"self\"\n      ],\n      \"test_random_like_dtype\": [\n         \"self\"\n      ],\n      \"test_reduce_log_sum_exp\": [\n         \"self\"\n      ],\n      \"test_reflection_pad\": [\n         \"self\"\n      ],\n      \"test_remainder\": [\n         \"self\"\n      ],\n      \"test_remainder_scalar\": [\n         \"self\"\n      ],\n      \"test_replication_pad\": [\n         \"self\"\n      ],\n      \"test_reshape_constant_fold\": [\n         \"self\"\n      ],\n      \"test_resnet\": [\n         \"self\"\n      ],\n      \"test_round\": [\n         \"self\"\n      ],\n      \"test_rsqrt\": [\n         \"self\"\n      ],\n      \"test_rsqrt_zeros\": [\n         \"self\"\n      ],\n      \"test_scalar_tensor\": [\n         \"self\"\n      ],\n      \"test_scalar_type\": [\n         \"self\"\n      ],\n      \"test_scatter\": [\n         \"self\"\n      ],\n      \"test_scatter_add\": [\n         \"self\"\n      ],\n      \"test_shape_constant_fold\": [\n         \"self\"\n      ],\n      \"test_shufflenet\": [\n         \"self\"\n      ],\n      \"test_size\": [\n         \"self\"\n      ],\n      \"test_slice_dynamic\": [\n         \"self\"\n      ],\n      \"test_slice_dynamic_script\": [\n         \"self\"\n      ],\n      \"test_slice_dynamic_to_end\": [\n         \"self\"\n      ],\n      \"test_slice_neg\": [\n         \"self\"\n      ],\n      \"test_slice_neg_large\": [\n         \"self\"\n      ],\n      \"test_slice_neg_large_negone\": [\n         \"self\"\n      ],\n      \"test_slice_trace\": [\n         \"self\"\n      ],\n      \"test_softmax\": [\n         \"self\"\n      ],\n      \"test_softmax_large_values\": [\n         \"self\"\n      ],\n      \"test_sort\": [\n         \"self\"\n      ],\n      \"test_sort_ascending\": [\n         \"self\"\n      ],\n      \"test_split\": [\n         \"self\"\n      ],\n      \"test_split_dynamic\": [\n         \"self\"\n      ],\n      \"test_split_size_as_list\": [\n         \"self\"\n      ],\n      \"test_split_tensor_multi\": [\n         \"self\"\n      ],\n      \"test_split_tensor_scalar\": [\n         \"self\"\n      ],\n      \"test_squeeze\": [\n         \"self\"\n      ],\n      \"test_squeezenet\": [\n         \"self\"\n      ],\n      \"test_stack\": [\n         \"self\"\n      ],\n      \"test_stack_dynamic\": [\n         \"self\"\n      ],\n      \"test_std\": [\n         \"self\"\n      ],\n      \"test_std_along_dims\": [\n         \"self\"\n      ],\n      \"test_std_keepdim\": [\n         \"self\"\n      ],\n      \"test_take\": [\n         \"self\"\n      ],\n      \"test_tensor_factories\": [\n         \"self\"\n      ],\n      \"test_tensor_factories_script\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing\": [\n         \"self\"\n      ],\n      \"test_tensor_index_advanced_indexing_consecutive\": [\n         \"self\"\n      ],\n      \"test_tensor_like_factories_script\": [\n         \"self\"\n      ],\n      \"test_topk\": [\n         \"self\"\n      ],\n      \"test_topk_script\": [\n         \"self\"\n      ],\n      \"test_topk_smallest_unsorted\": [\n         \"self\"\n      ],\n      \"test_torch_mm\": [\n         \"self\"\n      ],\n      \"test_trace_script\": [\n         \"self\"\n      ],\n      \"test_true_div\": [\n         \"self\"\n      ],\n      \"test_true_div_trace\": [\n         \"self\"\n      ],\n      \"test_unbind\": [\n         \"self\"\n      ],\n      \"test_unbind_dynamic\": [\n         \"self\"\n      ],\n      \"test_unfold\": [\n         \"self\"\n      ],\n      \"test_unique\": [\n         \"self\"\n      ],\n      \"test_unique_along_dim\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_vgg\": [\n         \"self\"\n      ],\n      \"test_view\": [\n         \"self\"\n      ],\n      \"test_weight_norm\": [\n         \"self\"\n      ],\n      \"test_weight_norm_nodim\": [\n         \"self\"\n      ],\n      \"test_word_language_model_GRU\": [\n         \"self\"\n      ],\n      \"test_word_language_model_LSTM\": [\n         \"self\"\n      ],\n      \"test_word_language_model_RNN_RELU\": [\n         \"self\"\n      ],\n      \"test_word_language_model_RNN_TANH\": [\n         \"self\"\n      ]\n   },\n   \"TestONNXUtils\": {\n      \"test_check_onnx_broadcast\": [\n         \"self\"\n      ],\n      \"test_prepare_onnx_paddings\": [\n         \"self\"\n      ]\n   },\n   \"TestONNXWhile\": {\n      \"test_onnx_while_fibb\": [\n         \"self\",\n         \"condition\",\n         \"max_trip_count\",\n         \"save_scopes\",\n         \"disable_scopes\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestObserver\": {\n      \"test_no_qconfig_propagation\": [\n         \"self\"\n      ],\n      \"test_observer_scriptable\": [\n         \"self\"\n      ],\n      \"test_per_channel_observers\": [\n         \"self\",\n         \"qdtype\",\n         \"qscheme\",\n         \"ch_axis\",\n         \"reduce_range\"\n      ],\n      \"test_per_tensor_dynamic_quant_observers\": [\n         \"self\",\n         \"X\",\n         \"reduce_range\"\n      ],\n      \"test_per_tensor_observers\": [\n         \"self\",\n         \"qdtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"test_tensor_list_observer\": [\n         \"self\"\n      ]\n   },\n   \"TestObservers\": {\n      \"enable_rnn_executor\": [\n         \"self\",\n         \"net\",\n         \"value\",\n         \"forward_only\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testObserver\": [\n         \"self\"\n      ],\n      \"test_observer_rnn_executor\": [\n         \"self\",\n         \"num_layers\",\n         \"forward_only\"\n      ]\n   },\n   \"TestOldSerialization\": {\n      \"_test_serialization_container\": [\n         \"self\",\n         \"unique_key\",\n         \"filecontext_lambda\"\n      ],\n      \"run\": [\n         \"self\"\n      ],\n      \"test_serialization_container\": [\n         \"self\"\n      ],\n      \"test_serialization_container_filelike\": [\n         \"self\"\n      ],\n      \"test_serialization_offset\": [\n         \"self\"\n      ],\n      \"test_serialization_offset_filelike\": [\n         \"self\"\n      ]\n   },\n   \"TestOneHotOps\": {\n      \"test_batch_bucket_one_hot_shape_inference\": [\n         \"self\",\n         \"x\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_bucketized_one_hot\": [\n         \"self\",\n         \"x\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_batch_one_hot\": [\n         \"self\",\n         \"x\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_one_hot\": [\n         \"self\",\n         \"hot_indices\",\n         \"end_padding\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_segment_one_hot\": [\n         \"self\",\n         \"hot_indices\"\n      ]\n   },\n   \"TestOpRegistryKey\": {\n      \"test_is_operator\": [\n         \"self\"\n      ],\n      \"test_is_operator_with_engine\": [\n         \"self\"\n      ]\n   },\n   \"TestOperator\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"TestOperatorTraceback\": {\n      \"op_name_check\": [\n         \"self\",\n         \"net\",\n         \"cf\",\n         \"line\",\n         \"func\"\n      ],\n      \"test_async_exception_handling\": [\n         \"self\"\n      ],\n      \"test_c_workspace_constructor\": [\n         \"self\"\n      ],\n      \"test_c_workspace_runtime\": [\n         \"self\"\n      ],\n      \"test_operator_constructor_traceback\": [\n         \"self\"\n      ],\n      \"test_operator_runtime_traceback\": [\n         \"self\"\n      ]\n   },\n   \"TestOperators\": {\n      \"assertONNX\": [\n         \"self\",\n         \"f\",\n         \"args\",\n         \"params\"\n      ],\n      \"assertONNXRaises\": [\n         \"self\",\n         \"err\",\n         \"f\",\n         \"args\",\n         \"params\"\n      ],\n      \"assertONNXRaisesRegex\": [\n         \"self\",\n         \"err\",\n         \"reg\",\n         \"f\",\n         \"args\",\n         \"params\"\n      ],\n      \"test_acos\": [\n         \"self\"\n      ],\n      \"test_add_broadcast\": [\n         \"self\"\n      ],\n      \"test_add_left_broadcast\": [\n         \"self\"\n      ],\n      \"test_add_size1_broadcast\": [\n         \"self\"\n      ],\n      \"test_add_size1_right_broadcast\": [\n         \"self\"\n      ],\n      \"test_add_size1_singleton_broadcast\": [\n         \"self\"\n      ],\n      \"test_addconstant\": [\n         \"self\"\n      ],\n      \"test_addmm\": [\n         \"self\"\n      ],\n      \"test_arange_dynamic\": [\n         \"self\"\n      ],\n      \"test_argmax\": [\n         \"self\"\n      ],\n      \"test_asin\": [\n         \"self\"\n      ],\n      \"test_at_op\": [\n         \"self\"\n      ],\n      \"test_atan\": [\n         \"self\"\n      ],\n      \"test_avg_pool2d\": [\n         \"self\"\n      ],\n      \"test_baddbmm\": [\n         \"self\"\n      ],\n      \"test_basic\": [\n         \"self\"\n      ],\n      \"test_batchnorm\": [\n         \"self\"\n      ],\n      \"test_batchnorm_1d\": [\n         \"self\"\n      ],\n      \"test_batchnorm_noaffine\": [\n         \"self\"\n      ],\n      \"test_batchnorm_onnx_irv4\": [\n         \"self\"\n      ],\n      \"test_batchnorm_training\": [\n         \"self\"\n      ],\n      \"test_bitshift\": [\n         \"self\"\n      ],\n      \"test_c2_op\": [\n         \"self\"\n      ],\n      \"test_chunk\": [\n         \"self\"\n      ],\n      \"test_clip\": [\n         \"self\"\n      ],\n      \"test_clip_max\": [\n         \"self\"\n      ],\n      \"test_clip_min\": [\n         \"self\"\n      ],\n      \"test_concat2\": [\n         \"self\"\n      ],\n      \"test_conv\": [\n         \"self\"\n      ],\n      \"test_conv_onnx_irv4\": [\n         \"self\"\n      ],\n      \"test_conv_onnx_irv4_opset8\": [\n         \"self\"\n      ],\n      \"test_conv_variable_length\": [\n         \"self\"\n      ],\n      \"test_convtranspose\": [\n         \"self\"\n      ],\n      \"test_cos\": [\n         \"self\"\n      ],\n      \"test_cumsum\": [\n         \"self\"\n      ],\n      \"test_det\": [\n         \"self\"\n      ],\n      \"test_dict\": [\n         \"self\"\n      ],\n      \"test_dict_str\": [\n         \"self\"\n      ],\n      \"test_dim\": [\n         \"self\"\n      ],\n      \"test_dropout\": [\n         \"self\"\n      ],\n      \"test_dropout_default\": [\n         \"self\"\n      ],\n      \"test_dropout_training\": [\n         \"self\"\n      ],\n      \"test_dropout_training_opset12\": [\n         \"self\"\n      ],\n      \"test_elu\": [\n         \"self\"\n      ],\n      \"test_embedding_bags\": [\n         \"self\"\n      ],\n      \"test_empty_like\": [\n         \"self\"\n      ],\n      \"test_empty_like_opset7\": [\n         \"self\"\n      ],\n      \"test_equal\": [\n         \"self\"\n      ],\n      \"test_erf\": [\n         \"self\"\n      ],\n      \"test_exp\": [\n         \"self\"\n      ],\n      \"test_expand\": [\n         \"self\"\n      ],\n      \"test_flatten\": [\n         \"self\"\n      ],\n      \"test_flatten2D\": [\n         \"self\"\n      ],\n      \"test_fmod\": [\n         \"self\"\n      ],\n      \"test_frobenius_norm\": [\n         \"self\"\n      ],\n      \"test_full\": [\n         \"self\"\n      ],\n      \"test_full_like\": [\n         \"self\"\n      ],\n      \"test_gather\": [\n         \"self\"\n      ],\n      \"test_gather_opset11\": [\n         \"self\"\n      ],\n      \"test_ge\": [\n         \"self\"\n      ],\n      \"test_gelu\": [\n         \"self\"\n      ],\n      \"test_gt\": [\n         \"self\"\n      ],\n      \"test_hardtanh\": [\n         \"self\"\n      ],\n      \"test_implicit_expand\": [\n         \"self\"\n      ],\n      \"test_index\": [\n         \"self\"\n      ],\n      \"test_isnan\": [\n         \"self\"\n      ],\n      \"test_layer_norm_aten\": [\n         \"self\"\n      ],\n      \"test_le\": [\n         \"self\"\n      ],\n      \"test_linear\": [\n         \"self\"\n      ],\n      \"test_log_sigmoid\": [\n         \"self\"\n      ],\n      \"test_logsoftmax\": [\n         \"self\"\n      ],\n      \"test_lt\": [\n         \"self\"\n      ],\n      \"test_master_opset\": [\n         \"self\"\n      ],\n      \"test_max\": [\n         \"self\"\n      ],\n      \"test_maxpool\": [\n         \"self\"\n      ],\n      \"test_maxpool_dilations\": [\n         \"self\"\n      ],\n      \"test_maxpool_indices\": [\n         \"self\"\n      ],\n      \"test_mean\": [\n         \"self\"\n      ],\n      \"test_mean_dtype\": [\n         \"self\"\n      ],\n      \"test_meshgrid\": [\n         \"self\"\n      ],\n      \"test_min\": [\n         \"self\"\n      ],\n      \"test_mm\": [\n         \"self\"\n      ],\n      \"test_narrow\": [\n         \"self\"\n      ],\n      \"test_ne\": [\n         \"self\"\n      ],\n      \"test_nonzero\": [\n         \"self\"\n      ],\n      \"test_norm_p1\": [\n         \"self\"\n      ],\n      \"test_norm_p2\": [\n         \"self\"\n      ],\n      \"test_ones_like\": [\n         \"self\"\n      ],\n      \"test_pad\": [\n         \"self\"\n      ],\n      \"test_params\": [\n         \"self\"\n      ],\n      \"test_params_onnx_irv4\": [\n         \"self\"\n      ],\n      \"test_permute2\": [\n         \"self\"\n      ],\n      \"test_pixel_shuffle\": [\n         \"self\"\n      ],\n      \"test_pow\": [\n         \"self\"\n      ],\n      \"test_prelu\": [\n         \"self\"\n      ],\n      \"test_prod\": [\n         \"self\"\n      ],\n      \"test_prod_dtype\": [\n         \"self\"\n      ],\n      \"test_rand\": [\n         \"self\"\n      ],\n      \"test_randn\": [\n         \"self\"\n      ],\n      \"test_reduce_sum_negative_indices\": [\n         \"self\"\n      ],\n      \"test_reduced_mean\": [\n         \"self\"\n      ],\n      \"test_reduced_mean_dtype\": [\n         \"self\"\n      ],\n      \"test_reduced_mean_keepdim\": [\n         \"self\"\n      ],\n      \"test_reduced_prod\": [\n         \"self\"\n      ],\n      \"test_reduced_prod_dtype\": [\n         \"self\"\n      ],\n      \"test_reduced_prod_keepdim\": [\n         \"self\"\n      ],\n      \"test_reduced_sum\": [\n         \"self\"\n      ],\n      \"test_reduced_sum_dtype\": [\n         \"self\"\n      ],\n      \"test_reduced_sum_keepdim\": [\n         \"self\"\n      ],\n      \"test_reducemax\": [\n         \"self\"\n      ],\n      \"test_reducemin\": [\n         \"self\"\n      ],\n      \"test_remainder\": [\n         \"self\"\n      ],\n      \"test_repeat\": [\n         \"self\"\n      ],\n      \"test_repeat_dim_overflow\": [\n         \"self\"\n      ],\n      \"test_retain_param_name_disabled\": [\n         \"self\"\n      ],\n      \"test_round\": [\n         \"self\"\n      ],\n      \"test_rrelu\": [\n         \"self\"\n      ],\n      \"test_rsqrt\": [\n         \"self\"\n      ],\n      \"test_rsub\": [\n         \"self\"\n      ],\n      \"test_scatter_add\": [\n         \"self\"\n      ],\n      \"test_scatter_add_opset11\": [\n         \"self\"\n      ],\n      \"test_selu\": [\n         \"self\"\n      ],\n      \"test_sign\": [\n         \"self\"\n      ],\n      \"test_sin\": [\n         \"self\"\n      ],\n      \"test_slice\": [\n         \"self\"\n      ],\n      \"test_slice_dynamic\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy_3d\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy_3d_none\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy_4d\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy_ignore_index\": [\n         \"self\"\n      ],\n      \"test_softmaxcrossentropy_weights\": [\n         \"self\"\n      ],\n      \"test_split\": [\n         \"self\"\n      ],\n      \"test_split_with_sizes\": [\n         \"self\"\n      ],\n      \"test_sqrt\": [\n         \"self\"\n      ],\n      \"test_std\": [\n         \"self\"\n      ],\n      \"test_sum\": [\n         \"self\"\n      ],\n      \"test_sum_dtype\": [\n         \"self\"\n      ],\n      \"test_symbolic_mismatch\": [\n         \"self\"\n      ],\n      \"test_tan\": [\n         \"self\"\n      ],\n      \"test_topk\": [\n         \"self\"\n      ],\n      \"test_topk_smallest_unsorted\": [\n         \"self\"\n      ],\n      \"test_transpose\": [\n         \"self\"\n      ],\n      \"test_type_as\": [\n         \"self\"\n      ],\n      \"test_unfold\": [\n         \"self\"\n      ],\n      \"test_unique\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_upsample_nearest_scale\": [\n         \"self\"\n      ],\n      \"test_upsample_nearest_scale_default_scale_factor\": [\n         \"self\"\n      ],\n      \"test_upsample_nearest_size\": [\n         \"self\"\n      ],\n      \"test_view\": [\n         \"self\"\n      ],\n      \"test_view_flatten\": [\n         \"self\"\n      ],\n      \"test_zeros_like\": [\n         \"self\"\n      ]\n   },\n   \"TestOptim\": {\n      \"_build_params_dict\": [\n         \"self\",\n         \"weight\",\n         \"bias\"\n      ],\n      \"_build_params_dict_single\": [\n         \"self\",\n         \"weight\",\n         \"bias\"\n      ],\n      \"_test_basic_cases\": [\n         \"self\",\n         \"constructor\",\n         \"scheduler_constructors\",\n         \"ignore_multidevice\"\n      ],\n      \"_test_basic_cases_template\": [\n         \"self\",\n         \"weight\",\n         \"bias\",\n         \"input\",\n         \"constructor\",\n         \"scheduler_constructors\"\n      ],\n      \"_test_rosenbrock_sparse\": [\n         \"self\",\n         \"constructor\",\n         \"scheduler_constructors\",\n         \"sparse_only\"\n      ],\n      \"_test_state_dict\": [\n         \"self\",\n         \"weight\",\n         \"bias\",\n         \"input\",\n         \"constructor\"\n      ],\n      \"test_adadelta\": [\n         \"self\"\n      ],\n      \"test_adagrad\": [\n         \"self\"\n      ],\n      \"test_adagrad_sparse\": [\n         \"self\"\n      ],\n      \"test_adam\": [\n         \"self\"\n      ],\n      \"test_adamax\": [\n         \"self\"\n      ],\n      \"test_adamw\": [\n         \"self\"\n      ],\n      \"test_asgd\": [\n         \"self\"\n      ],\n      \"test_invalid_param_type\": [\n         \"self\"\n      ],\n      \"test_lbfgs\": [\n         \"self\"\n      ],\n      \"test_lbfgs_return_type\": [\n         \"self\"\n      ],\n      \"test_rmsprop\": [\n         \"self\"\n      ],\n      \"test_rprop\": [\n         \"self\"\n      ],\n      \"test_sgd\": [\n         \"self\"\n      ],\n      \"test_sgd_sparse\": [\n         \"self\"\n      ],\n      \"test_sparse_adam\": [\n         \"self\"\n      ]\n   },\n   \"TestOptimizer\": {\n      \"test_generate_mobile_module_lints\": [\n         \"self\"\n      ],\n      \"test_optimize_for_mobile\": [\n         \"self\"\n      ]\n   },\n   \"TestOptimizerContext\": {\n      \"test_optimizer_context\": [\n         \"self\"\n      ]\n   },\n   \"TestPackRNNSequenceOperator\": {\n      \"test_pack_rnn_seqence\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_unpack_rnn_seqence\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"dim\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestPad\": {\n      \"test_crop\": [\n         \"self\",\n         \"pad_t\",\n         \"pad_l\",\n         \"pad_b\",\n         \"pad_r\",\n         \"mode\",\n         \"size_w\",\n         \"size_h\",\n         \"size_c\",\n         \"size_n\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestPadding\": {\n      \"test_reflection_pad1d\": [\n         \"self\",\n         \"batch_size\",\n         \"channels\",\n         \"width\",\n         \"qtype\"\n      ]\n   },\n   \"TestPairWiseLossOps\": {\n      \"test_pair_wise_loss_batch\": [\n         \"self\",\n         \"n\",\n         \"k\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pair_wise_loss_gradient\": [\n         \"self\",\n         \"X\",\n         \"label\",\n         \"dY\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pair_wise_loss_predictions\": [\n         \"self\",\n         \"X\",\n         \"label\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestPartitionOps\": {\n      \"testLengthsPartition\": [\n         \"self\"\n      ],\n      \"testPartition\": [\n         \"self\"\n      ],\n      \"test_configs\": [\n         \"self\"\n      ]\n   },\n   \"TestPercentileOp\": {\n      \"_test_percentile_op\": [\n         \"self\",\n         \"original_inp\",\n         \"value_to_pct_map\",\n         \"dist_lengths\",\n         \"expected_values\"\n      ],\n      \"_test_shape_inference\": [\n         \"self\",\n         \"original_inp\",\n         \"value_to_pct_map\",\n         \"dist_lengths\",\n         \"expected_values\"\n      ],\n      \"test_percentile_op_with_all_elements_in_map\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_elements_bigger_than_map_range\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_elements_smaller_than_map_range\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_interpolation\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_large_sample_size_per_dist\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_only_one_dist\": [\n         \"self\"\n      ],\n      \"test_percentile_op_with_same_value\": [\n         \"self\"\n      ]\n   },\n   \"TestPiecewiseLinearTransform\": {\n      \"constrain\": [\n         \"self\",\n         \"v\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"test_1D_predictions_params_from_input\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_binary_predictions_params_from_arg\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_binary_predictions_params_from_input\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_multi_predictions_params_from_arg\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_multi_predictions_params_from_input\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"transform\": [\n         \"self\",\n         \"x\",\n         \"bounds\",\n         \"slopes\",\n         \"intercepts\"\n      ]\n   },\n   \"TestPipeline\": {\n      \"test_dequeue_many\": [\n         \"self\"\n      ]\n   },\n   \"TestPooling\": {\n      \"test_avg_pool_count_include_pad\": [\n         \"self\",\n         \"op_type\",\n         \"dim\",\n         \"N\",\n         \"C\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"kernel\",\n         \"stride\",\n         \"pad\",\n         \"count_include_pad\",\n         \"order\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_global_avg_pool_nchw\": [\n         \"self\",\n         \"op_type\",\n         \"sz\",\n         \"batch_size\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_global_max_pool_nchw\": [\n         \"self\",\n         \"op_type\",\n         \"sz\",\n         \"batch_size\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_global_pooling\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_global_pooling_3d\": [\n         \"self\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_max_pool_grad\": [\n         \"self\",\n         \"op_type\",\n         \"dim\",\n         \"N\",\n         \"C\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"kernel\",\n         \"stride\",\n         \"pad\",\n         \"order\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling_1d\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling_3d\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling_big_batch\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling_separate_stride_pad\": [\n         \"self\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_t\",\n         \"pad_l\",\n         \"pad_b\",\n         \"pad_r\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"order\",\n         \"op_type\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pooling_with_index\": [\n         \"self\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestPostTrainingDynamic\": {\n      \"test_default_quantized_lstm\": [\n         \"self\"\n      ],\n      \"test_nested1\": [\n         \"self\"\n      ],\n      \"test_nested2\": [\n         \"self\"\n      ],\n      \"test_nested3\": [\n         \"self\"\n      ],\n      \"test_per_channel_quantize\": [\n         \"self\"\n      ],\n      \"test_quantized_rnn\": [\n         \"self\"\n      ],\n      \"test_single_layer\": [\n         \"self\"\n      ],\n      \"test_two_layers\": [\n         \"self\"\n      ],\n      \"test_type_match_rule\": [\n         \"self\"\n      ]\n   },\n   \"TestPostTrainingStatic\": {\n      \"test_activations\": [\n         \"self\"\n      ],\n      \"test_manual\": [\n         \"self\"\n      ],\n      \"test_nested1\": [\n         \"self\"\n      ],\n      \"test_nested2\": [\n         \"self\"\n      ],\n      \"test_nested3\": [\n         \"self\"\n      ],\n      \"test_normalization\": [\n         \"self\"\n      ],\n      \"test_resnet_base\": [\n         \"self\"\n      ],\n      \"test_save_load_state_dict\": [\n         \"self\"\n      ],\n      \"test_single_layer\": [\n         \"self\"\n      ],\n      \"test_skip_quant\": [\n         \"self\"\n      ],\n      \"test_two_layers\": [\n         \"self\"\n      ]\n   },\n   \"TestPredictor\": {\n      \"_create_model\": [\n         \"self\"\n      ],\n      \"test_predictor_memory_model\": [\n         \"self\"\n      ]\n   },\n   \"TestPrependDim\": {\n      \"_test_fwd_bwd\": [\n         \"self\"\n      ],\n      \"test_prepend_dim\": [\n         \"self\"\n      ]\n   },\n   \"TestProducerVersion\": {\n      \"test_version\": [\n         \"self\"\n      ]\n   },\n   \"TestProperExitDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"error_event\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"TestProperExitIterableDataset\": {\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"error_event\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__next__\": [\n         \"self\"\n      ]\n   },\n   \"TestPutOps\": {\n      \"test_avg_put_ops\": [\n         \"self\"\n      ],\n      \"test_clamp\": [\n         \"self\"\n      ],\n      \"test_clamp_with_out_of_bounds\": [\n         \"self\"\n      ],\n      \"test_default_value\": [\n         \"self\"\n      ],\n      \"test_increment_put_ops\": [\n         \"self\"\n      ],\n      \"test_stddev_put_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestPythonIr\": {\n      \"test_param_strides\": [\n         \"self\"\n      ]\n   },\n   \"TestQATModule\": {\n      \"test_conv_bn_relu\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"height\",\n         \"width\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"padding_mode\",\n         \"use_relu\",\n         \"eps\",\n         \"momentum\",\n         \"freeze_bn\"\n      ]\n   },\n   \"TestQNNPackOps\": {\n      \"test_adaptive_avg_pool2d\": [\n         \"self\",\n         \"batch_size\",\n         \"channels\",\n         \"height\",\n         \"width\",\n         \"output_height\",\n         \"output_width\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"test_avg_pool2d\": [\n         \"self\",\n         \"batch_size\",\n         \"channels\",\n         \"height\",\n         \"width\",\n         \"kernel\",\n         \"stride\",\n         \"padding\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"test_hardswish\": [\n         \"self\",\n         \"X\",\n         \"Y_scale\",\n         \"Y_zero_point\"\n      ],\n      \"test_hardtanh\": [\n         \"self\",\n         \"X\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"test_mean\": [\n         \"self\",\n         \"batch_size\",\n         \"channels\",\n         \"height\",\n         \"width\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"test_qhardsigmoid\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qnnpack_add\": [\n         \"self\",\n         \"A\",\n         \"zero_point\",\n         \"scale_A\",\n         \"scale_B\",\n         \"scale_C\"\n      ],\n      \"test_qnnpack_maxpool2d\": [\n         \"self\",\n         \"A\",\n         \"kernel\",\n         \"stride\",\n         \"padding\"\n      ],\n      \"test_qnnpack_relu\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qnnpack_sigmoid\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qnnpack_sigmoid_sweep\": [\n         \"self\"\n      ],\n      \"test_qnnpack_tanh\": [\n         \"self\",\n         \"X\"\n      ]\n   },\n   \"TestQuantile\": {\n      \"_test_quantile\": [\n         \"self\",\n         \"inputs\",\n         \"quantile\",\n         \"abs\",\n         \"tol\"\n      ],\n      \"test_quantile_1\": [\n         \"self\"\n      ],\n      \"test_quantile_2\": [\n         \"self\"\n      ],\n      \"test_quantile_3\": [\n         \"self\"\n      ],\n      \"test_quantile_4\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizationAwareTraining\": {\n      \"test_activations\": [\n         \"self\"\n      ],\n      \"test_conv_linear\": [\n         \"self\"\n      ],\n      \"test_eval_only_fake_quant\": [\n         \"self\"\n      ],\n      \"test_manual\": [\n         \"self\"\n      ],\n      \"test_train_save_load_eval\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantize8bits\": {\n      \"test_SparseSegmentUint8\": [\n         \"self\"\n      ],\n      \"test_quantize_op\": [\n         \"self\"\n      ],\n      \"test_quantize_tensor_with_const_row_op\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizeDynamicScript\": {\n      \"test_dynamic_multi_op\": [\n         \"self\"\n      ],\n      \"test_dynamic_quant_multi_uses\": [\n         \"self\"\n      ],\n      \"test_finalize_for_linear_dynamic\": [\n         \"self\"\n      ],\n      \"test_insert_quant_dequant_linear_dynamic\": [\n         \"self\"\n      ],\n      \"test_prepare_dynamic\": [\n         \"self\"\n      ],\n      \"test_prepare_dynamic_child_qconfig\": [\n         \"self\"\n      ],\n      \"test_prepare_dynamic_lstm\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizeScriptJitPasses\": {\n      \"test_conv_trace\": [\n         \"self\"\n      ],\n      \"test_dedup_module_uses\": [\n         \"self\"\n      ],\n      \"test_finalize_debug\": [\n         \"self\"\n      ],\n      \"test_finalize_for_linear\": [\n         \"self\"\n      ],\n      \"test_fold_prepack\": [\n         \"self\"\n      ],\n      \"test_fold_quantize\": [\n         \"self\"\n      ],\n      \"test_foldbn_complex_cases\": [\n         \"self\"\n      ],\n      \"test_foldbn_in_customConv2D\": [\n         \"self\"\n      ],\n      \"test_foldbn_in_submodule\": [\n         \"self\"\n      ],\n      \"test_foldbn_shared_classtype\": [\n         \"self\"\n      ],\n      \"test_foldbn_trivial\": [\n         \"self\"\n      ],\n      \"test_foldbn_trivial_nobias\": [\n         \"self\"\n      ],\n      \"test_fuse_linear\": [\n         \"self\"\n      ],\n      \"test_insert_observers\": [\n         \"self\"\n      ],\n      \"test_insert_observers_child_qconfig\": [\n         \"self\"\n      ],\n      \"test_insert_observers_for_general_ops\": [\n         \"self\"\n      ],\n      \"test_insert_observers_for_if\": [\n         \"self\"\n      ],\n      \"test_insert_observers_for_reused_weight\": [\n         \"self\"\n      ],\n      \"test_insert_observers_propagate_observed\": [\n         \"self\"\n      ],\n      \"test_insert_observers_propagate_observed_for_function\": [\n         \"self\"\n      ],\n      \"test_insert_observers_propagate_observed_in_submodule\": [\n         \"self\"\n      ],\n      \"test_insert_observers_shared_class_type\": [\n         \"self\"\n      ],\n      \"test_insert_observers_skip_values\": [\n         \"self\"\n      ],\n      \"test_insert_observers_weight_dtype\": [\n         \"self\"\n      ],\n      \"test_insert_quant_dequant\": [\n         \"self\"\n      ],\n      \"test_insert_quant_dequant_shared_class_type\": [\n         \"self\"\n      ],\n      \"test_module_list\": [\n         \"self\"\n      ],\n      \"test_replicate_dequant_same_value\": [\n         \"self\"\n      ],\n      \"test_replicate_dequantize\": [\n         \"self\"\n      ],\n      \"test_replicate_dequantize_in_block\": [\n         \"self\"\n      ],\n      \"test_replicate_quantize_for_if\": [\n         \"self\"\n      ],\n      \"test_swap_dequantize\": [\n         \"self\"\n      ],\n      \"test_swap_functional_linear\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizeScriptPTSQOps\": {\n      \"_test_op_impl\": [\n         \"self\",\n         \"module\",\n         \"data\",\n         \"quantized_op\"\n      ],\n      \"test_hardswish\": [\n         \"self\"\n      ],\n      \"test_layer_norm\": [\n         \"self\"\n      ],\n      \"test_qbatch_norm\": [\n         \"self\"\n      ],\n      \"test_qbatch_norm_relu\": [\n         \"self\"\n      ],\n      \"test_quantize_general_shape_ops\": [\n         \"self\"\n      ],\n      \"test_quantize_general_value_ops\": [\n         \"self\"\n      ],\n      \"test_quantized_add\": [\n         \"self\"\n      ],\n      \"test_quantized_add_relu\": [\n         \"self\"\n      ],\n      \"test_quantized_add_scalar\": [\n         \"self\"\n      ],\n      \"test_quantized_add_scalar_relu\": [\n         \"self\"\n      ],\n      \"test_quantized_cat\": [\n         \"self\"\n      ],\n      \"test_quantized_conv2d\": [\n         \"self\"\n      ],\n      \"test_quantized_conv2d_relu\": [\n         \"self\"\n      ],\n      \"test_quantized_conv3d\": [\n         \"self\"\n      ],\n      \"test_quantized_conv3d_relu\": [\n         \"self\"\n      ],\n      \"test_quantized_mul\": [\n         \"self\"\n      ],\n      \"test_quantized_mul_relu\": [\n         \"self\"\n      ],\n      \"test_quantized_mul_scalar\": [\n         \"self\"\n      ],\n      \"test_quantized_mul_scalar_relu\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizedConv\": {\n      \"_make_qconv_tensors\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"input_feature_map_shape\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernels\",\n         \"strides\",\n         \"pads\",\n         \"dilations\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\"\n      ],\n      \"_test_qconv_impl\": [\n         \"self\",\n         \"qconv_fn\",\n         \"qconv_prepack_fn\",\n         \"conv_op\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"input_feature_map_shape\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernels\",\n         \"strides\",\n         \"pads\",\n         \"dilations\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_relu\",\n         \"use_channelwise\"\n      ],\n      \"_test_qconv_unpack_impl\": [\n         \"self\",\n         \"qconv_prepack_fn\",\n         \"qconv_unpack_fn\",\n         \"inputs\",\n         \"strides\",\n         \"pads\",\n         \"channelwise\"\n      ],\n      \"test_qconv1d\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"length\",\n         \"kernel\",\n         \"stride\",\n         \"pad\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\"\n      ],\n      \"test_qconv2d\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"height\",\n         \"width\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_relu\",\n         \"use_channelwise\"\n      ],\n      \"test_qconv3d\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_d\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_d\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_d\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_relu\",\n         \"use_channelwise\",\n         \"qengine\"\n      ],\n      \"test_qconv3d_unpack\": [\n         \"self\",\n         \"inputs\",\n         \"stride_d\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_d\",\n         \"pad_h\",\n         \"pad_w\",\n         \"channelwise\",\n         \"qengine\"\n      ],\n      \"test_qconv_unpack\": [\n         \"self\",\n         \"inputs\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"channelwise\"\n      ]\n   },\n   \"TestQuantizedFunctional\": {\n      \"_test_conv_api_impl\": [\n         \"self\",\n         \"qconv_fn\",\n         \"conv_fn\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"input_feature_map_size\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\"\n      ],\n      \"test_conv2d_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"H\",\n         \"W\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\",\n         \"qengine\"\n      ],\n      \"test_conv3d_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_d\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_d\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_d\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\",\n         \"qengine\"\n      ],\n      \"test_relu_api\": [\n         \"self\"\n      ]\n   },\n   \"TestQuantizedLinear\": {\n      \"test_qlinear\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"use_bias\",\n         \"use_relu\",\n         \"use_multi_dim_input\",\n         \"use_channelwise\"\n      ],\n      \"test_qlinear_unpack\": [\n         \"self\",\n         \"W\",\n         \"use_channelwise\"\n      ]\n   },\n   \"TestQuantizedOps\": {\n      \"test_adaptive_avg_pool2d\": [\n         \"self\",\n         \"X\",\n         \"output_size_h\",\n         \"output_size_w\"\n      ],\n      \"test_adaptive_avg_pool2d_nhwc\": [\n         \"self\",\n         \"X\",\n         \"output_size_h\",\n         \"output_size_w\"\n      ],\n      \"test_avg_pool2d\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"test_avg_pool2d_nhwc\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"test_avg_pool3d\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"test_avg_pool3d_nhwc\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"test_batch_norm2d\": [\n         \"self\",\n         \"X\",\n         \"Y_scale\",\n         \"Y_zero_point\"\n      ],\n      \"test_batch_norm2d_relu\": [\n         \"self\"\n      ],\n      \"test_batch_norm3d\": [\n         \"self\"\n      ],\n      \"test_cat\": [\n         \"self\",\n         \"X\",\n         \"num\",\n         \"dim\",\n         \"relu\"\n      ],\n      \"test_cat_nhwc\": [\n         \"self\",\n         \"X\",\n         \"relu\"\n      ],\n      \"test_channel_shuffle\": [\n         \"self\",\n         \"X\",\n         \"groups\"\n      ],\n      \"test_equal\": [\n         \"self\",\n         \"X\",\n         \"X2\",\n         \"X_per_channel\",\n         \"X2_per_channel\"\n      ],\n      \"test_group_norm\": [\n         \"self\"\n      ],\n      \"test_hardswish\": [\n         \"self\",\n         \"X\",\n         \"Y_scale\",\n         \"Y_zero_point\"\n      ],\n      \"test_hardtanh\": [\n         \"self\",\n         \"X\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"test_instance_norm\": [\n         \"self\"\n      ],\n      \"test_interpolate\": [\n         \"self\",\n         \"X\",\n         \"size\",\n         \"mode\",\n         \"scale_factor\",\n         \"align_corners\",\n         \"nhwc_layout\"\n      ],\n      \"test_interpolate3d\": [\n         \"self\",\n         \"X\",\n         \"size\",\n         \"scale_factor\",\n         \"align_corners\",\n         \"nhwc_layout\"\n      ],\n      \"test_max_pool2d\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"dilation\",\n         \"padding\",\n         \"ceil_mode\"\n      ],\n      \"test_max_pool2d_nhwc\": [\n         \"self\",\n         \"X\",\n         \"kernel\",\n         \"stride\",\n         \"dilation\",\n         \"padding\",\n         \"ceil_mode\"\n      ],\n      \"test_mean\": [\n         \"self\",\n         \"X\",\n         \"dim\"\n      ],\n      \"test_qadd_relu_different_qparams\": [\n         \"self\"\n      ],\n      \"test_qadd_relu_same_qparams\": [\n         \"self\"\n      ],\n      \"test_qadd_scalar_relu\": [\n         \"self\",\n         \"A\",\n         \"b\"\n      ],\n      \"test_qclamp\": [\n         \"self\",\n         \"X\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"test_qelu\": [\n         \"self\",\n         \"X\",\n         \"alpha\"\n      ],\n      \"test_qhardsigmoid\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qlayer_norm\": [\n         \"self\"\n      ],\n      \"test_qmul_broadcast\": [\n         \"self\"\n      ],\n      \"test_qmul_relu_different_qparams\": [\n         \"self\"\n      ],\n      \"test_qmul_relu_same_qparams\": [\n         \"self\"\n      ],\n      \"test_qrelu\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qrelu6\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qrelu_leaky\": [\n         \"self\",\n         \"X\",\n         \"alpha\"\n      ],\n      \"test_qsigmoid\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qtanh\": [\n         \"self\",\n         \"X\"\n      ],\n      \"test_qtopk\": [\n         \"self\",\n         \"X\",\n         \"k\",\n         \"dim\",\n         \"largest\",\n         \"sorted\"\n      ],\n      \"test_qtopk_nhwc\": [\n         \"self\",\n         \"X\",\n         \"k\",\n         \"dim\",\n         \"largest\",\n         \"sorted\"\n      ]\n   },\n   \"TestQuantizedTensor\": {\n      \"test_choose_qparams\": [\n         \"self\",\n         \"X\",\n         \"reduce_range\"\n      ],\n      \"test_cuda_cpu_implementation_consistency\": [\n         \"self\"\n      ],\n      \"test_per_channel_qtensor_creation\": [\n         \"self\"\n      ],\n      \"test_qscheme_pickle\": [\n         \"self\"\n      ],\n      \"test_qtensor\": [\n         \"self\"\n      ],\n      \"test_qtensor_clone\": [\n         \"self\"\n      ],\n      \"test_qtensor_copy\": [\n         \"self\"\n      ],\n      \"test_qtensor_creation\": [\n         \"self\"\n      ],\n      \"test_qtensor_dtypes\": [\n         \"self\"\n      ],\n      \"test_qtensor_float_assignment\": [\n         \"self\"\n      ],\n      \"test_qtensor_legacy_new_failure\": [\n         \"self\"\n      ],\n      \"test_qtensor_load_save\": [\n         \"self\"\n      ],\n      \"test_qtensor_per_channel_load_save\": [\n         \"self\"\n      ],\n      \"test_qtensor_per_channel_permute\": [\n         \"self\"\n      ],\n      \"test_qtensor_permute\": [\n         \"self\"\n      ],\n      \"test_qtensor_quant_dequant\": [\n         \"self\"\n      ],\n      \"test_qtensor_quantize_per_channel\": [\n         \"self\"\n      ],\n      \"test_qtensor_reshape\": [\n         \"self\"\n      ],\n      \"test_qtensor_resize\": [\n         \"self\"\n      ],\n      \"test_qtensor_view\": [\n         \"self\"\n      ],\n      \"test_torch_qtensor_deepcopy\": [\n         \"self\"\n      ]\n   },\n   \"TestRNGExtension\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_rng\": [\n         \"self\"\n      ]\n   },\n   \"TestRNNExecutor\": {\n      \"_compare\": [\n         \"self\",\n         \"model\",\n         \"forward_only\"\n      ],\n      \"enable_rnn_executor\": [\n         \"self\",\n         \"net\",\n         \"value\",\n         \"forward_only\"\n      ],\n      \"init_lstm_model\": [\n         \"self\",\n         \"T\",\n         \"num_layers\",\n         \"forward_only\",\n         \"use_loss\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_empty_sequence\": [\n         \"self\"\n      ],\n      \"test_lstm_equal_simplenet\": [\n         \"self\",\n         \"num_layers\",\n         \"T\",\n         \"forward_only\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lstm_with_attention_equal_simplenet\": [\n         \"self\",\n         \"T\",\n         \"forward_only\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestReBatchingQueue\": {\n      \"test_rebatching_parallel_producer_consumer\": [\n         \"self\",\n         \"num_producers\",\n         \"num_consumers\",\n         \"producer_input_size\",\n         \"producer_num_iterations\",\n         \"capacity\"\n      ],\n      \"test_rebatching_queue_closes_properly\": [\n         \"self\"\n      ],\n      \"test_rebatching_queue_multi_enqueue_dequeue\": [\n         \"self\"\n      ],\n      \"test_rebatching_queue_multiple_components\": [\n         \"self\"\n      ],\n      \"test_rebatching_queue_single_enqueue_dequeue\": [\n         \"self\"\n      ]\n   },\n   \"TestReShapeOps\": {\n      \"test_backprop\": [\n         \"self\"\n      ],\n      \"test_basic_reshape\": [\n         \"self\"\n      ],\n      \"test_in_place\": [\n         \"self\"\n      ],\n      \"test_input_shape_changes\": [\n         \"self\"\n      ],\n      \"test_int64_reshape_input\": [\n         \"self\"\n      ],\n      \"test_missing_dim\": [\n         \"self\"\n      ],\n      \"test_reshape_ops\": [\n         \"self\"\n      ],\n      \"test_zero_dim\": [\n         \"self\"\n      ],\n      \"test_zero_dim_and_missing_dim\": [\n         \"self\"\n      ]\n   },\n   \"TestReaderBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"size\",\n         \"offset\"\n      ],\n      \"new_reader\": [\n         \"self\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"ws\"\n      ]\n   },\n   \"TestReaderWithLimit\": {\n      \"_test_limit_reader_init_shared\": [\n         \"self\",\n         \"size\"\n      ],\n      \"_test_limit_reader_shared\": [\n         \"self\",\n         \"reader_class\",\n         \"size\",\n         \"expected_read_len\",\n         \"expected_read_len_threshold\",\n         \"expected_finish\",\n         \"num_threads\",\n         \"read_delay\"\n      ],\n      \"test_count_limit_reader_with_high_limit\": [\n         \"self\"\n      ],\n      \"test_count_limit_reader_with_low_limit\": [\n         \"self\"\n      ],\n      \"test_count_limit_reader_with_zero_limit\": [\n         \"self\"\n      ],\n      \"test_count_limit_reader_without_limit\": [\n         \"self\"\n      ],\n      \"test_runtime_threads\": [\n         \"self\"\n      ],\n      \"test_time_limit_reader_with_long_limit\": [\n         \"self\"\n      ],\n      \"test_time_limit_reader_with_short_limit\": [\n         \"self\"\n      ],\n      \"test_time_limit_reader_without_limit\": [\n         \"self\"\n      ]\n   },\n   \"TestRecordHistogramObserver\": {\n      \"test_histogram_observer\": [\n         \"self\",\n         \"qdtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"test_histogram_observer_one_sided\": [\n         \"self\"\n      ],\n      \"test_observer_scriptable\": [\n         \"self\",\n         \"qdtype\",\n         \"qscheme\"\n      ],\n      \"test_record_observer\": [\n         \"self\"\n      ]\n   },\n   \"TestRecordQueue\": {\n      \"test_record_queue\": [\n         \"self\"\n      ]\n   },\n   \"TestRecursiveScript\": {\n      \"test_attributes\": [\n         \"self\"\n      ],\n      \"test_class_compile\": [\n         \"self\"\n      ],\n      \"test_constants_with_final\": [\n         \"self\"\n      ],\n      \"test_dir\": [\n         \"self\"\n      ],\n      \"test_error_stack\": [\n         \"self\"\n      ],\n      \"test_error_stack_class\": [\n         \"self\"\n      ],\n      \"test_error_stack_module\": [\n         \"self\"\n      ],\n      \"test_failed_function_compilation\": [\n         \"self\"\n      ],\n      \"test_function_attribute_in_submodule\": [\n         \"self\"\n      ],\n      \"test_ignore_class\": [\n         \"self\"\n      ],\n      \"test_inferred_nonetype\": [\n         \"self\"\n      ],\n      \"test_init_error\": [\n         \"self\"\n      ],\n      \"test_inner_traced_module\": [\n         \"self\"\n      ],\n      \"test_iterable_modules\": [\n         \"self\"\n      ],\n      \"test_method_call\": [\n         \"self\"\n      ],\n      \"test_module_basic\": [\n         \"self\"\n      ],\n      \"test_module_function_export\": [\n         \"self\"\n      ],\n      \"test_module_name\": [\n         \"self\"\n      ],\n      \"test_module_repr\": [\n         \"self\"\n      ],\n      \"test_optional_module\": [\n         \"self\"\n      ],\n      \"test_property\": [\n         \"self\"\n      ],\n      \"test_python_function_attribute\": [\n         \"self\"\n      ],\n      \"test_repeated_error_stack\": [\n         \"self\"\n      ],\n      \"test_script_after_eval\": [\n         \"self\"\n      ],\n      \"test_script_basic\": [\n         \"self\"\n      ],\n      \"test_script_function_attribute\": [\n         \"self\"\n      ],\n      \"test_script_loaded_module\": [\n         \"self\"\n      ]\n   },\n   \"TestRedisStoreHandlerOp\": {\n      \"create_store_handler\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_get_timeout\": [\n         \"self\"\n      ],\n      \"test_set_get\": [\n         \"self\"\n      ]\n   },\n   \"TestReduceFrontReductions\": {\n      \"grad_variant_input_test\": [\n         \"self\",\n         \"grad_op_name\",\n         \"X\",\n         \"ref\",\n         \"num_reduce_dim\"\n      ],\n      \"max_op_test\": [\n         \"self\",\n         \"op_name\",\n         \"num_reduce_dim\",\n         \"gc\",\n         \"dc\",\n         \"in_data\",\n         \"in_names\",\n         \"ref_max\"\n      ],\n      \"reduce_op_test\": [\n         \"self\",\n         \"op_name\",\n         \"op_ref\",\n         \"in_data\",\n         \"in_names\",\n         \"num_reduce_dims\",\n         \"device\"\n      ],\n      \"test_reduce_back_max\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_back_max_with_length\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_back_mean\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_back_mean_with_length\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_back_sum\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_back_sum_with_length\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_front_max\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_front_max_with_length\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_front_mean\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_front_mean_with_length\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ],\n      \"test_reduce_front_sum\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_front_sum_empty_batch\": [\n         \"self\",\n         \"num_reduce_dim\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_front_sum_with_length\": [\n         \"self\",\n         \"dc\",\n         \"gc\"\n      ]\n   },\n   \"TestReduceFrontSum\": {\n      \"test_col2im_gradients\": [\n         \"self\",\n         \"batch_size\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"channels\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_im2col_layout\": [\n         \"self\",\n         \"batch_size\",\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"channels\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestReduceOps\": {\n      \"run_reduce_op_test\": [\n         \"self\",\n         \"op_name\",\n         \"X\",\n         \"keepdims\",\n         \"num_axes\",\n         \"ref_func\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"run_reduce_op_test_impl\": [\n         \"self\",\n         \"op_name\",\n         \"X\",\n         \"axes\",\n         \"keepdims\",\n         \"ref_func\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_l1\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_l2\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_max\": [\n         \"self\",\n         \"X\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_mean\": [\n         \"self\",\n         \"X\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_min\": [\n         \"self\",\n         \"X\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reduce_sum\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"k\",\n         \"t\",\n         \"keepdims\",\n         \"num_axes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestReductionOps\": {\n      \"test_columnwise_max\": [\n         \"self\",\n         \"batch_size\",\n         \"m\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_avg\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_int_sum\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_sqrsum\": [\n         \"self\",\n         \"n\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_sum\": [\n         \"self\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_rowwise_max\": [\n         \"self\",\n         \"batch_size\",\n         \"m\",\n         \"n\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestRegularizer\": {\n      \"test_bounded_grad_proj\": [\n         \"self\",\n         \"X\",\n         \"left_open\",\n         \"right_open\",\n         \"eps\",\n         \"ub\",\n         \"lb\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elastic_l1_norm_trimmed\": [\n         \"self\",\n         \"param_dim\",\n         \"k\",\n         \"l1\",\n         \"l2\"\n      ],\n      \"test_group_l1_norm\": [\n         \"self\",\n         \"output_dim\",\n         \"input_num\",\n         \"reg_weight\"\n      ],\n      \"test_l1_norm_trimmed\": [\n         \"self\",\n         \"param_dim\",\n         \"k\",\n         \"reg_weight\"\n      ],\n      \"test_log_barrier\": [\n         \"self\",\n         \"X\"\n      ]\n   },\n   \"TestRegularizerContext\": {\n      \"test_regularizer_context\": [\n         \"self\",\n         \"X\"\n      ]\n   },\n   \"TestRelu\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testRelu\": [\n         \"self\"\n      ]\n   },\n   \"TestRerouteTensor\": {\n      \"test_reroute_tensor\": [\n         \"self\"\n      ]\n   },\n   \"TestResize\": {\n      \"test_nearest\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nearest_grad\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nearest_onnx\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nearest_onnx_grad\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestRmsProp\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"testSparse\": [\n         \"self\"\n      ]\n   },\n   \"TestRowWhere\": {\n      \"test_reference\": [\n         \"self\"\n      ],\n      \"test_rowwhere\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_rowwhere_dim2\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestRowWiseAdagrad\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"testDense\": [\n         \"self\"\n      ],\n      \"testGPUDense\": [\n         \"self\"\n      ]\n   },\n   \"TestRowWiseCounter\": {\n      \"test_rowwise_counter\": [\n         \"self\"\n      ]\n   },\n   \"TestRsample\": {\n      \"test_beta_wrt_alpha\": [\n         \"self\"\n      ],\n      \"test_beta_wrt_beta\": [\n         \"self\"\n      ],\n      \"test_chi2\": [\n         \"self\"\n      ],\n      \"test_dirichlet_multivariate\": [\n         \"self\"\n      ],\n      \"test_dirichlet_on_diagonal\": [\n         \"self\"\n      ],\n      \"test_dirichlet_tangent_field\": [\n         \"self\"\n      ],\n      \"test_gamma\": [\n         \"self\"\n      ]\n   },\n   \"TestRunAllOnGPU\": {\n      \"test_rnn_run_on_gpu\": [\n         \"self\"\n      ]\n   },\n   \"TestSWAUtils\": {\n      \"_test_averaged_model\": [\n         \"self\",\n         \"net_device\",\n         \"swa_device\"\n      ],\n      \"_test_update_bn\": [\n         \"self\",\n         \"dnn\",\n         \"dl_x\",\n         \"dl_xy\",\n         \"cuda\"\n      ],\n      \"test_averaged_model_all_devices\": [\n         \"self\"\n      ],\n      \"test_averaged_model_exponential\": [\n         \"self\"\n      ],\n      \"test_averaged_model_mixed_device\": [\n         \"self\"\n      ],\n      \"test_averaged_model_state_dict\": [\n         \"self\"\n      ],\n      \"test_bn_update_eval_momentum\": [\n         \"self\"\n      ],\n      \"test_update_bn_cnn\": [\n         \"self\"\n      ],\n      \"test_update_bn_dnn\": [\n         \"self\"\n      ]\n   },\n   \"TestSaveLoad\": {\n      \"test_different_functions\": [\n         \"self\"\n      ],\n      \"test_different_interfaces\": [\n         \"self\"\n      ],\n      \"test_different_modules\": [\n         \"self\"\n      ],\n      \"test_many_collisions\": [\n         \"self\"\n      ],\n      \"test_versioned_symbols\": [\n         \"self\"\n      ],\n      \"test_versioned_symbols_reserialization\": [\n         \"self\"\n      ]\n   },\n   \"TestScaleOps\": {\n      \"test_scale_ops\": [\n         \"self\",\n         \"dim\",\n         \"scale\",\n         \"num_tensors\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestScatterOps\": {\n      \"testScatterAssign\": [\n         \"self\",\n         \"first_dim\",\n         \"index_dim\",\n         \"extra_dims\",\n         \"data_type\",\n         \"ind_type\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"testScatterWeightedSum\": [\n         \"self\",\n         \"num_args\",\n         \"first_dim\",\n         \"index_dim\",\n         \"extra_dims\",\n         \"ind_type\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestScope\": {\n      \"testDevicescopeAssertion\": [\n         \"self\"\n      ],\n      \"testDevicescopeBasic\": [\n         \"self\"\n      ],\n      \"testEmptyDevicescopeBasic\": [\n         \"self\"\n      ],\n      \"testEmptyNamescopeBasic\": [\n         \"self\"\n      ],\n      \"testMultiThreaded\": [\n         \"self\"\n      ],\n      \"testNamescopeAssertion\": [\n         \"self\"\n      ],\n      \"testNamescopeBasic\": [\n         \"self\"\n      ],\n      \"testTags\": [\n         \"self\"\n      ]\n   },\n   \"TestScopes\": {\n      \"testBlobReferenceIsIndependentFromNameScope\": [\n         \"self\"\n      ],\n      \"testDeviceScope\": [\n         \"self\"\n      ],\n      \"testNameAndDeviceScopeTogether\": [\n         \"self\"\n      ],\n      \"testNameScopeWithOp\": [\n         \"self\"\n      ],\n      \"testNameScopeWithReset\": [\n         \"self\"\n      ]\n   },\n   \"TestScript\": {\n      \"test_str_ops\": [\n         \"self\"\n      ]\n   },\n   \"TestScriptModule\": {\n      \"_createFeedModule\": [\n         \"self\"\n      ],\n      \"testCreation\": [\n         \"self\"\n      ],\n      \"testForward\": [\n         \"self\"\n      ],\n      \"testMultiInputOutput\": [\n         \"self\"\n      ],\n      \"testSerialization\": [\n         \"self\"\n      ]\n   },\n   \"TestScriptModuleFromString\": {\n      \"_createFeedModule\": [\n         \"self\"\n      ],\n      \"_get_modules_bytes\": [\n         \"self\",\n         \"the_module\"\n      ]\n   },\n   \"TestScriptPy3\": {\n      \"test_any_in_class_fails\": [\n         \"self\"\n      ],\n      \"test_bad_types\": [\n         \"self\"\n      ],\n      \"test_dataclass_error\": [\n         \"self\"\n      ],\n      \"test_dict_preserves_order\": [\n         \"self\"\n      ],\n      \"test_export_opnames_interface\": [\n         \"self\"\n      ],\n      \"test_ignore_with_types\": [\n         \"self\"\n      ],\n      \"test_joined_str\": [\n         \"self\"\n      ],\n      \"test_kwarg_support\": [\n         \"self\"\n      ],\n      \"test_list_unification_hint\": [\n         \"self\"\n      ],\n      \"test_mismatched_annotation\": [\n         \"self\"\n      ],\n      \"test_named_tuple\": [\n         \"self\"\n      ],\n      \"test_named_tuple_as_attr\": [\n         \"self\"\n      ],\n      \"test_named_tuple_constant\": [\n         \"self\"\n      ],\n      \"test_named_tuple_default_error\": [\n         \"self\"\n      ],\n      \"test_named_tuple_kwarg_construct\": [\n         \"self\"\n      ],\n      \"test_named_tuple_lower\": [\n         \"self\"\n      ],\n      \"test_named_tuple_resolution\": [\n         \"self\"\n      ],\n      \"test_named_tuple_serialization\": [\n         \"self\"\n      ],\n      \"test_named_tuple_slice_unpack\": [\n         \"self\"\n      ],\n      \"test_named_tuple_type_annotation\": [\n         \"self\"\n      ],\n      \"test_named_tuple_wrong_types\": [\n         \"self\"\n      ],\n      \"test_optional_dict_construct\": [\n         \"self\"\n      ],\n      \"test_parser_bug\": [\n         \"self\"\n      ],\n      \"test_python_callable\": [\n         \"self\"\n      ],\n      \"test_reannotate\": [\n         \"self\"\n      ],\n      \"test_return_named_tuple\": [\n         \"self\"\n      ],\n      \"test_type_annotate_py3\": [\n         \"self\"\n      ],\n      \"test_types_as_values\": [\n         \"self\"\n      ]\n   },\n   \"TestSegmentOps\": {\n      \"test_legacy_sparse_and_lengths_sum_gradient\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_mean\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_ops\": [\n         \"self\"\n      ],\n      \"test_lengths_sum\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sorted_segment_ops\": [\n         \"self\"\n      ],\n      \"test_sorted_segment_range_log_mean_exp\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sorted_segment_range_mean\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_indices_in_gradient_mean_gpu\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_indices_in_gradient_sum_gpu\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_mean\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_ops\": [\n         \"self\"\n      ],\n      \"test_sparse_lengths_positional_weighted_sum\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_sum\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_sum_invalid_index\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_weighted_sum\": [\n         \"self\",\n         \"grad_on_weights\",\n         \"inputs\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_sorted_segment_ops\": [\n         \"self\"\n      ],\n      \"test_sparse_unsorted_segment_ops\": [\n         \"self\"\n      ],\n      \"test_unsorted_means_large\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_unsorted_segment_ops\": [\n         \"self\"\n      ],\n      \"test_unsorted_segment_ops_gpu\": [\n         \"self\"\n      ],\n      \"test_unsorted_sums_large\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSelu\": {\n      \"fix0\": [\n         \"X\"\n      ],\n      \"selu_ref\": [\n         \"x\",\n         \"scale\",\n         \"alpha\"\n      ],\n      \"test_selu_1\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_selu_2\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_selu_3\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_selu_inplace\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestSequenceOps\": {\n      \"test_add_padding\": [\n         \"self\",\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"args\",\n         \"ret_lengths\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_add_padding_no_length\": [\n         \"self\",\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"data\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_add_zero_padding\": [\n         \"self\",\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"args\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_find_duplicate_elements\": [\n         \"self\",\n         \"elements\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_gather_padding\": [\n         \"self\",\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"args\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_remove_data_blocks\": [\n         \"self\",\n         \"data\",\n         \"indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_remove_padding\": [\n         \"self\",\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"args\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_reverse_packed_segs\": [\n         \"self\",\n         \"data\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSerialization\": {\n      \"run\": [\n         \"self\"\n      ],\n      \"test_serialization_zipfile\": [\n         \"self\"\n      ]\n   },\n   \"TestSetAffinity\": {\n      \"test_set_affinity_in_worker_init\": [\n         \"self\"\n      ]\n   },\n   \"TestSgd\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestShapeInference\": {\n      \"InferTensorRunAndCompare\": [\n         \"self\",\n         \"model\",\n         \"expected_uninferred_blobs\"\n      ],\n      \"testCast\": [\n         \"self\"\n      ],\n      \"testConcat\": [\n         \"self\"\n      ],\n      \"testConcatInt32\": [\n         \"self\"\n      ],\n      \"testFCAxis2\": [\n         \"self\"\n      ],\n      \"testFCTransposed\": [\n         \"self\"\n      ],\n      \"testGather\": [\n         \"self\"\n      ],\n      \"testHalfInt8Conversion\": [\n         \"self\"\n      ],\n      \"testInt8Conversion\": [\n         \"self\"\n      ],\n      \"testLearningRateOp\": [\n         \"self\"\n      ],\n      \"testLengthsPad\": [\n         \"self\"\n      ],\n      \"testLengthsSum\": [\n         \"self\"\n      ],\n      \"testShapeInferenceConvNet\": [\n         \"self\"\n      ],\n      \"testShapeInferenceDistances\": [\n         \"self\"\n      ],\n      \"testShapeInferenceFlatten\": [\n         \"self\"\n      ],\n      \"testShapeInferenceIm2Col\": [\n         \"self\"\n      ],\n      \"testShapeInferenceMatMul\": [\n         \"self\"\n      ],\n      \"testShapeInferencePad\": [\n         \"self\"\n      ],\n      \"testShapeInferencePadZero\": [\n         \"self\"\n      ],\n      \"testShapeInferencePow\": [\n         \"self\"\n      ],\n      \"testShapeInferenceReduceBackFrontX\": [\n         \"self\"\n      ],\n      \"testShapeInferenceReshape\": [\n         \"self\"\n      ],\n      \"testShapeInferenceRoiPool\": [\n         \"self\"\n      ],\n      \"testShapeInferenceSimpleFC\": [\n         \"self\"\n      ],\n      \"testShapeInferenceSlice\": [\n         \"self\"\n      ],\n      \"testShapeInferenceSoftmaxWithLoss\": [\n         \"self\"\n      ],\n      \"testShapeInferenceTile\": [\n         \"self\"\n      ],\n      \"testShapeInferenceTranspose\": [\n         \"self\"\n      ],\n      \"testShapeInferenceTwoClass\": [\n         \"self\"\n      ],\n      \"testShapeInferenceUnique\": [\n         \"self\"\n      ],\n      \"testShapeOp\": [\n         \"self\"\n      ],\n      \"testSqueeze\": [\n         \"self\"\n      ]\n   },\n   \"TestShowPickle\": {\n      \"test_scripted_model\": [\n         \"self\"\n      ]\n   },\n   \"TestSigmoid\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testSigmoid\": [\n         \"self\"\n      ]\n   },\n   \"TestSin\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testSin\": [\n         \"self\"\n      ]\n   },\n   \"TestSinusoidPositionEncodingOp\": {\n      \"test_sinusoid_embedding\": [\n         \"self\",\n         \"positions_vec\",\n         \"embedding_size\",\n         \"batch_size\",\n         \"alpha\",\n         \"amplitude\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSoftmaxOps\": {\n      \"test_compare_cpugpu\": [\n         \"self\"\n      ],\n      \"test_softmax\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_axis\": [\n         \"self\",\n         \"axis\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_grad\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"gc\",\n         \"only_loss\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_axis_2\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"only_loss\",\n         \"label_prob\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_label_prob\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_label_prob_weighted\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_large\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_weighted\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"only_loss\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_softmax_with_loss_zero_weight\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"weighted\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatial_softmax_with_loss\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"weighted\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatial_softmax_with_loss_allignore\": [\n         \"self\",\n         \"n\",\n         \"D\",\n         \"weighted\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSoftplus\": {\n      \"test_softplus\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSparse\": {\n      \"_all_narrow_combs\": [\n         \"self\",\n         \"shape\"\n      ],\n      \"_gen_sparse\": [\n         \"self\",\n         \"sparse_dim\",\n         \"nnz\",\n         \"with_size\"\n      ],\n      \"_test_basic_ops_shape\": [\n         \"self\",\n         \"nnz_x1\",\n         \"nnz_x2\",\n         \"shape_i\",\n         \"shape_v\"\n      ],\n      \"_test_log1p_tensor\": [\n         \"self\",\n         \"input\",\n         \"dense_tensor\"\n      ],\n      \"_test_narrow\": [\n         \"self\",\n         \"input\",\n         \"narrow_args\"\n      ],\n      \"_test_new_device\": [\n         \"self\",\n         \"size\",\n         \"device\"\n      ],\n      \"_test_resize_shape\": [\n         \"self\",\n         \"x_i\",\n         \"x_v\",\n         \"x_size\",\n         \"y_i\",\n         \"y_v\",\n         \"y_size\"\n      ],\n      \"_test_spadd_shape\": [\n         \"self\",\n         \"nnz\",\n         \"shape_i\",\n         \"shape_v\"\n      ],\n      \"_test_sparse_mask_fixed\": [\n         \"self\"\n      ],\n      \"_test_sparse_mask_hybrid_fixed\": [\n         \"self\"\n      ],\n      \"_test_sparse_mask_shape\": [\n         \"self\",\n         \"nnz_x1\",\n         \"nnz_x2\",\n         \"shape_i\",\n         \"shape_v\"\n      ],\n      \"_test_zeros\": [\n         \"self\",\n         \"nnzs\",\n         \"shape\",\n         \"out_shape_i\",\n         \"out_shape_v\"\n      ],\n      \"_test_zeros_like\": [\n         \"self\",\n         \"nnzs\",\n         \"template_shape_i\",\n         \"template_shape_v\"\n      ],\n      \"_to_dense_half_safe\": [\n         \"self\",\n         \"tensor\"\n      ],\n      \"assert_uncoalesced\": [\n         \"self\",\n         \"x\"\n      ],\n      \"randn\": [\n         \"self\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_Sparse_to_Sparse_copy_\": [\n         \"self\"\n      ],\n      \"test_Sparse_to_Sparse_copy_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_add_dense_sparse_mismatch\": [\n         \"self\"\n      ],\n      \"test_add_noncontiguous\": [\n         \"self\"\n      ],\n      \"test_add_sub_nnz\": [\n         \"self\"\n      ],\n      \"test_add_zeros\": [\n         \"self\"\n      ],\n      \"test_allow_tensor_metadata_change\": [\n         \"self\"\n      ],\n      \"test_any\": [\n         \"self\"\n      ],\n      \"test_basic\": [\n         \"self\"\n      ],\n      \"test_basic_ops\": [\n         \"self\"\n      ],\n      \"test_basic_ops_hybrid\": [\n         \"self\"\n      ],\n      \"test_bmm\": [\n         \"self\"\n      ],\n      \"test_bmm_cuda_version_error\": [\n         \"self\"\n      ],\n      \"test_bmm_deterministic\": [\n         \"self\"\n      ],\n      \"test_bmm_windows_error\": [\n         \"self\"\n      ],\n      \"test_cat\": [\n         \"self\"\n      ],\n      \"test_change_tensor_metadata\": [\n         \"self\"\n      ],\n      \"test_clone\": [\n         \"self\"\n      ],\n      \"test_coalesce\": [\n         \"self\"\n      ],\n      \"test_coalesce_transpose_mm\": [\n         \"self\"\n      ],\n      \"test_constructor_device_legacy\": [\n         \"self\"\n      ],\n      \"test_contig\": [\n         \"self\"\n      ],\n      \"test_contig_hybrid\": [\n         \"self\"\n      ],\n      \"test_ctor_size_checks\": [\n         \"self\"\n      ],\n      \"test_cuda_empty\": [\n         \"self\"\n      ],\n      \"test_div_by_sparse_error\": [\n         \"self\"\n      ],\n      \"test_dsmm\": [\n         \"self\"\n      ],\n      \"test_dtypes\": [\n         \"self\"\n      ],\n      \"test_empty_full\": [\n         \"self\"\n      ],\n      \"test_factory\": [\n         \"self\"\n      ],\n      \"test_factory_copy\": [\n         \"self\"\n      ],\n      \"test_factory_default\": [\n         \"self\"\n      ],\n      \"test_factory_dense_dim\": [\n         \"self\"\n      ],\n      \"test_factory_device_type_inference\": [\n         \"self\"\n      ],\n      \"test_factory_empty_indices\": [\n         \"self\"\n      ],\n      \"test_factory_nnz\": [\n         \"self\"\n      ],\n      \"test_factory_nnz_zero\": [\n         \"self\"\n      ],\n      \"test_factory_size_check\": [\n         \"self\"\n      ],\n      \"test_factory_type_inference\": [\n         \"self\"\n      ],\n      \"test_floor_divide_by_sparse_error\": [\n         \"self\"\n      ],\n      \"test_hsmm\": [\n         \"self\"\n      ],\n      \"test_index_select\": [\n         \"self\"\n      ],\n      \"test_is_nonzero\": [\n         \"self\"\n      ],\n      \"test_is_sparse\": [\n         \"self\"\n      ],\n      \"test_isnan\": [\n         \"self\"\n      ],\n      \"test_legacy_constructor\": [\n         \"self\"\n      ],\n      \"test_legacy_new\": [\n         \"self\"\n      ],\n      \"test_log1p\": [\n         \"self\"\n      ],\n      \"test_mm\": [\n         \"self\"\n      ],\n      \"test_mv\": [\n         \"self\"\n      ],\n      \"test_narrow\": [\n         \"self\"\n      ],\n      \"test_new\": [\n         \"self\"\n      ],\n      \"test_new_device_multi_gpu\": [\n         \"self\"\n      ],\n      \"test_new_device_single_gpu\": [\n         \"self\"\n      ],\n      \"test_norm\": [\n         \"self\"\n      ],\n      \"test_pickle\": [\n         \"self\"\n      ],\n      \"test_print\": [\n         \"self\"\n      ],\n      \"test_resize\": [\n         \"self\"\n      ],\n      \"test_resize_as\": [\n         \"self\"\n      ],\n      \"test_saddmm\": [\n         \"self\"\n      ],\n      \"test_same_gpu\": [\n         \"self\"\n      ],\n      \"test_scalar\": [\n         \"self\"\n      ],\n      \"test_select\": [\n         \"self\"\n      ],\n      \"test_shared\": [\n         \"self\"\n      ],\n      \"test_spadd\": [\n         \"self\"\n      ],\n      \"test_spadd_hybrid\": [\n         \"self\"\n      ],\n      \"test_sparse_add_coalesce\": [\n         \"self\"\n      ],\n      \"test_sparse_add_out_bfloat16\": [\n         \"self\"\n      ],\n      \"test_sparse_addmm\": [\n         \"self\"\n      ],\n      \"test_sparse_mask\": [\n         \"self\"\n      ],\n      \"test_sparse_mask_hybrid\": [\n         \"self\"\n      ],\n      \"test_sparse_mm\": [\n         \"self\"\n      ],\n      \"test_sparse_sum\": [\n         \"self\"\n      ],\n      \"test_sparse_to_numpy\": [\n         \"self\"\n      ],\n      \"test_storage_not_null\": [\n         \"self\"\n      ],\n      \"test_t_empty\": [\n         \"self\"\n      ],\n      \"test_to_dense\": [\n         \"self\"\n      ],\n      \"test_to_dense_hybrid\": [\n         \"self\"\n      ],\n      \"test_to_sparse\": [\n         \"self\"\n      ],\n      \"test_transpose\": [\n         \"self\"\n      ],\n      \"test_true_divide_by_sparse_error\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_zeros\": [\n         \"self\"\n      ],\n      \"test_zeros_like\": [\n         \"self\"\n      ]\n   },\n   \"TestSparseGradient\": {\n      \"test_sparse_gradient\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"K\",\n         \"sparsity\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSparseGradientsAccumulation\": {\n      \"testSparseAccumulationWithIndicesAndValues\": [\n         \"self\"\n      ],\n      \"testSparseAccumulationWithValues\": [\n         \"self\"\n      ],\n      \"testSparseGradientToDense\": [\n         \"self\"\n      ]\n   },\n   \"TestSparseMatrixReshapeOp\": {\n      \"test_basic_reshape\": [\n         \"self\"\n      ],\n      \"test_missing_dim\": [\n         \"self\"\n      ],\n      \"test_sparse_reshape_mm\": [\n         \"self\"\n      ],\n      \"test_stride_only\": [\n         \"self\"\n      ]\n   },\n   \"TestSparseNormalize\": {\n      \"ref_normalize\": [\n         \"param_in\",\n         \"use_max_norm\",\n         \"norm\"\n      ],\n      \"test_sparse_normalize\": [\n         \"self\",\n         \"inputs\",\n         \"use_max_norm\",\n         \"norm\",\n         \"data_strategy\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSparseOneOff\": {\n      \"test_cuda_from_cpu\": [\n         \"self\"\n      ],\n      \"test_cuda_sparse_cpu_dense_add\": [\n         \"self\"\n      ]\n   },\n   \"TestSparseRAdam\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestSparseToDense\": {\n      \"test_sparse_to_dense\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_invalid_inputs\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_with_data_to_infer_dim\": [\n         \"self\"\n      ]\n   },\n   \"TestSparseToDenseMask\": {\n      \"test_sparse_to_dense_mask_empty_lengths\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_float\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_invalid_inputs\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_no_lengths\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_presence_mask\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_string\": [\n         \"self\"\n      ],\n      \"test_sparse_to_dense_mask_subtensor\": [\n         \"self\"\n      ]\n   },\n   \"TestSpatialBN\": {\n      \"test_spatial_bn_multi_batch\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"epsilon\",\n         \"momentum\",\n         \"order\",\n         \"num_batches\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatial_bn_multi_batch_grad\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"epsilon\",\n         \"order\",\n         \"num_batches\",\n         \"in_place\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_brew_wrapper\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"epsilon\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_test_mode\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"inplace\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_test_mode_1d\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"inplace\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_test_mode_3d\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"inplace\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_train_mode\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"momentum\",\n         \"inplace\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_train_mode_gradient_check\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"momentum\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_spatialbn_train_mode_gradient_check_1d\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"order\",\n         \"epsilon\",\n         \"momentum\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSpecializedSegmentOps\": {\n      \"test_sparse_lengths_sum_8BitsRowwiseOp_cpu\": [\n         \"self\",\n         \"batchsize\",\n         \"blocksize\",\n         \"normalize_by_lengths\",\n         \"empty_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_sum_8BitsRowwiseOp_cpu_invalid_index\": [\n         \"self\",\n         \"batchsize\",\n         \"blocksize\",\n         \"normalize_by_lengths\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_sum_cpu\": [\n         \"self\",\n         \"batchsize\",\n         \"fptype\",\n         \"fp16asint\",\n         \"blocksize\",\n         \"normalize_by_lengths\",\n         \"empty_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_weightedsum_8BitsRowwiseOp_cpu\": [\n         \"self\",\n         \"batchsize\",\n         \"blocksize\",\n         \"normalize_by_lengths\",\n         \"empty_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_sparse_lengths_weightedsum_cpu\": [\n         \"self\",\n         \"batchsize\",\n         \"fptype\",\n         \"fp16asint\",\n         \"blocksize\",\n         \"empty_indices\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSpeedFloatToFusedRandRowwiseQuantized\": {\n      \"test_speed_of_rand_quantization\": [\n         \"self\",\n         \"bitwidth_\",\n         \"random_\",\n         \"data_shape_\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestSquareRootDivide\": {\n      \"test_square_root_divide\": [\n         \"self\",\n         \"data_and_scale\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestStaticQuantizedModule\": {\n      \"_test_conv_api_impl\": [\n         \"self\",\n         \"module_name\",\n         \"qconv_module\",\n         \"conv_module\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"input_feature_map_size\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_fused\",\n         \"use_channelwise\"\n      ],\n      \"test_batch_norm2d\": [\n         \"self\"\n      ],\n      \"test_batch_norm3d\": [\n         \"self\"\n      ],\n      \"test_conv2d_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"H\",\n         \"W\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_fused\",\n         \"use_channelwise\"\n      ],\n      \"test_conv3d_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"D\",\n         \"H\",\n         \"W\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_d\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_d\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_d\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\",\n         \"use_fused\"\n      ],\n      \"test_layer_norm\": [\n         \"self\"\n      ],\n      \"test_linear_api\": [\n         \"self\",\n         \"batch_size\",\n         \"in_features\",\n         \"out_features\",\n         \"use_bias\",\n         \"use_fused\",\n         \"per_channel\"\n      ],\n      \"test_pool_api\": [\n         \"self\"\n      ],\n      \"test_quant_dequant_api\": [\n         \"self\"\n      ],\n      \"test_relu\": [\n         \"self\"\n      ]\n   },\n   \"TestStorm\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestStringDataLoader\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_shuffle_pin_memory\": [\n         \"self\"\n      ]\n   },\n   \"TestStringOps\": {\n      \"test_string_ends_with\": [\n         \"self\",\n         \"strings\"\n      ],\n      \"test_string_prefix\": [\n         \"self\",\n         \"strings\"\n      ],\n      \"test_string_starts_with\": [\n         \"self\",\n         \"strings\"\n      ],\n      \"test_string_suffix\": [\n         \"self\",\n         \"strings\"\n      ]\n   },\n   \"TestSuite\": {\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"append\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"print_report\": [\n         \"self\"\n      ]\n   },\n   \"TestSum\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testSum\": [\n         \"self\"\n      ]\n   },\n   \"TestTTContraction\": {\n      \"test_tt_contraction\": [\n         \"self\",\n         \"D\",\n         \"K\",\n         \"M\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTTPad\": {\n      \"test_tt_pad\": [\n         \"self\",\n         \"K\",\n         \"M\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTTSVD\": {\n      \"test_full_tt_svd\": [\n         \"self\"\n      ]\n   },\n   \"TestTanh\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testTanh\": [\n         \"self\"\n      ]\n   },\n   \"TestTask\": {\n      \"testRepr\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardEmbedding\": {\n      \"test_embedding\": [\n         \"self\"\n      ],\n      \"test_embedding_64\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardFigure\": {\n      \"test_figure\": [\n         \"self\"\n      ],\n      \"test_figure_list\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardNumpy\": {\n      \"test_caffe2_np\": [\n         \"self\"\n      ],\n      \"test_caffe2_np_expect_fail\": [\n         \"self\"\n      ],\n      \"test_caffe2_simple_cnnmodel\": [\n         \"self\"\n      ],\n      \"test_caffe2_simple_model\": [\n         \"self\"\n      ],\n      \"test_pytorch_np_expect_fail\": [\n         \"self\"\n      ],\n      \"test_scalar\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardPyTorchNumpy\": {\n      \"test_pytorch_autograd_np\": [\n         \"self\"\n      ],\n      \"test_pytorch_histogram\": [\n         \"self\"\n      ],\n      \"test_pytorch_histogram_raw\": [\n         \"self\"\n      ],\n      \"test_pytorch_np\": [\n         \"self\"\n      ],\n      \"test_pytorch_write\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardPytorchGraph\": {\n      \"test_mlp_graph\": [\n         \"self\"\n      ],\n      \"test_pytorch_graph\": [\n         \"self\"\n      ],\n      \"test_torchvision_smoke\": [\n         \"self\"\n      ],\n      \"test_wrong_input_size\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardSummary\": {\n      \"test_audio\": [\n         \"self\"\n      ],\n      \"test_custom_scalars\": [\n         \"self\"\n      ],\n      \"test_empty_input\": [\n         \"self\"\n      ],\n      \"test_float32_image\": [\n         \"self\"\n      ],\n      \"test_histogram_auto\": [\n         \"self\"\n      ],\n      \"test_histogram_doane\": [\n         \"self\"\n      ],\n      \"test_histogram_fd\": [\n         \"self\"\n      ],\n      \"test_hparams_smoke\": [\n         \"self\"\n      ],\n      \"test_hparams_wrong_parameter\": [\n         \"self\"\n      ],\n      \"test_image_with_3_channel_batched\": [\n         \"self\"\n      ],\n      \"test_image_with_boxes\": [\n         \"self\"\n      ],\n      \"test_image_with_one_channel\": [\n         \"self\"\n      ],\n      \"test_image_with_one_channel_batched\": [\n         \"self\"\n      ],\n      \"test_image_without_channel\": [\n         \"self\"\n      ],\n      \"test_list_input\": [\n         \"self\"\n      ],\n      \"test_mesh\": [\n         \"self\"\n      ],\n      \"test_text\": [\n         \"self\"\n      ],\n      \"test_uint8_image\": [\n         \"self\"\n      ],\n      \"test_video\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardSummaryWriter\": {\n      \"test_pathlib\": [\n         \"self\"\n      ],\n      \"test_summary_writer_close\": [\n         \"self\"\n      ],\n      \"test_summary_writer_ctx\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardUtils\": {\n      \"test_convert_to_HWC_dtype_remains_same\": [\n         \"self\"\n      ],\n      \"test_numpy_vid_uint8\": [\n         \"self\"\n      ],\n      \"test_prepare_video\": [\n         \"self\"\n      ],\n      \"test_to_HWC\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBoardWriter\": {\n      \"test_writer\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorBuiltins\": {\n      \"test_tensor_properties\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorDataset\": {\n      \"test_getitem\": [\n         \"self\"\n      ],\n      \"test_getitem_1d\": [\n         \"self\"\n      ],\n      \"test_len\": [\n         \"self\"\n      ],\n      \"test_many_tensors\": [\n         \"self\"\n      ],\n      \"test_single_tensor\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorDeviceOps\": {\n      \"_test_svd_helper\": [\n         \"self\",\n         \"shape\",\n         \"some\",\n         \"col_maj\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_square\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_square_col_maj\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_tall_all\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_tall_all_col_maj\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_tall_some\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_tall_some_col_maj\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ]\n   },\n   \"TestTensorExprFuser\": {\n      \"_test_cat\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_add_const_rhs\": [\n         \"self\"\n      ],\n      \"test_add_sub\": [\n         \"self\"\n      ],\n      \"test_all_combos\": [\n         \"self\"\n      ],\n      \"test_alpha\": [\n         \"self\"\n      ],\n      \"test_binary_ops\": [\n         \"self\"\n      ],\n      \"test_bitwise_ops\": [\n         \"self\"\n      ],\n      \"test_broadcast\": [\n         \"self\"\n      ],\n      \"test_broadcast_2\": [\n         \"self\"\n      ],\n      \"test_broadcast_big2\": [\n         \"self\"\n      ],\n      \"test_broadcast_cuda\": [\n         \"self\"\n      ],\n      \"test_cat_cpu\": [\n         \"self\"\n      ],\n      \"test_cat_cuda\": [\n         \"self\"\n      ],\n      \"test_char\": [\n         \"self\"\n      ],\n      \"test_chunk\": [\n         \"self\"\n      ],\n      \"test_clamp\": [\n         \"self\"\n      ],\n      \"test_constant\": [\n         \"self\"\n      ],\n      \"test_double\": [\n         \"self\"\n      ],\n      \"test_dynamic_shape\": [\n         \"self\"\n      ],\n      \"test_easy\": [\n         \"self\"\n      ],\n      \"test_eq\": [\n         \"self\"\n      ],\n      \"test_four_arg\": [\n         \"self\"\n      ],\n      \"test_ge\": [\n         \"self\"\n      ],\n      \"test_gt\": [\n         \"self\"\n      ],\n      \"test_guard_fails\": [\n         \"self\"\n      ],\n      \"test_int64_promotion\": [\n         \"self\"\n      ],\n      \"test_int_output\": [\n         \"self\"\n      ],\n      \"test_le\": [\n         \"self\"\n      ],\n      \"test_lt\": [\n         \"self\"\n      ],\n      \"test_min_max\": [\n         \"self\"\n      ],\n      \"test_multi_rand\": [\n         \"self\"\n      ],\n      \"test_multioutput\": [\n         \"self\"\n      ],\n      \"test_nans\": [\n         \"self\"\n      ],\n      \"test_ne\": [\n         \"self\"\n      ],\n      \"test_promotion\": [\n         \"self\"\n      ],\n      \"test_rand_like\": [\n         \"self\"\n      ],\n      \"test_rank_two\": [\n         \"self\"\n      ],\n      \"test_relu\": [\n         \"self\"\n      ],\n      \"test_remainder\": [\n         \"self\"\n      ],\n      \"test_reps\": [\n         \"self\"\n      ],\n      \"test_scalar\": [\n         \"self\"\n      ],\n      \"test_short\": [\n         \"self\"\n      ],\n      \"test_slice\": [\n         \"self\"\n      ],\n      \"test_sliced_stride\": [\n         \"self\"\n      ],\n      \"test_three_arg\": [\n         \"self\"\n      ],\n      \"test_three_arg_cuda\": [\n         \"self\"\n      ],\n      \"test_transpose\": [\n         \"self\"\n      ],\n      \"test_unary_ops\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_unused\": [\n         \"self\"\n      ],\n      \"test_where\": [\n         \"self\"\n      ]\n   },\n   \"TestTensorPackOps\": {\n      \"pack_segments_ref\": [\n         \"self\",\n         \"return_presence_mask\",\n         \"max_length\"\n      ],\n      \"test_out_of_bounds\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pack_ops\": [\n         \"self\",\n         \"num_seq\",\n         \"cell_size\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pack_ops_str\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pack_with_max_length_ops\": [\n         \"self\",\n         \"num_seq\",\n         \"cell_size\",\n         \"max_length_buffer\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_pad_minf\": [\n         \"self\"\n      ],\n      \"test_pad_no_minf\": [\n         \"self\"\n      ],\n      \"test_presence_mask\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_presence_mask_empty\": [\n         \"self\"\n      ],\n      \"test_under_bounds\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTextFileReader\": {\n      \"test_text_file_reader\": [\n         \"self\"\n      ]\n   },\n   \"TestThresholdedRelu\": {\n      \"fix_input\": [\n         \"input\"\n      ],\n      \"test_thresholded_relu_1\": [\n         \"self\",\n         \"input\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_thresholded_relu_2\": [\n         \"self\",\n         \"input\",\n         \"alpha\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_thresholded_relu_3\": [\n         \"self\",\n         \"input\",\n         \"alpha\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestThroughputBenchmark\": {\n      \"linear_test\": [\n         \"self\",\n         \"Module\",\n         \"profiler_output_path\"\n      ],\n      \"test_module\": [\n         \"self\"\n      ],\n      \"test_profiling\": [\n         \"self\"\n      ],\n      \"test_script_module\": [\n         \"self\"\n      ]\n   },\n   \"TestTile\": {\n      \"test_tile\": [\n         \"self\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"tiles\",\n         \"axis\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_tile_grad\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"tiles\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_tilewinput\": [\n         \"self\",\n         \"M\",\n         \"K\",\n         \"N\",\n         \"tiles\",\n         \"axis\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTopK\": {\n      \"test_top_k\": [\n         \"self\",\n         \"X\",\n         \"flatten_indices\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_1\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"k\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_2\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"k\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_3\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"k\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_4\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_5\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_6\": [\n         \"self\",\n         \"bs\",\n         \"n\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_axis\": [\n         \"self\",\n         \"X\",\n         \"k\",\n         \"axis\",\n         \"flatten_indices\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_top_k_grad\": [\n         \"self\",\n         \"X\",\n         \"k\",\n         \"axis\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"top_k_ref\": [\n         \"self\",\n         \"X\",\n         \"k\",\n         \"flatten_indices\",\n         \"axis\"\n      ]\n   },\n   \"TestTorch\": {},\n   \"TestTorchDeviceType\": {\n      \"_brute_cdist\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"p\"\n      ],\n      \"_brute_pdist\": [\n         \"self\",\n         \"inp\",\n         \"p\"\n      ],\n      \"_float_to_int_conversion_helper\": [\n         \"self\",\n         \"vals\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_isclose_helper\": [\n         \"self\",\n         \"tests\",\n         \"device\",\n         \"dtype\",\n         \"equal_nan\",\n         \"atol\",\n         \"rtol\"\n      ],\n      \"_np_compare\": [\n         \"self\",\n         \"fn_name\",\n         \"vals\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_pdist_single\": [\n         \"self\",\n         \"shape\",\n         \"device\",\n         \"p\",\n         \"dtype\",\n         \"trans\",\n         \"grad_check\"\n      ],\n      \"_select_broadcastable_dims\": [\n         \"self\",\n         \"dims_full\"\n      ],\n      \"_test_cop\": [\n         \"self\",\n         \"torchfn\",\n         \"mathfn\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"_test_lobpcg_method\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"method\"\n      ],\n      \"_test_logical\": [\n         \"self\",\n         \"device\",\n         \"op\",\n         \"a_\",\n         \"b_\",\n         \"expected_res_\"\n      ],\n      \"_test_memory_format_transformations\": [\n         \"self\",\n         \"device\",\n         \"input_generator_fn\",\n         \"transformation_fn\",\n         \"memory_format\",\n         \"compare_data\",\n         \"default_is_preserve\"\n      ],\n      \"_test_pow\": [\n         \"self\",\n         \"base\",\n         \"exponent\",\n         \"np_exponent\"\n      ],\n      \"_test_unique_scalar_empty\": [\n         \"self\",\n         \"dtype\",\n         \"device\",\n         \"f\"\n      ],\n      \"_test_unique_with_expects\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"f\",\n         \"x\",\n         \"expected_unique\",\n         \"expected_inverse\",\n         \"expected_counts\",\n         \"additional_shape\"\n      ],\n      \"binary_check_input_output_mem_overlap\": [\n         \"self\",\n         \"op\",\n         \"device\",\n         \"expected_failure\"\n      ],\n      \"check_internal_mem_overlap\": [\n         \"self\",\n         \"inplace_op\",\n         \"num_inputs\",\n         \"dtype\",\n         \"device\",\n         \"expected_failure\"\n      ],\n      \"cholesky_solve_test_helper\": [\n         \"self\",\n         \"A_dims\",\n         \"b_dims\",\n         \"upper\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"lu_solve_test_helper\": [\n         \"self\",\n         \"A_dims\",\n         \"b_dims\",\n         \"pivot\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"solve_test_helper\": [\n         \"self\",\n         \"A_dims\",\n         \"b_dims\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"ternary_check_input_output_mem_overlap\": [\n         \"self\",\n         \"op\",\n         \"device\",\n         \"expected_failure\"\n      ],\n      \"test_abs_big_number\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_abs_signed_zero\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_absolute\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_add\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_add_with_tail\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_addbmm\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_addcdiv\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_addcmul\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_addmm\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_addmm_sizes\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_addmv\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_addmv_rowmajor_colmajor_incx_incy_lda\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_addr\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_advancedindex\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_advancedindex_big\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_all_any_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_argminmax_large_axis\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_atan2\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_atan2_edgecases\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_baddbmm\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_batch_istft\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_binary_op_mem_overlap\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_bincount\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bitwise_and\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bitwise_not\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bitwise_or\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bitwise_xor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_blas_alpha_beta_empty\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_blas_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_blas_mv_large_input\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_blas_nan_out\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_block_diag\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_block_diag_scipy\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bmm\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_bool_tensor_comparison_ops\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_bool_tensor_value_change\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broadcast\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broadcast_batched_matmul\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broadcast_fused_matmul\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_broadcast_tensors\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_bucketization\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cat_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_bad_input_sizes\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_big\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_different_devices\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_cat_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_empty_legacy\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_out\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_out_channels_last\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_preserve_channels_last\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_scalars\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_large_batch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_non_contiguous\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_non_contiguous_batch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_norm\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdist_norm_batch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cdiv\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_ceil_out_mismatch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cfmod\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_chain_matmul\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_batched_many_batches\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_inverse\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_solve\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_solve_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_solve_batched_broadcasting\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_solve_batched_many_batches\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cholesky_solve_batched_non_contiguous\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_clamp\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_clone_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_clone_zero_stride_dim\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cmul\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_complex_assert_raises\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_complex_type_conversions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_complex_unsupported\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_contiguous\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_conv_transposed_backward_agnostic_to_memory_format\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_copy_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_copy_mem_overlap\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cpow\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cpp_warnings_have_python_context\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cremainder\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cross\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_cross_with_and_without_dim\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_csub\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_ctor_with_numpy_array\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cummax_cummin\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cumprod\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cumsum\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_deepcopy\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_deepcopy_scalar\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_det_logdet_slogdet\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_det_logdet_slogdet_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_device_guard\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_diag\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_diag_embed\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_diagflat\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_diagonal\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_diagonal_multidim\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_dim_arg_reduction_scalar\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_dim_function_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_dim_reduction\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_dist\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_div\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_div_zero\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_dlpack_conversion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_dot\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_eig\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_einsum\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_empty_strided\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_empty_tensor_props\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_erfinv\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_exp_slow\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_exponential\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_eye\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_fft_input_modification\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_fill_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_flip\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_float_scalar_pow_float_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_float_to_int_conversion_finite\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_float_to_int_conversion_nonfinite\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_floor_divide_out\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_floor_divide_scalar\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_floor_divide_tensor\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_fmod\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_full_deprecation_warning\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_full_inference\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_full_like_inference\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_full_out\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_geometric\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_geqrf\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ger\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_half_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_hardshrink\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_hardshrink_edge_cases\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_hardsigmoid\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_hardswish\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_has_storage_numpy\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_histc\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_copy\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_fill\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_index_select\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_pow\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_tensor_pow_neg_ints\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inverse\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inverse_many_batches\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_is_set_to\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_is_signed\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_isclose_atol_rtol_greater_than_zero\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isclose_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_isclose_complex\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isclose_float\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isclose_integer\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isfinite_isinf_isnan\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isfinite_isinf_isnan_complex\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isfinite_isinf_isnan_int\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_isfinite_type\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_isinf_type\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_istft_linearity\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_istft_of_sine\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_istft_round_trip_simple_cases\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_istft_round_trip_various_params\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_istft_throws\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_kthvalue\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lapack_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_lerp\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_linspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_linspace_vs_numpy\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lobpcg_basic\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lobpcg_ortho\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lobpcg_scipy\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lobpcg_torchscript\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_log_normal\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_logical\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_all\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_and\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_any\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_not\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_or\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_xor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logical_xor_with_nontrivial_alignment\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_logspace\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_logspace_vs_numpy\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_long_tensor_pow_floats\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_lstsq\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_lu_solve\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu_solve_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu_solve_batched_broadcasting\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu_solve_batched_many_batches\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu_solve_batched_non_contiguous\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lu_unpack\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_masked_fill_bool_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_masked_scatter_bool_tensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_masked_select\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_matrix_power\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_matrix_rank\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_max_mixed_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_max_with_inf\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_memory_format_clone\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_consistency\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_cpu_and_cuda_ops\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_empty_like\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_factory_like_functions_preserve\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_operators\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_preserved_after_permute\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_resize_\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_resize_as\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_to\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_type\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_memory_format_type_shortcuts\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_min_max_binary_op_nan\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_min_mixed_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_min_with_inf\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_mm\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_mul\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_mul_intertype_scalar\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_multinomial\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_multinomial_alias\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multinomial_constraints\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multinomial_device_constrain\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_multinomial_gpu_device_constrain\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_narrow_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_neg\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nonzero\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nonzero_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nonzero_non_diff\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_norm\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_normal\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_nuclear_norm_axes_small_brute_force\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_nuclear_norm_exceptions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pairwise_distance_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pca_lowrank\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pdist_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pdist_norm_backward\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pdist_norm_forward\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pdist_norm_large\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pin_memory_from_constructor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pinverse\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_pow\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_pow_scalar_overloads_mem_overlap\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_prod\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_prod_gpu\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_put_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_qr\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_rand\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_randn\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_random\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_random_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_random_default\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_random_from_to\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_random_from_to_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_random_full_range\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_random_neg_values\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_random_to\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_randperm\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_range_factories_64bit_indexing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_rdiv\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_reciprocal\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_reciprocal_complex\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_reciprocal_complex_extremal\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_reduction_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reduction_split\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reduction_vectorized_corner\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_remainder\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_remainder_edge_cases\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_remainder_overflow\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_renorm_ps\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_resize_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_resize_as_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_resize_as_preserves_strides\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reverse_binary_ops_multiple_device\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_roll\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_rot90\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_rpow\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scalar_check\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scatter_add_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scatter_add_to_large_input\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scatter_bool\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_scatter_to_large_input\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_serialization\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_sigmoid\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_sign\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_signal_window_functions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_signed_shift\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve_batched_broadcasting\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve_batched_many_batches\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_solve_batched_non_contiguous\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_std_mean\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_std_mean_all_dims\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_std_mean_some_dims\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_stft\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_storage\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_storage_device\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_storage_multigpu\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_sub\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_sub_typing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sum_all\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_sum_out\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_svd_lowrank\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_svd_no_singularvectors\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_symeig\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_take_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_tensor_factories_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_tensor_factory_gpu_type\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_tensor_factory_gpu_type_inference\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_tensor_pow_tensor\": [\n         \"self\",\n         \"dev\"\n      ],\n      \"test_tensor_set_errors_multigpu\": [\n         \"self\",\n         \"devices\"\n      ],\n      \"test_tensor_shape_empty\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_tensordot\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_ternary_op_mem_overlap\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_threshold\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_topk_integral\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_topk_noncontiguous_gpu\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_topk_nonfinite\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_trapz\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_triangular_solve\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_triangular_solve_batched\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_triangular_solve_batched_broadcasting\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_triangular_solve_batched_many_batches\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_triu_tril\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unary_out_op_mem_overlap\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_unfold_all_devices_and_dtypes\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unfold_scalars\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_uniform_from_to\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_unique\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_unique_consecutive\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_unique_dim\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_vander\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_vander_types\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_var_mean\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_var_mean_all_dims\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_var_mean_some_dims\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_var_stability\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_var_unbiased\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_view_all_dtypes_and_devices\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_zeros_like\": [\n         \"self\",\n         \"device\"\n      ],\n      \"triangular_solve_test_helper\": [\n         \"self\",\n         \"A_dims\",\n         \"b_dims\",\n         \"upper\",\n         \"unitriangular\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"unary_check_input_output_mem_overlap\": [\n         \"self\",\n         \"data\",\n         \"sz\",\n         \"op\",\n         \"expected_failure\"\n      ]\n   },\n   \"TestTorchFunctionOverride\": {\n      \"test_mean_semantics\": [\n         \"self\"\n      ],\n      \"test_mm_semantics\": [\n         \"self\"\n      ],\n      \"test_precedence_semantics\": [\n         \"self\"\n      ],\n      \"test_user_implementation_raises\": [\n         \"self\"\n      ]\n   },\n   \"TestTorchMathOps\": {},\n   \"TestToyRegression\": {\n      \"testToyRegression\": [\n         \"self\"\n      ]\n   },\n   \"TestTransform\": {\n      \"test_apply_transform_if_faster\": [\n         \"self\",\n         \"value\"\n      ],\n      \"test_registry_invalid\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ],\n      \"test_simple_transform\": [\n         \"self\",\n         \"input_dim\",\n         \"output_dim\",\n         \"batch_size\"\n      ]\n   },\n   \"TestTransformations\": {\n      \"_add_nnpack\": [\n         \"self\",\n         \"net\"\n      ],\n      \"_base_test_net\": [\n         \"self\"\n      ],\n      \"_fuse_nnpack_convrelu\": [\n         \"self\",\n         \"net\",\n         \"expected_result_num_ops\",\n         \"expected_activation_arg\"\n      ],\n      \"test_converterDontEnforceUnusedInputs\": [\n         \"self\"\n      ],\n      \"test_converterDontEnforceUnusedOutputs\": [\n         \"self\"\n      ],\n      \"test_noFuseNNPACKConvRelu\": [\n         \"self\"\n      ],\n      \"test_transformer_AddNNPACK\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseConv3DBN\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"kt\",\n         \"kh\",\n         \"kw\",\n         \"seed\",\n         \"epsilon\"\n      ],\n      \"test_transformer_FuseConvBN\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"seed\",\n         \"order\",\n         \"epsilon\"\n      ],\n      \"test_transformer_FuseConvBNNoConvBias\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"seed\",\n         \"order\",\n         \"epsilon\"\n      ],\n      \"test_transformer_FuseConvBNNoConvBiasDuplicatedName\": [\n         \"self\",\n         \"size\",\n         \"input_channels\",\n         \"seed\",\n         \"order\",\n         \"epsilon\"\n      ],\n      \"test_transformer_FuseNNPACKConvRelu\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseNNPACKConvReluFollowedByMultipleInputOp\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseNNPACKConvReluInplaceFollowedByMultipleInputOp\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseNNPACKConvReluInplaceRelu\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseNNPACKConvReluNoInplace\": [\n         \"self\"\n      ],\n      \"test_transformer_FuseNNPACKConvReluPingPongNaming\": [\n         \"self\"\n      ]\n   },\n   \"TestTransforms\": {\n      \"_generate_data\": [\n         \"self\",\n         \"transform\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_equality\": [\n         \"self\"\n      ],\n      \"test_forward_inverse_cache\": [\n         \"self\"\n      ],\n      \"test_forward_inverse_no_cache\": [\n         \"self\"\n      ],\n      \"test_inv_inv\": [\n         \"self\"\n      ],\n      \"test_jacobian_shape\": [\n         \"self\"\n      ],\n      \"test_jit_fwd\": [\n         \"self\"\n      ],\n      \"test_jit_inv\": [\n         \"self\"\n      ],\n      \"test_jit_jacobian\": [\n         \"self\"\n      ],\n      \"test_transform_shapes\": [\n         \"self\"\n      ],\n      \"test_transformed_distribution_shapes\": [\n         \"self\"\n      ],\n      \"test_univariate_forward_jacobian\": [\n         \"self\"\n      ],\n      \"test_univariate_inverse_jacobian\": [\n         \"self\"\n      ],\n      \"test_with_cache\": [\n         \"self\"\n      ]\n   },\n   \"TestTransposeOp\": {\n      \"test_transpose\": [\n         \"self\",\n         \"X\",\n         \"use_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_transpose_cudnn\": [\n         \"self\",\n         \"X\",\n         \"use_axes\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_transpose_large_matrix\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTrigonometricOp\": {\n      \"assertTrigonometricChecks\": [\n         \"self\",\n         \"op_name\",\n         \"input\",\n         \"reference\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_acos\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_asin\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_atan\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_tan\": [\n         \"self\",\n         \"X\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestTypeHints\": {\n      \"test_doc_examples\": [\n         \"self\"\n      ],\n      \"test_run_mypy\": [\n         \"self\"\n      ],\n      \"test_type_hint_examples\": [\n         \"self\"\n      ]\n   },\n   \"TestTypePromotion\": {\n      \"_get_precision\": [\n         \"self\",\n         \"dtype\",\n         \"coalesced\"\n      ],\n      \"_get_test_tensor\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"remove_zeros\"\n      ],\n      \"_run_all_tests_for_sparse_op\": [\n         \"self\",\n         \"op_name\",\n         \"device\"\n      ],\n      \"_test_sparse_op\": [\n         \"self\",\n         \"op_name\",\n         \"inplace\",\n         \"dtype1\",\n         \"dtype2\",\n         \"device\",\n         \"coalesced\"\n      ],\n      \"_test_sparse_op_input_tensors\": [\n         \"self\",\n         \"device\",\n         \"dtype\",\n         \"coalesced\",\n         \"zeros\"\n      ],\n      \"test_abs_angle_complex_to_float\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_add_wrapped\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_alpha_mismatch\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_alternate_result\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_booleans\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_can_cast\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_different_dtypes\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_invalid_dtype_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_cat_out_different_dtypes\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_comparison_ops_with_type_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_complex_assertraises\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_complex_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_complex_scalar_mult_tensor_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_create_bool_tensors\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_float_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_from_issue\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_half\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_indexing\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_inplace\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_int_to_float\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_integer_div_deprecated\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_lt_with_type_promotion\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_many_promotions\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_mixed_type_backward\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_non_promoting_ops\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_numpy_array_binary_ufunc_promotion\": [\n         \"self\",\n         \"device\",\n         \"dtypes\"\n      ],\n      \"test_promote_self\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_promote_types\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_result_type\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_add\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_div\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_mul\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_sub\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_sparse_true_divide\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_transpose\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_true_divide\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_true_divide_inplace\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_true_divide_out\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"test_unsinged\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"TestTypeSharing\": {\n      \"assertDifferentType\": [\n         \"self\",\n         \"m1\",\n         \"m2\"\n      ],\n      \"assertSameType\": [\n         \"self\",\n         \"m1\",\n         \"m2\"\n      ],\n      \"test_assign_python_attr\": [\n         \"self\"\n      ],\n      \"test_basic\": [\n         \"self\"\n      ],\n      \"test_builtin_function_different\": [\n         \"self\"\n      ],\n      \"test_builtin_function_same\": [\n         \"self\"\n      ],\n      \"test_constants\": [\n         \"self\"\n      ],\n      \"test_diff_attr_values\": [\n         \"self\"\n      ],\n      \"test_failed_attribute_compilation\": [\n         \"self\"\n      ],\n      \"test_ignored_fns\": [\n         \"self\"\n      ],\n      \"test_linear\": [\n         \"self\"\n      ],\n      \"test_loaded_modules_work\": [\n         \"self\"\n      ],\n      \"test_module_dict_same_type_different_name\": [\n         \"self\"\n      ],\n      \"test_mutate_attr_value\": [\n         \"self\"\n      ],\n      \"test_param_vs_attribute\": [\n         \"self\"\n      ],\n      \"test_python_function_attribute_different\": [\n         \"self\"\n      ],\n      \"test_python_function_attribute_same\": [\n         \"self\"\n      ],\n      \"test_same_but_different_classes\": [\n         \"self\"\n      ],\n      \"test_script_function_attribute_different\": [\n         \"self\"\n      ],\n      \"test_script_function_attribute_same\": [\n         \"self\"\n      ],\n      \"test_script_module_containing_traced_module\": [\n         \"self\"\n      ],\n      \"test_submodules\": [\n         \"self\"\n      ],\n      \"test_tracing_gives_different_types\": [\n         \"self\"\n      ]\n   },\n   \"TestUncoalescedSparse\": {\n      \"setUp\": [\n         \"self\"\n      ]\n   },\n   \"TestUniqueOps\": {\n      \"test_unique_op\": [\n         \"self\",\n         \"X\",\n         \"return_remapping\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUniqueUniformFillOp\": {\n      \"test_unique_uniform_int_fill\": [\n         \"self\",\n         \"r\",\n         \"avoid\",\n         \"dtypes\",\n         \"s\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUnmaskOp\": {\n      \"test\": [\n         \"self\",\n         \"N\",\n         \"dtype\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUnsupportedOps\": {\n      \"test_factory_ops_requires_grad_fail\": [\n         \"self\"\n      ],\n      \"test_init_ops\": [\n         \"self\"\n      ],\n      \"test_ops_bound_in_functional\": [\n         \"self\"\n      ],\n      \"test_tensor_options_behavior_mismatch\": [\n         \"self\"\n      ]\n   },\n   \"TestUpSample\": {\n      \"test_upsample\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_upsample_grad\": [\n         \"self\",\n         \"height_scale\",\n         \"width_scale\",\n         \"height\",\n         \"width\",\n         \"num_channels\",\n         \"batch_size\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUpsampleNearestOp\": {\n      \"test_upsample_nearest_op\": [\n         \"self\",\n         \"N\",\n         \"H\",\n         \"W\",\n         \"scale\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUtilityFuns\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_constant_fold_add\": [\n         \"self\"\n      ],\n      \"test_constant_fold_concat\": [\n         \"self\"\n      ],\n      \"test_constant_fold_div\": [\n         \"self\"\n      ],\n      \"test_constant_fold_gather\": [\n         \"self\"\n      ],\n      \"test_constant_fold_lstm\": [\n         \"self\"\n      ],\n      \"test_constant_fold_mul\": [\n         \"self\"\n      ],\n      \"test_constant_fold_reduceL1\": [\n         \"self\"\n      ],\n      \"test_constant_fold_reduceL2\": [\n         \"self\"\n      ],\n      \"test_constant_fold_reshape\": [\n         \"self\"\n      ],\n      \"test_constant_fold_shape\": [\n         \"self\"\n      ],\n      \"test_constant_fold_slice\": [\n         \"self\"\n      ],\n      \"test_constant_fold_slice_index_exceeds_dim\": [\n         \"self\"\n      ],\n      \"test_constant_fold_slice_negative_index\": [\n         \"self\"\n      ],\n      \"test_constant_fold_sqrt\": [\n         \"self\"\n      ],\n      \"test_constant_fold_sub\": [\n         \"self\"\n      ],\n      \"test_constant_fold_transpose\": [\n         \"self\"\n      ],\n      \"test_constant_fold_transpose_matmul\": [\n         \"self\"\n      ],\n      \"test_constant_fold_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_dropout_training\": [\n         \"self\"\n      ],\n      \"test_error_on_data_parallel\": [\n         \"self\"\n      ],\n      \"test_export_mode\": [\n         \"self\"\n      ],\n      \"test_is_in_onnx_export\": [\n         \"self\"\n      ],\n      \"test_strip_doc_string\": [\n         \"self\"\n      ],\n      \"test_validate_dynamic_axes_invalid_input_output_name\": [\n         \"self\"\n      ]\n   },\n   \"TestUtilityOps\": {\n      \"test_alias_op\": [\n         \"self\"\n      ],\n      \"test_elementwise_max\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_max_grad\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_min\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_elementwise_min_grad\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_gather\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_lengths_to_ranges\": [\n         \"self\",\n         \"inputs\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_nan_check\": [\n         \"self\",\n         \"m\",\n         \"n\",\n         \"o\",\n         \"nans\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_range\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_resize_like\": [\n         \"self\",\n         \"ndims\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_size_op\": [\n         \"self\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_slice\": [\n         \"self\",\n         \"X\",\n         \"args\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_transpose\": [\n         \"self\",\n         \"dtype\",\n         \"ndims\",\n         \"seed\",\n         \"null_axes\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestUtils\": {\n      \"testArgsToDict\": [\n         \"self\"\n      ],\n      \"testBuildUniqueMutexIter\": [\n         \"self\"\n      ]\n   },\n   \"TestValidation\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"test_invalid\": [\n         \"self\"\n      ],\n      \"test_valid\": [\n         \"self\"\n      ]\n   },\n   \"TestVerify\": {\n      \"assertVerifyExpectFail\": [\n         \"self\"\n      ],\n      \"test_dynamic_model_structure\": [\n         \"self\"\n      ],\n      \"test_embedded_constant_difference\": [\n         \"self\"\n      ],\n      \"test_explicit_test_args\": [\n         \"self\"\n      ],\n      \"test_jumbled_params\": [\n         \"self\"\n      ],\n      \"test_modifying_params\": [\n         \"self\"\n      ],\n      \"test_result_different\": [\n         \"self\"\n      ]\n   },\n   \"TestViewOps\": {\n      \"is_view_of\": [\n         \"self\",\n         \"base\",\n         \"other\"\n      ],\n      \"test_T_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_advanced_indexing_assignment\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_advanced_indexing_nonview\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_as_strided_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_basic_indexing_ellipses_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_basic_indexing_newaxis_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_basic_indexing_slice_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_chunk_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_contiguous_nonview\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_contiguous_self\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_diagonal_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_expand_as_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_expand_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_imag_complex\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_imag_noncomplex\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_narrow_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_permute_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_real_self\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_real_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reshape_as_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reshape_nonview\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_reshape_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_select_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_split_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_squeeze_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_t_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_transpose_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unbind_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unfold_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_unsqueeze_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_view_as_view\": [\n         \"self\",\n         \"device\"\n      ],\n      \"test_view_view\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"TestWeightDecay\": {\n      \"test_weight_decay\": [\n         \"self\"\n      ]\n   },\n   \"TestWeightScale\": {\n      \"test_weight_scale\": [\n         \"self\",\n         \"inputs\",\n         \"ITER\",\n         \"stepsize\",\n         \"upper_bound_iter\",\n         \"scale\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestWeightedMultiSample\": {\n      \"test_weighted_multi_sample\": [\n         \"self\",\n         \"num_samples\",\n         \"data_len\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestWeightedSample\": {\n      \"test_weighted_sample\": [\n         \"self\",\n         \"batch\",\n         \"weights_len\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestWeightedSumOp\": {\n      \"test_weighted_sum\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"in_place\",\n         \"engine\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_weighted_sum_grad\": [\n         \"self\",\n         \"n\",\n         \"m\",\n         \"d\",\n         \"grad_on_w\",\n         \"seed\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"TestWhere\": {\n      \"test_reference\": [\n         \"self\"\n      ],\n      \"test_where\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ],\n      \"test_where_dim2\": [\n         \"self\",\n         \"N\",\n         \"gc\",\n         \"dc\",\n         \"engine\"\n      ]\n   },\n   \"TestWhile\": {\n      \"testWhile\": [\n         \"self\"\n      ]\n   },\n   \"TestWngrad\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ]\n   },\n   \"TestWorkerInfoDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"idx\"\n      ]\n   },\n   \"TestWorkerQueueDataset\": {\n      \"__getitem__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"data\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"worker_init_fn\": [\n         \"self\",\n         \"worker_id\"\n      ]\n   },\n   \"TestWorkspace\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testConstructPlanFromSteps\": [\n         \"self\"\n      ],\n      \"testCurrentWorkspaceWrapper\": [\n         \"self\"\n      ],\n      \"testFetchBlobs\": [\n         \"self\"\n      ],\n      \"testFetchFeedBlob\": [\n         \"self\"\n      ],\n      \"testFetchFeedBlobBool\": [\n         \"self\"\n      ],\n      \"testFetchFeedBlobTypes\": [\n         \"self\"\n      ],\n      \"testFetchFeedBlobViaBlobReference\": [\n         \"self\"\n      ],\n      \"testFetchFeedBlobZeroDim\": [\n         \"self\"\n      ],\n      \"testFetchFeedLongStringTensor\": [\n         \"self\"\n      ],\n      \"testFetchFeedPlainString\": [\n         \"self\"\n      ],\n      \"testFetchFeedShortStringTensor\": [\n         \"self\"\n      ],\n      \"testFetchFeedViaBlobDict\": [\n         \"self\"\n      ],\n      \"testGetBlobSizeBytes\": [\n         \"self\"\n      ],\n      \"testGetOperatorCost\": [\n         \"self\"\n      ],\n      \"testResetWorkspace\": [\n         \"self\"\n      ],\n      \"testRootFolder\": [\n         \"self\"\n      ],\n      \"testRunNetOnce\": [\n         \"self\"\n      ],\n      \"testRunOperatorOnce\": [\n         \"self\"\n      ],\n      \"testRunPlan\": [\n         \"self\"\n      ],\n      \"testRunPlanInBackground\": [\n         \"self\"\n      ],\n      \"testTensorAccess\": [\n         \"self\"\n      ],\n      \"testTorchInterop\": [\n         \"self\"\n      ],\n      \"testWorkspaceHasBlobWithNonexistingName\": [\n         \"self\"\n      ]\n   },\n   \"TestWorkspaceGPU\": {\n      \"setUp\": [\n         \"self\"\n      ],\n      \"testFetchBlobGPU\": [\n         \"self\"\n      ],\n      \"testGetGpuPeerAccessPattern\": [\n         \"self\"\n      ],\n      \"testTorchInterop\": [\n         \"self\"\n      ]\n   },\n   \"TestWorkspaceIDEEP\": {\n      \"testFeedFetchBlobIDEEP\": [\n         \"self\"\n      ]\n   },\n   \"TestXNNPACKOps\": {\n      \"test_conv2d\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"height\",\n         \"width\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"use_bias\",\n         \"format\"\n      ],\n      \"test_linear\": [\n         \"self\",\n         \"batch_size\",\n         \"data_shape\",\n         \"weight_output_dim\",\n         \"use_bias\"\n      ]\n   },\n   \"TestXNNPACKRewritePass\": {\n      \"test_linear\": [\n         \"self\"\n      ]\n   },\n   \"TestXNNPACKSerDes\": {\n      \"test_combined_model\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"height\",\n         \"width\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"linear_weight_output_dim\",\n         \"use_bias\",\n         \"format\"\n      ],\n      \"test_conv2d\": [\n         \"self\",\n         \"batch_size\",\n         \"input_channels_per_group\",\n         \"height\",\n         \"width\",\n         \"output_channels_per_group\",\n         \"groups\",\n         \"kernel_h\",\n         \"kernel_w\",\n         \"stride_h\",\n         \"stride_w\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"use_bias\",\n         \"format\"\n      ],\n      \"test_linear\": [\n         \"self\",\n         \"batch_size\",\n         \"data_shape\",\n         \"weight_output_dim\",\n         \"use_bias\"\n      ]\n   },\n   \"TestYellowFin\": {\n      \"build_optimizer\": [\n         \"self\",\n         \"model\"\n      ],\n      \"caffe2_yellowfin\": [\n         \"self\",\n         \"zero_debias\",\n         \"grad_coef\",\n         \"n_dim\",\n         \"n_iter\",\n         \"gpu\"\n      ],\n      \"check_optimizer\": [\n         \"self\",\n         \"optimizer\"\n      ],\n      \"compare_yellowfin_models\": [\n         \"self\",\n         \"model0\",\n         \"model1\",\n         \"zero_debias\",\n         \"grad_coef\",\n         \"n_dim\",\n         \"n_iter\",\n         \"gpu\"\n      ],\n      \"deb\": [\n         \"self\",\n         \"val\",\n         \"beta\",\n         \"i\",\n         \"zero_debias\"\n      ],\n      \"get_lr_mu\": [\n         \"self\",\n         \"distance\",\n         \"grad_var\",\n         \"h_min\",\n         \"h_max\"\n      ],\n      \"numpy_yellowfin\": [\n         \"self\",\n         \"zero_debias\",\n         \"grad_coef\",\n         \"n_dim\",\n         \"n_iter\",\n         \"gpu\"\n      ],\n      \"testSparse\": [\n         \"self\"\n      ],\n      \"test_caffe2_cpu_vs_numpy\": [\n         \"self\"\n      ],\n      \"test_caffe2_gpu_vs_numpy\": [\n         \"self\"\n      ]\n   },\n   \"Test_PT_ONNX_TRT\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"_test_model\": [\n         \"self\",\n         \"model_name\",\n         \"input_shape\",\n         \"normalization_hint\"\n      ],\n      \"build_engine_onnx\": [\n         \"self\",\n         \"model_file\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"test_alexnet\": [\n         \"self\"\n      ],\n      \"test_densenet121\": [\n         \"self\"\n      ],\n      \"test_densenet161\": [\n         \"self\"\n      ],\n      \"test_densenet169\": [\n         \"self\"\n      ],\n      \"test_densenet201\": [\n         \"self\"\n      ],\n      \"test_googlenet\": [\n         \"self\"\n      ],\n      \"test_inception_v3\": [\n         \"self\"\n      ],\n      \"test_mnasnet0_5\": [\n         \"self\"\n      ],\n      \"test_mnasnet1_0\": [\n         \"self\"\n      ],\n      \"test_mobilenet_v2\": [\n         \"self\"\n      ],\n      \"test_resnet101\": [\n         \"self\"\n      ],\n      \"test_resnet101_2\": [\n         \"self\"\n      ],\n      \"test_resnet152\": [\n         \"self\"\n      ],\n      \"test_resnet18\": [\n         \"self\"\n      ],\n      \"test_resnet34\": [\n         \"self\"\n      ],\n      \"test_resnet50\": [\n         \"self\"\n      ],\n      \"test_resnet50_2\": [\n         \"self\"\n      ],\n      \"test_shufflenet_v2_x0_5\": [\n         \"self\"\n      ],\n      \"test_shufflenet_v2_x1_0\": [\n         \"self\"\n      ],\n      \"test_squeezenet1_0\": [\n         \"self\"\n      ],\n      \"test_squeezenet1_1\": [\n         \"self\"\n      ],\n      \"test_vgg11\": [\n         \"self\"\n      ],\n      \"test_vgg11_bn\": [\n         \"self\"\n      ],\n      \"test_vgg13\": [\n         \"self\"\n      ],\n      \"test_vgg13_bn\": [\n         \"self\"\n      ],\n      \"test_vgg16\": [\n         \"self\"\n      ],\n      \"test_vgg16_bn\": [\n         \"self\"\n      ],\n      \"test_vgg19\": [\n         \"self\"\n      ],\n      \"test_vgg19_bn\": [\n         \"self\"\n      ]\n   },\n   \"TesterBase\": {\n      \"_test\": [\n         \"self\",\n         \"prefix\",\n         \"input_strategy\",\n         \"refs\",\n         \"gpu\"\n      ],\n      \"segment_reduce_grad_op\": [\n         \"self\",\n         \"data\",\n         \"segment_ids\",\n         \"reducer_grad\",\n         \"grad_out\",\n         \"output\",\n         \"indices\"\n      ],\n      \"segment_reduce_op\": [\n         \"self\",\n         \"data\",\n         \"segment_ids\",\n         \"reducer\",\n         \"indices\"\n      ]\n   },\n   \"Text\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"add\": [\n         \"self\",\n         \"text\"\n      ],\n      \"context\": [\n         \"self\",\n         \"text\"\n      ]\n   },\n   \"TextFileReader\": {\n      \"__init__\": [\n         \"self\",\n         \"init_net\",\n         \"filename\",\n         \"schema\",\n         \"num_passes\",\n         \"batch_size\"\n      ],\n      \"read\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"Threshold\": {\n      \"__init__\": [\n         \"self\",\n         \"threshold\",\n         \"value\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"ThroughputBenchmark\": {\n      \"__init__\": [\n         \"self\",\n         \"module\"\n      ],\n      \"add_input\": [\n         \"self\"\n      ],\n      \"benchmark\": [\n         \"self\",\n         \"num_calling_threads\",\n         \"num_warmup_iters\",\n         \"num_iters\",\n         \"profiler_output_path\"\n      ],\n      \"run_once\": [\n         \"self\"\n      ]\n   },\n   \"TimeoutTest\": {\n      \"_init_methods\": [\n         \"self\"\n      ],\n      \"_test_default_store_timeout\": [\n         \"self\",\n         \"backend\"\n      ],\n      \"_test_store_timeout\": [\n         \"self\",\n         \"backend\",\n         \"init_method\",\n         \"c2p\"\n      ],\n      \"test_default_store_timeout_gloo\": [\n         \"self\"\n      ],\n      \"test_default_store_timeout_nccl\": [\n         \"self\"\n      ]\n   },\n   \"TopLevelTracedModule\": {},\n   \"TorchBenchmarkBase\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_generate_jit_forward_graph\": [\n         \"self\"\n      ],\n      \"_set_backward_test\": [\n         \"self\",\n         \"is_backward\"\n      ],\n      \"_wrap_forward\": [\n         \"self\",\n         \"foo\"\n      ],\n      \"auto_set\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ],\n      \"module_name\": [\n         \"self\"\n      ],\n      \"set_module_name\": [\n         \"self\",\n         \"name\"\n      ],\n      \"test_name\": [\n         \"self\"\n      ]\n   },\n   \"TorchIntegration\": {\n      \"_test_gelu_op\": [\n         \"self\",\n         \"X\",\n         \"fast_gelu\",\n         \"device\"\n      ],\n      \"_test_lengths_max_op\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_lengths_mean_op\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_lengths_op\": [\n         \"self\",\n         \"inputs\",\n         \"ref_op_name\",\n         \"torch_op\",\n         \"device\"\n      ],\n      \"_test_lengths_sum_op\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_resize_nearest_op\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_roi_align\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\"\n      ],\n      \"_test_roi_align_rotated\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"device\"\n      ],\n      \"test_Fused8BitRowwiseQuantizedToFloat\": [\n         \"self\",\n         \"input_data\"\n      ],\n      \"test_alias_with_name_is_in_place\": [\n         \"self\"\n      ],\n      \"test_bbox_transform\": [\n         \"self\",\n         \"roi_counts\",\n         \"num_classes\",\n         \"rotated\",\n         \"angle_bound_on\",\n         \"clip_angle_thresh\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_box_with_nms_limits\": [\n         \"self\",\n         \"roi_counts\",\n         \"num_classes\",\n         \"rotated\",\n         \"angle_bound_on\",\n         \"clip_angle_thresh\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"test_bucketize_op\": [\n         \"self\"\n      ],\n      \"test_collect_and_distribute_fpn_rpn_proposals_op\": [\n         \"self\",\n         \"roi_counts\"\n      ],\n      \"test_copy_between_cpu_and_gpu\": [\n         \"self\"\n      ],\n      \"test_gelu_op\": [\n         \"self\"\n      ],\n      \"test_gelu_op_cuda\": [\n         \"self\"\n      ],\n      \"test_generate_proposals\": [\n         \"self\",\n         \"A\",\n         \"H\",\n         \"W\",\n         \"img_count\"\n      ],\n      \"test_generate_proposals_cuda\": [\n         \"self\",\n         \"A\",\n         \"H\",\n         \"W\",\n         \"img_count\"\n      ],\n      \"test_index_hash_op\": [\n         \"self\"\n      ],\n      \"test_inference_lstm\": [\n         \"self\",\n         \"bsz\",\n         \"seq_lens\",\n         \"emb_lens\",\n         \"hidden_size\",\n         \"num_layers\",\n         \"has_biases\",\n         \"is_bidirectional\",\n         \"batch_first\"\n      ],\n      \"test_lengths_max_op\": [\n         \"self\"\n      ],\n      \"test_lengths_max_op_cuda\": [\n         \"self\"\n      ],\n      \"test_lengths_mean_op\": [\n         \"self\"\n      ],\n      \"test_lengths_mean_op_cuda\": [\n         \"self\"\n      ],\n      \"test_lengths_sum_op\": [\n         \"self\"\n      ],\n      \"test_lengths_sum_op_cuda\": [\n         \"self\"\n      ],\n      \"test_piecewise_linear_op\": [\n         \"self\",\n         \"binary_input\"\n      ],\n      \"test_resize_nearest_op_cpu\": [\n         \"self\"\n      ],\n      \"test_resize_nearest_op_cuda\": [\n         \"self\"\n      ],\n      \"test_roi_align_cpu\": [\n         \"self\"\n      ],\n      \"test_roi_align_cuda\": [\n         \"self\"\n      ],\n      \"test_roi_align_rotated_cpu\": [\n         \"self\"\n      ],\n      \"test_roi_align_rotated_cuda\": [\n         \"self\"\n      ]\n   },\n   \"TorchSaveError\": {\n      \"setup\": [\n         \"self\"\n      ]\n   },\n   \"TorchSumBenchmark\": {\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\"\n      ],\n      \"jit_forward\": [\n         \"self\",\n         \"iters\"\n      ]\n   },\n   \"TorchTensorEngine\": {\n      \"add\": [\n         \"self\",\n         \"t1\",\n         \"t2\"\n      ],\n      \"avg_pool2d\": [\n         \"self\",\n         \"data\",\n         \"kernel_size\",\n         \"stride\"\n      ],\n      \"backward\": [\n         \"self\",\n         \"tensors\",\n         \"grad_tensors\",\n         \"_\"\n      ],\n      \"batch_norm\": [\n         \"self\",\n         \"data\",\n         \"mean\",\n         \"var\",\n         \"training\"\n      ],\n      \"conv2d_layer\": [\n         \"self\",\n         \"ic\",\n         \"oc\",\n         \"kernel_size\",\n         \"groups\"\n      ],\n      \"instance_norm\": [\n         \"self\",\n         \"data\"\n      ],\n      \"layer_norm\": [\n         \"self\",\n         \"data\",\n         \"shape\"\n      ],\n      \"matmul\": [\n         \"self\",\n         \"t1\",\n         \"t2\"\n      ],\n      \"max_pool2d\": [\n         \"self\",\n         \"data\",\n         \"kernel_size\",\n         \"stride\"\n      ],\n      \"mul\": [\n         \"self\",\n         \"t1\",\n         \"t2\"\n      ],\n      \"nchw_rand\": [\n         \"self\",\n         \"shape\",\n         \"device\",\n         \"requires_grad\"\n      ],\n      \"numpy\": [\n         \"self\",\n         \"t\"\n      ],\n      \"rand\": [\n         \"self\",\n         \"shape\",\n         \"device\",\n         \"requires_grad\"\n      ],\n      \"rand_like\": [\n         \"self\",\n         \"v\"\n      ],\n      \"reset\": [\n         \"self\",\n         \"_\"\n      ],\n      \"softmax\": [\n         \"self\",\n         \"data\",\n         \"dim\"\n      ],\n      \"sum\": [\n         \"self\",\n         \"data\",\n         \"dims\"\n      ],\n      \"sync_cuda\": [\n         \"self\"\n      ],\n      \"to_device\": [\n         \"self\",\n         \"module\",\n         \"device\"\n      ]\n   },\n   \"TorchvisionBenchmark\": {\n      \"__init__\": [\n         \"self\",\n         \"device\",\n         \"distributed_backend\",\n         \"bucket_size\",\n         \"model\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"create_model\": [\n         \"self\"\n      ],\n      \"generate_inputs\": [\n         \"self\"\n      ],\n      \"generate_target\": [\n         \"self\"\n      ]\n   },\n   \"TracedModule\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"orig\",\n         \"id_set\",\n         \"_compilation_unit\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"attr\",\n         \"value\"\n      ],\n      \"_get_name\": [\n         \"self\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\"\n      ]\n   },\n   \"TracerWarning\": {\n      \"ignore_lib_warnings\": []\n   },\n   \"TracingCheckError\": {\n      \"__init__\": [\n         \"self\",\n         \"graph_diff_error\",\n         \"tensor_compare_error\",\n         \"extra_msg\"\n      ]\n   },\n   \"Transform\": {\n      \"__call__\": [\n         \"self\",\n         \"x\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"cache_size\"\n      ],\n      \"__ne__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"_call\": [\n         \"self\",\n         \"x\"\n      ],\n      \"_inv_call\": [\n         \"self\",\n         \"y\"\n      ],\n      \"_inverse\": [\n         \"self\",\n         \"y\"\n      ],\n      \"inv\": [\n         \"self\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"sign\": [\n         \"self\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"TransformedDistribution\": {\n      \"__init__\": [\n         \"self\",\n         \"base_distribution\",\n         \"transforms\",\n         \"validate_args\"\n      ],\n      \"_monotonize_cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"has_rsample\": [\n         \"self\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"support\": [\n         \"self\"\n      ]\n   },\n   \"Transformer\": {\n      \"__init__\": [\n         \"self\",\n         \"d_model\",\n         \"nhead\",\n         \"num_encoder_layers\",\n         \"num_decoder_layers\",\n         \"dim_feedforward\",\n         \"dropout\",\n         \"activation\",\n         \"custom_encoder\",\n         \"custom_decoder\"\n      ],\n      \"_reset_parameters\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"src\",\n         \"tgt\",\n         \"src_mask\",\n         \"tgt_mask\",\n         \"memory_mask\",\n         \"src_key_padding_mask\",\n         \"tgt_key_padding_mask\",\n         \"memory_key_padding_mask\"\n      ],\n      \"generate_square_subsequent_mask\": [\n         \"self\",\n         \"sz\"\n      ]\n   },\n   \"TransformerDecoder\": {\n      \"__init__\": [\n         \"self\",\n         \"decoder_layer\",\n         \"num_layers\",\n         \"norm\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"tgt\",\n         \"memory\",\n         \"tgt_mask\",\n         \"memory_mask\",\n         \"tgt_key_padding_mask\",\n         \"memory_key_padding_mask\"\n      ]\n   },\n   \"TransformerDecoderLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"d_model\",\n         \"nhead\",\n         \"dim_feedforward\",\n         \"dropout\",\n         \"activation\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"tgt\",\n         \"memory\",\n         \"tgt_mask\",\n         \"memory_mask\",\n         \"tgt_key_padding_mask\",\n         \"memory_key_padding_mask\"\n      ]\n   },\n   \"TransformerEncoder\": {\n      \"__init__\": [\n         \"self\",\n         \"encoder_layer\",\n         \"num_layers\",\n         \"norm\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"src\",\n         \"mask\",\n         \"src_key_padding_mask\"\n      ]\n   },\n   \"TransformerEncoderLayer\": {\n      \"__init__\": [\n         \"self\",\n         \"d_model\",\n         \"nhead\",\n         \"dim_feedforward\",\n         \"dropout\",\n         \"activation\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"src\",\n         \"src_mask\",\n         \"src_key_padding_mask\"\n      ]\n   },\n   \"TranslatorRegistry\": {\n      \"Register\": [\n         \"cls\",\n         \"op_name\"\n      ],\n      \"TranslateLayer\": [\n         \"cls\",\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateModel\": [\n         \"cls\",\n         \"caffe_net\",\n         \"pretrained_net\",\n         \"is_test\",\n         \"net_state\",\n         \"remove_legacy_pad\",\n         \"input_dims\"\n      ]\n   },\n   \"TransposeTest\": {\n      \"test_transpose\": [\n         \"self\",\n         \"X\",\n         \"use_axes\",\n         \"gc\",\n         \"dc\"\n      ]\n   },\n   \"Trie\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_pattern\": [\n         \"self\",\n         \"pData\"\n      ],\n      \"add\": [\n         \"self\",\n         \"word\"\n      ],\n      \"dump\": [\n         \"self\"\n      ],\n      \"pattern\": [\n         \"self\"\n      ],\n      \"quote\": [\n         \"self\",\n         \"char\"\n      ]\n   },\n   \"TripletMarginLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"margin\",\n         \"p\",\n         \"eps\",\n         \"swap\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"anchor\",\n         \"positive\",\n         \"negative\"\n      ]\n   },\n   \"TwoLayerLinearModel\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"TwoLayerNet\": {\n      \"__init__\": [\n         \"self\",\n         \"D_in\",\n         \"H\",\n         \"D_out\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x1\",\n         \"x2\"\n      ]\n   },\n   \"TwoLayerNetModule\": {\n      \"__init__\": [\n         \"self\",\n         \"D_in\",\n         \"H\",\n         \"D_out\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x1\",\n         \"x2\"\n      ]\n   },\n   \"Type\": {\n      \"backward\": [\n         \"ctx\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"i\",\n         \"dest_type\"\n      ]\n   },\n   \"UnaryOpBenchmark\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"device\",\n         \"op_func\"\n      ]\n   },\n   \"UnaryOpTest\": {\n      \"_test_unary_op\": [\n         \"self\",\n         \"opname\"\n      ],\n      \"test_sigmoid\": [\n         \"self\"\n      ],\n      \"test_tanh\": [\n         \"self\"\n      ]\n   },\n   \"Unfold\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"dilation\",\n         \"padding\",\n         \"stride\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"Uniform\": {\n      \"__init__\": [\n         \"self\",\n         \"low\",\n         \"high\",\n         \"validate_args\"\n      ],\n      \"cdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"icdf\": [\n         \"self\",\n         \"value\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"rsample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"stddev\": [\n         \"self\"\n      ],\n      \"support\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"UniformSampling\": {\n      \"__init__\": [\n         \"self\",\n         \"model\",\n         \"input_record\",\n         \"num_samples\",\n         \"num_elements\",\n         \"name\"\n      ],\n      \"add_ops\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"UnpoolingNet\": {\n      \"__init__\": [\n         \"self\",\n         \"pool\",\n         \"unpool\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"UnrolledCell\": {\n      \"__init__\": [\n         \"self\",\n         \"cell\",\n         \"T\"\n      ],\n      \"apply_over_sequence\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"seq_lengths\",\n         \"initial_states\",\n         \"outputs_with_grads\"\n      ]\n   },\n   \"Unserializable\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"inner\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"get\": [\n         \"self\"\n      ]\n   },\n   \"Unsupported\": {},\n   \"UnsupportedNodeError\": {\n      \"__init__\": [\n         \"self\",\n         \"ctx\",\n         \"offending_node\",\n         \"reason\"\n      ]\n   },\n   \"UploadTaskGroupBuilder\": {\n      \"build\": [\n         \"self\",\n         \"epoch\",\n         \"checkpoint_manager\"\n      ]\n   },\n   \"UploadToLocalFile\": {\n      \"__init__\": [\n         \"self\",\n         \"dest_dir\"\n      ],\n      \"build\": [\n         \"self\",\n         \"epoch\",\n         \"checkpoint_manager\"\n      ]\n   },\n   \"Upsample\": {\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"scale_factor\",\n         \"mode\",\n         \"align_corners\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"UpsamplingBilinear2d\": {\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"scale_factor\"\n      ]\n   },\n   \"UpsamplingNearest2d\": {\n      \"__init__\": [\n         \"self\",\n         \"size\",\n         \"scale_factor\"\n      ]\n   },\n   \"UpscaleBlock\": {\n      \"__init__\": [\n         \"self\",\n         \"n_filters\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"UseModifierBase\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"modifier_or_dict\"\n      ],\n      \"_context_class\": [\n         \"self\"\n      ]\n   },\n   \"UseNormalizer\": {\n      \"_context_class\": [\n         \"self\"\n      ]\n   },\n   \"UseOptimizer\": {\n      \"_context_class\": [\n         \"self\"\n      ]\n   },\n   \"UseRegularizer\": {\n      \"_context_class\": [\n         \"self\"\n      ]\n   },\n   \"VFModule\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"Variable\": {},\n   \"VariableMeta\": {\n      \"__instancecheck__\": [\n         \"cls\",\n         \"other\"\n      ]\n   },\n   \"VideoInputOpTest\": {\n      \"create_a_list\": [\n         \"self\",\n         \"output_file\",\n         \"line\",\n         \"n\"\n      ],\n      \"create_video_db\": [\n         \"self\",\n         \"list_file\",\n         \"output_file\",\n         \"use_list\"\n      ],\n      \"test_optical_flow_use_shorter_edge\": [\n         \"self\"\n      ],\n      \"test_optical_flow_with_temporal_jittering\": [\n         \"self\"\n      ],\n      \"test_rgb_use_shorter_edge\": [\n         \"self\"\n      ],\n      \"test_rgb_with_temporal_jittering\": [\n         \"self\"\n      ],\n      \"test_rgb_with_uniform_sampling\": [\n         \"self\"\n      ]\n   },\n   \"Visitor\": {\n      \"__call__\": [\n         \"self\",\n         \"obj\"\n      ],\n      \"register\": [\n         \"cls\",\n         \"Type\"\n      ]\n   },\n   \"VonMises\": {\n      \"__init__\": [\n         \"self\",\n         \"loc\",\n         \"concentration\",\n         \"validate_args\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\"\n      ],\n      \"log_prob\": [\n         \"self\",\n         \"value\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"sample\": [\n         \"self\",\n         \"sample_shape\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"WaitAllWorkersStates\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"Warning\": {\n      \"__init__\": [\n         \"self\",\n         \"setter\",\n         \"getter\"\n      ],\n      \"get_enabled\": [\n         \"self\"\n      ],\n      \"set_enabled\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"WatcherThread\": {\n      \"__init__\": [\n         \"self\",\n         \"timeout_secs\"\n      ],\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"Weibull\": {\n      \"__init__\": [\n         \"self\",\n         \"scale\",\n         \"concentration\",\n         \"validate_args\"\n      ],\n      \"entropy\": [\n         \"self\"\n      ],\n      \"expand\": [\n         \"self\",\n         \"batch_shape\",\n         \"_instance\"\n      ],\n      \"mean\": [\n         \"self\"\n      ],\n      \"variance\": [\n         \"self\"\n      ]\n   },\n   \"WeightDecayBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"weight_decay\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ]\n   },\n   \"WeightNorm\": {\n      \"__call__\": [\n         \"self\",\n         \"module\",\n         \"inputs\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"dim\"\n      ],\n      \"apply\": [\n         \"module\",\n         \"name\",\n         \"dim\"\n      ],\n      \"compute_weight\": [\n         \"self\",\n         \"module\"\n      ],\n      \"remove\": [\n         \"self\",\n         \"module\"\n      ]\n   },\n   \"WeightedRandomSampler\": {\n      \"__init__\": [\n         \"self\",\n         \"weights\",\n         \"num_samples\",\n         \"replacement\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"WithTorchFunction\": {\n      \"__init__\": [\n         \"self\",\n         \"data\",\n         \"requires_grad\"\n      ],\n      \"__torch_function__\": [\n         \"self\",\n         \"func\",\n         \"types\",\n         \"args\",\n         \"kwargs\"\n      ]\n   },\n   \"WngradOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"epsilon\",\n         \"policy\",\n         \"sparse_dedup_aggregator\",\n         \"engine\",\n         \"moment_init\",\n         \"lars\",\n         \"output_effective_lr\",\n         \"output_effective_lr_and_update\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"Worker\": {\n      \"__init__\": [\n         \"self\",\n         \"coordinator\",\n         \"worker_id\",\n         \"worker_fun\",\n         \"metrics\"\n      ],\n      \"finish\": [\n         \"self\"\n      ],\n      \"handle_exception\": [\n         \"self\",\n         \"e\"\n      ],\n      \"run\": [\n         \"self\"\n      ],\n      \"start\": [\n         \"self\"\n      ]\n   },\n   \"WorkerCoordinator\": {\n      \"__init__\": [\n         \"self\",\n         \"worker_name\",\n         \"worker_ids\",\n         \"init_fun\",\n         \"state\",\n         \"shutdown_fun\"\n      ],\n      \"_start\": [\n         \"self\"\n      ],\n      \"_stop\": [\n         \"self\",\n         \"reason\"\n      ],\n      \"_wait_finish\": [\n         \"self\",\n         \"cleanup\"\n      ],\n      \"get_worker_ids\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"global_coordinator\"\n      ],\n      \"is_active\": [\n         \"self\"\n      ]\n   },\n   \"WorkerInfo\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"key\",\n         \"val\"\n      ]\n   },\n   \"WorkerSpecificIterableDataset\": {\n      \"__init__\": [\n         \"self\",\n         \"sizes_for_all_workers\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ]\n   },\n   \"Workspace\": {\n      \"__del__\": [\n         \"self\"\n      ],\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"WorkspaceType\": {},\n   \"WrapperModule\": {\n      \"__init__\": [\n         \"self\",\n         \"wrapped_type\",\n         \"module_config\",\n         \"debug\",\n         \"save\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"niters\"\n      ]\n   },\n   \"Writer\": {\n      \"commit\": [\n         \"self\",\n         \"finish_net\"\n      ],\n      \"schema\": [\n         \"self\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"finish_net\"\n      ],\n      \"write\": [\n         \"self\",\n         \"writer_net\",\n         \"fields\"\n      ],\n      \"write_ex\": [\n         \"self\",\n         \"fields\",\n         \"local_init_net\",\n         \"local_finish_net\",\n         \"stop_blob\"\n      ],\n      \"write_record\": [\n         \"self\",\n         \"writer_net\",\n         \"fields\"\n      ],\n      \"write_record_ex\": [\n         \"self\",\n         \"fields\",\n         \"local_init_net\",\n         \"local_finish_net\",\n         \"stop_blob\"\n      ]\n   },\n   \"XNNPACKEngine\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"m\",\n         \"name\"\n      ]\n   },\n   \"YellowFinOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"alpha\",\n         \"mu\",\n         \"beta\",\n         \"curv_win_width\",\n         \"zero_debias\",\n         \"epsilon\",\n         \"policy\",\n         \"sparse_dedup_aggregator\"\n      ],\n      \"_run\": [\n         \"self\",\n         \"net\",\n         \"param_init_net\",\n         \"param_info\"\n      ],\n      \"scale_learning_rate\": [\n         \"self\",\n         \"scale\"\n      ]\n   },\n   \"ZeroPad2d\": {\n      \"__init__\": [\n         \"self\",\n         \"padding\"\n      ]\n   },\n   \"_AdaptiveAvgPoolNd\": {\n      \"__init__\": [\n         \"self\",\n         \"output_size\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_AdaptiveLogSoftmaxWithLoss\": {\n      \"__call__\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_AdaptiveMaxPoolNd\": {\n      \"__init__\": [\n         \"self\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_AvgPoolNd\": {\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_BaseDataLoaderIter\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"loader\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__next__\": [\n         \"self\"\n      ],\n      \"_next_data\": [\n         \"self\"\n      ],\n      \"_next_index\": [\n         \"self\"\n      ]\n   },\n   \"_BaseDatasetFetcher\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"auto_collation\",\n         \"collate_fn\",\n         \"drop_last\"\n      ],\n      \"fetch\": [\n         \"self\",\n         \"possibly_batched_index\"\n      ]\n   },\n   \"_BatchNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\",\n         \"affine\",\n         \"track_running_stats\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_BlobDict\": {\n      \"__contains__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__len__\": [\n         \"self\"\n      ],\n      \"__setitem__\": [\n         \"self\",\n         \"key\",\n         \"value\"\n      ]\n   },\n   \"_Boolean\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_CachedForward\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"cls\"\n      ]\n   },\n   \"_Cat\": {\n      \"__init__\": [\n         \"self\",\n         \"cseq\",\n         \"dim\",\n         \"lengths\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_ClassNamespace\": {\n      \"__getattr__\": [\n         \"self\",\n         \"attr\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_Classes\": {\n      \"__getattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"load_library\": [\n         \"self\",\n         \"path\"\n      ],\n      \"loaded_libraries\": [\n         \"self\"\n      ]\n   },\n   \"_ConstantPadNd\": {\n      \"__init__\": [\n         \"self\",\n         \"value\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_ContextInfo\": {\n      \"__init__\": [\n         \"self\",\n         \"cls\",\n         \"allow_default\",\n         \"arg_name\"\n      ],\n      \"_stack\": [\n         \"self\"\n      ],\n      \"enter\": [\n         \"self\",\n         \"value\"\n      ],\n      \"exit\": [\n         \"self\",\n         \"value\"\n      ],\n      \"get_active\": [\n         \"self\",\n         \"required\"\n      ]\n   },\n   \"_ContextMethodMixin\": {\n      \"mark_dirty\": [\n         \"self\"\n      ],\n      \"mark_non_differentiable\": [\n         \"self\"\n      ],\n      \"mark_shared_storage\": [\n         \"self\"\n      ],\n      \"save_for_backward\": [\n         \"self\"\n      ]\n   },\n   \"_ContextRegistry\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"get\": [\n         \"self\",\n         \"cls\"\n      ],\n      \"register\": [\n         \"self\",\n         \"ctx_info\"\n      ]\n   },\n   \"_ConvBnNd\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"transposed\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\",\n         \"eps\",\n         \"momentum\",\n         \"freeze_bn\",\n         \"qconfig\"\n      ],\n      \"_forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ],\n      \"freeze_bn_stats\": [\n         \"self\"\n      ],\n      \"from_float\": [\n         \"cls\",\n         \"mod\",\n         \"qconfig\"\n      ],\n      \"reset_bn_parameters\": [\n         \"self\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ],\n      \"reset_running_stats\": [\n         \"self\"\n      ],\n      \"update_bn_stats\": [\n         \"self\"\n      ]\n   },\n   \"_ConvNd\": {\n      \"__getstate__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"transposed\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"__setstate__\": [\n         \"self\",\n         \"state\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"_save_to_state_dict\": [\n         \"self\",\n         \"destination\",\n         \"prefix\",\n         \"keep_vars\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_ConvTransposeMixin\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"_ConvTransposeNd\": {\n      \"__init__\": [\n         \"self\",\n         \"in_channels\",\n         \"out_channels\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"transposed\",\n         \"output_padding\",\n         \"groups\",\n         \"bias\",\n         \"padding_mode\"\n      ],\n      \"_input_padding\": [\n         \"self\",\n         \"kernel_size\",\n         \"dilation\",\n         \"padding\"\n      ]\n   },\n   \"_CudaBase\": {\n      \"type\": [\n         \"self\"\n      ]\n   },\n   \"_DatasetKind\": {\n      \"create_fetcher\": [\n         \"kind\",\n         \"dataset\",\n         \"auto_collation\",\n         \"collate_fn\",\n         \"drop_last\"\n      ]\n   },\n   \"_DatasetRandomReader\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"name\",\n         \"indices\",\n         \"batch_size\",\n         \"loop_over\",\n         \"enforce_batch_size\"\n      ],\n      \"computeoffset\": [\n         \"self\",\n         \"net\"\n      ],\n      \"read\": [\n         \"self\",\n         \"read_net\"\n      ],\n      \"reset\": [\n         \"self\",\n         \"net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"exit_net\"\n      ],\n      \"sort_and_shuffle\": [\n         \"self\",\n         \"net\",\n         \"sort_by_field\",\n         \"shuffle_size\",\n         \"batch_size\"\n      ]\n   },\n   \"_DatasetReader\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"name\",\n         \"batch_size\",\n         \"enforce_batch_size\"\n      ],\n      \"read\": [\n         \"self\",\n         \"read_net\"\n      ],\n      \"reset\": [\n         \"self\",\n         \"net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"exit_net\"\n      ]\n   },\n   \"_DatasetWriter\": {\n      \"__init__\": [\n         \"self\",\n         \"content\"\n      ],\n      \"commit\": [\n         \"self\",\n         \"finish_net\"\n      ],\n      \"setup_ex\": [\n         \"self\",\n         \"init_net\",\n         \"exit_net\"\n      ],\n      \"write\": [\n         \"self\",\n         \"writer_net\",\n         \"fields\"\n      ]\n   },\n   \"_DecoratorContextManager\": {\n      \"__call__\": [\n         \"self\",\n         \"func\"\n      ],\n      \"_wrap_generator\": [\n         \"self\",\n         \"func\"\n      ]\n   },\n   \"_Dependent\": {\n      \"check\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"_DependentProperty\": {},\n   \"_Dirichlet\": {\n      \"backward\": [\n         \"ctx\",\n         \"grad_output\"\n      ],\n      \"forward\": [\n         \"ctx\",\n         \"concentration\"\n      ]\n   },\n   \"_DistTestBase\": {\n      \"_all_reduce_coalesced_max_test_cases\": [\n         \"group_size\"\n      ],\n      \"_all_reduce_coalesced_min_test_cases\": [\n         \"group_size\"\n      ],\n      \"_all_reduce_coalesced_product_test_cases\": [\n         \"group_size\"\n      ],\n      \"_all_reduce_coalesced_sum_test_cases\": [\n         \"group_size\"\n      ],\n      \"_assert_equal_param\": [\n         \"self\",\n         \"param_gpu\",\n         \"param_DDP\"\n      ],\n      \"_barrier\": [\n         \"self\"\n      ],\n      \"_init_full_group_test\": [\n         \"self\"\n      ],\n      \"_init_global_test\": [\n         \"self\"\n      ],\n      \"_init_group_test\": [\n         \"self\"\n      ],\n      \"_init_multigpu_helper\": [\n         \"self\"\n      ],\n      \"_model_step\": [\n         \"self\",\n         \"model\"\n      ],\n      \"_prepare_dummy_data\": [\n         \"self\",\n         \"local_bs\"\n      ],\n      \"_run_all_gather_coalesced_and_verify\": [\n         \"self\",\n         \"output_tensor_lists\",\n         \"input_tensors\",\n         \"expected_tensors\",\n         \"group_id\"\n      ],\n      \"_test_DDP_5iter\": [\n         \"self\",\n         \"model_base\",\n         \"model_DDP\",\n         \"input\",\n         \"target\",\n         \"loss\",\n         \"local_bs\",\n         \"rank\",\n         \"batch_size\",\n         \"test_save\",\n         \"offset\",\n         \"world_size\"\n      ],\n      \"_test_DDP_helper\": [\n         \"self\",\n         \"model\",\n         \"input_var\",\n         \"target\",\n         \"loss\",\n         \"scale_factor\"\n      ],\n      \"_test_DistributedDataParallel\": [\n         \"self\",\n         \"gpu_subset\",\n         \"rank\",\n         \"output_device\"\n      ],\n      \"_test_DistributedDataParallel_SyncBatchNorm\": [\n         \"self\",\n         \"gpu_subset\",\n         \"rank\",\n         \"local_bs\",\n         \"global_bs\",\n         \"offset\",\n         \"output_device\"\n      ],\n      \"_test_all_gather_coalesced_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_all_gather_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_all_gather_multigpu_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_all_reduce_coalesced_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"op\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_all_reduce_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"op\",\n         \"master_value\",\n         \"worker_value\",\n         \"expected_value\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_all_reduce_multigpu_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"rank_to_GPU\",\n         \"op\",\n         \"master_value\",\n         \"worker_value\",\n         \"expected_value\"\n      ],\n      \"_test_all_to_all_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_all_to_all_single_equal_split_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_all_to_all_single_unequal_split_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_barrier_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_barrier_timeout\": [\n         \"self\",\n         \"group_id\",\n         \"timeout\"\n      ],\n      \"_test_broadcast_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_broadcast_multigpu_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_gather_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_group_override_backend\": [\n         \"self\",\n         \"initializer\"\n      ],\n      \"_test_reduce_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"op\",\n         \"master_value\",\n         \"worker_value\",\n         \"expected_value\",\n         \"cuda\",\n         \"rank_to_GPU\"\n      ],\n      \"_test_reduce_multigpu_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\",\n         \"rank_to_GPU\",\n         \"op\",\n         \"master_value\",\n         \"worker_value\",\n         \"expected_value\"\n      ],\n      \"_test_scatter_helper\": [\n         \"self\",\n         \"group\",\n         \"group_id\",\n         \"rank\"\n      ],\n      \"_test_sparse_all_reduce_sum\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"test_Backend_enum_class\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallelCPU\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_SyncBatchNorm\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_SyncBatchNorm_2D_Input\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_SyncBatchNorm_Diff_Input_Sizes_Running_Value\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_SyncBatchNorm_Diff_Input_Sizes_gradient\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_SyncBatchNorm_Single_Input_Per_Process\": [\n         \"self\"\n      ],\n      \"test_DistributedDataParallel_requires_grad\": [\n         \"self\"\n      ],\n      \"test_SyncBatchNorm_process_group\": [\n         \"self\"\n      ],\n      \"test_all_gather\": [\n         \"self\"\n      ],\n      \"test_all_gather_coalesced_full_group\": [\n         \"self\"\n      ],\n      \"test_all_gather_coalesced_group\": [\n         \"self\"\n      ],\n      \"test_all_gather_coalesced_simple\": [\n         \"self\"\n      ],\n      \"test_all_gather_coalesced_with_empty\": [\n         \"self\"\n      ],\n      \"test_all_gather_cuda\": [\n         \"self\"\n      ],\n      \"test_all_gather_full_group\": [\n         \"self\"\n      ],\n      \"test_all_gather_group\": [\n         \"self\"\n      ],\n      \"test_all_gather_multigpu\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_full_group_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_full_group_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_full_group_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_full_group_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_group_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_group_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_group_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_group_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_coalesced_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_full_group_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_full_group_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_full_group_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_full_group_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_group_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_group_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_group_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_group_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_max\": [\n         \"self\"\n      ],\n      \"test_all_reduce_min\": [\n         \"self\"\n      ],\n      \"test_all_reduce_multigpu\": [\n         \"self\"\n      ],\n      \"test_all_reduce_product\": [\n         \"self\"\n      ],\n      \"test_all_reduce_sum\": [\n         \"self\"\n      ],\n      \"test_all_reduce_sum_cuda\": [\n         \"self\"\n      ],\n      \"test_all_to_all\": [\n         \"self\"\n      ],\n      \"test_all_to_all_full_group\": [\n         \"self\"\n      ],\n      \"test_all_to_all_group\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_equal_split\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_equal_split_full_group\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_equal_split_group\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_unequal_split\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_unequal_split_full_group\": [\n         \"self\"\n      ],\n      \"test_all_to_all_single_unequal_split_group\": [\n         \"self\"\n      ],\n      \"test_backend_full_group\": [\n         \"self\"\n      ],\n      \"test_backend_group\": [\n         \"self\"\n      ],\n      \"test_barrier\": [\n         \"self\"\n      ],\n      \"test_barrier_cuda\": [\n         \"self\"\n      ],\n      \"test_barrier_full_group\": [\n         \"self\"\n      ],\n      \"test_barrier_full_group_cuda\": [\n         \"self\"\n      ],\n      \"test_barrier_group\": [\n         \"self\"\n      ],\n      \"test_barrier_group_cuda\": [\n         \"self\"\n      ],\n      \"test_barrier_timeout_full_group\": [\n         \"self\"\n      ],\n      \"test_barrier_timeout_global\": [\n         \"self\"\n      ],\n      \"test_barrier_timeout_group\": [\n         \"self\"\n      ],\n      \"test_broadcast\": [\n         \"self\"\n      ],\n      \"test_broadcast_cuda\": [\n         \"self\"\n      ],\n      \"test_broadcast_full_group\": [\n         \"self\"\n      ],\n      \"test_broadcast_group\": [\n         \"self\"\n      ],\n      \"test_broadcast_multigpu\": [\n         \"self\"\n      ],\n      \"test_destroy_full_group\": [\n         \"self\"\n      ],\n      \"test_destroy_group\": [\n         \"self\"\n      ],\n      \"test_gather\": [\n         \"self\"\n      ],\n      \"test_gather_checks\": [\n         \"self\"\n      ],\n      \"test_gather_full_group\": [\n         \"self\"\n      ],\n      \"test_gather_group\": [\n         \"self\"\n      ],\n      \"test_get_backend\": [\n         \"self\"\n      ],\n      \"test_get_rank\": [\n         \"self\"\n      ],\n      \"test_get_rank_size_full_group\": [\n         \"self\"\n      ],\n      \"test_get_rank_size_group\": [\n         \"self\"\n      ],\n      \"test_irecv\": [\n         \"self\"\n      ],\n      \"test_isend\": [\n         \"self\"\n      ],\n      \"test_reduce_full_group_max\": [\n         \"self\"\n      ],\n      \"test_reduce_full_group_min\": [\n         \"self\"\n      ],\n      \"test_reduce_full_group_product\": [\n         \"self\"\n      ],\n      \"test_reduce_full_group_sum\": [\n         \"self\"\n      ],\n      \"test_reduce_group_max\": [\n         \"self\"\n      ],\n      \"test_reduce_group_min\": [\n         \"self\"\n      ],\n      \"test_reduce_group_product\": [\n         \"self\"\n      ],\n      \"test_reduce_group_sum\": [\n         \"self\"\n      ],\n      \"test_reduce_max\": [\n         \"self\"\n      ],\n      \"test_reduce_min\": [\n         \"self\"\n      ],\n      \"test_reduce_multigpu\": [\n         \"self\"\n      ],\n      \"test_reduce_product\": [\n         \"self\"\n      ],\n      \"test_reduce_sum\": [\n         \"self\"\n      ],\n      \"test_reduce_sum_cuda\": [\n         \"self\"\n      ],\n      \"test_scatter\": [\n         \"self\"\n      ],\n      \"test_scatter_checks\": [\n         \"self\"\n      ],\n      \"test_scatter_full_group\": [\n         \"self\"\n      ],\n      \"test_scatter_group\": [\n         \"self\"\n      ],\n      \"test_send_recv\": [\n         \"self\"\n      ],\n      \"test_send_recv_any_source\": [\n         \"self\"\n      ],\n      \"test_send_recv_with_tag\": [\n         \"self\"\n      ],\n      \"test_sparse_all_reduce_sum\": [\n         \"self\"\n      ],\n      \"test_sparse_all_reduce_sum_cuda\": [\n         \"self\"\n      ]\n   },\n   \"_DropoutNd\": {\n      \"__init__\": [\n         \"self\",\n         \"p\",\n         \"inplace\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_FC2\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ]\n   },\n   \"_FakeDict\": {\n      \"__init__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"get\": [\n         \"self\",\n         \"name\",\n         \"_\"\n      ]\n   },\n   \"_Formatter\": {\n      \"__init__\": [\n         \"self\",\n         \"tensor\"\n      ],\n      \"format\": [\n         \"self\",\n         \"value\"\n      ],\n      \"width\": [\n         \"self\"\n      ]\n   },\n   \"_Functional\": {\n      \"__getattribute__\": [\n         \"self\",\n         \"op_type\"\n      ]\n   },\n   \"_GreaterThan\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_GreaterThanEq\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_HalfOpenInterval\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\",\n         \"upper_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_HookMixin\": {\n      \"_register_hook\": [\n         \"backward_hooks\",\n         \"hook\"\n      ]\n   },\n   \"_IncompatibleKeys\": {\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"_InfiniteConstantSampler\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ]\n   },\n   \"_InstanceNorm\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\",\n         \"affine\",\n         \"track_running_stats\"\n      ],\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_IntegerGreaterThan\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_IntegerInterval\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\",\n         \"upper_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_IntegerLessThan\": {\n      \"__init__\": [\n         \"self\",\n         \"upper_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_InternalRPCPickler\": {\n      \"__init__\": [\n         \"self\"\n      ],\n      \"_rref_receiver\": [\n         \"cls\",\n         \"rref_fork_data\"\n      ],\n      \"_rref_reducer\": [\n         \"self\",\n         \"rref\"\n      ],\n      \"_tensor_receiver\": [\n         \"cls\",\n         \"tensor_index\"\n      ],\n      \"_tensor_reducer\": [\n         \"self\",\n         \"tensor\"\n      ],\n      \"deserialize\": [\n         \"self\",\n         \"binary_data\",\n         \"tensor_table\"\n      ],\n      \"serialize\": [\n         \"self\",\n         \"obj\"\n      ]\n   },\n   \"_Interval\": {\n      \"__init__\": [\n         \"self\",\n         \"lower_bound\",\n         \"upper_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_InverseTransform\": {\n      \"__call__\": [\n         \"self\",\n         \"x\"\n      ],\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"transform\"\n      ],\n      \"bijective\": [\n         \"self\"\n      ],\n      \"codomain\": [\n         \"self\"\n      ],\n      \"domain\": [\n         \"self\"\n      ],\n      \"event_dim\": [\n         \"self\"\n      ],\n      \"inv\": [\n         \"self\"\n      ],\n      \"log_abs_det_jacobian\": [\n         \"self\",\n         \"x\",\n         \"y\"\n      ],\n      \"sign\": [\n         \"self\"\n      ],\n      \"with_cache\": [\n         \"self\",\n         \"cache_size\"\n      ]\n   },\n   \"_IterableDatasetFetcher\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"auto_collation\",\n         \"collate_fn\",\n         \"drop_last\"\n      ],\n      \"fetch\": [\n         \"self\",\n         \"possibly_batched_index\"\n      ]\n   },\n   \"_LPPoolNd\": {\n      \"__init__\": [\n         \"self\",\n         \"norm_type\",\n         \"kernel_size\",\n         \"stride\",\n         \"ceil_mode\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_LRScheduler\": {\n      \"__init__\": [\n         \"self\",\n         \"optimizer\",\n         \"last_epoch\"\n      ],\n      \"get_last_lr\": [\n         \"self\"\n      ],\n      \"get_lr\": [\n         \"self\"\n      ],\n      \"load_state_dict\": [\n         \"self\",\n         \"state_dict\"\n      ],\n      \"state_dict\": [\n         \"self\"\n      ],\n      \"step\": [\n         \"self\",\n         \"epoch\"\n      ]\n   },\n   \"_LessThan\": {\n      \"__init__\": [\n         \"self\",\n         \"upper_bound\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_LocalOptimizer\": {\n      \"__init__\": [\n         \"self\",\n         \"optim_cls\",\n         \"local_params_rref\"\n      ],\n      \"step\": [\n         \"self\",\n         \"autograd_ctx_id\"\n      ]\n   },\n   \"_Loop\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"iters\",\n         \"name\"\n      ],\n      \"iter\": [\n         \"self\"\n      ]\n   },\n   \"_Loss\": {\n      \"__init__\": [\n         \"self\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ]\n   },\n   \"_LowerCholesky\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_LowerTriangular\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_MapDatasetFetcher\": {\n      \"__init__\": [\n         \"self\",\n         \"dataset\",\n         \"auto_collation\",\n         \"collate_fn\",\n         \"drop_last\"\n      ],\n      \"fetch\": [\n         \"self\",\n         \"possibly_batched_index\"\n      ]\n   },\n   \"_Match\": {\n      \"__eq__\": [\n         \"self\",\n         \"other\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__le__\": [\n         \"self\",\n         \"other\"\n      ]\n   },\n   \"_MaxPoolNd\": {\n      \"__init__\": [\n         \"self\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"return_indices\",\n         \"ceil_mode\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_MaxUnpoolNd\": {\n      \"extra_repr\": [\n         \"self\"\n      ]\n   },\n   \"_MinMaxTensorListObserver\": {\n      \"__init__\": [\n         \"self\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"calculate_qparams\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"tensor_list\"\n      ]\n   },\n   \"_MultiDeviceReplicator\": {\n      \"__init__\": [\n         \"self\",\n         \"master_tensor\"\n      ],\n      \"get\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"_MultiProcessingDataLoaderIter\": {\n      \"__del__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"loader\"\n      ],\n      \"_get_data\": [\n         \"self\"\n      ],\n      \"_next_data\": [\n         \"self\"\n      ],\n      \"_process_data\": [\n         \"self\",\n         \"data\"\n      ],\n      \"_shutdown_worker\": [\n         \"self\",\n         \"worker_id\"\n      ],\n      \"_shutdown_workers\": [\n         \"self\"\n      ],\n      \"_try_get_data\": [\n         \"self\",\n         \"timeout\"\n      ],\n      \"_try_put_index\": [\n         \"self\"\n      ]\n   },\n   \"_NVTXStub\": {\n      \"_fail\": []\n   },\n   \"_NormBase\": {\n      \"__init__\": [\n         \"self\",\n         \"num_features\",\n         \"eps\",\n         \"momentum\",\n         \"affine\",\n         \"track_running_stats\"\n      ],\n      \"_check_input_dim\": [\n         \"self\",\n         \"input\"\n      ],\n      \"_load_from_state_dict\": [\n         \"self\",\n         \"state_dict\",\n         \"prefix\",\n         \"local_metadata\",\n         \"strict\",\n         \"missing_keys\",\n         \"unexpected_keys\",\n         \"error_msgs\"\n      ],\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"reset_parameters\": [\n         \"self\"\n      ],\n      \"reset_running_stats\": [\n         \"self\"\n      ]\n   },\n   \"_ObserverBase\": {\n      \"__init__\": [\n         \"self\",\n         \"dtype\",\n         \"qscheme\",\n         \"reduce_range\"\n      ],\n      \"_calculate_qparams\": [\n         \"self\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"get_qparams\": [\n         \"self\"\n      ]\n   },\n   \"_OpNamespace\": {\n      \"__getattr__\": [\n         \"self\",\n         \"op_name\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_Ops\": {\n      \"__getattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"load_library\": [\n         \"self\",\n         \"path\"\n      ]\n   },\n   \"_PositiveDefinite\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_QEngineProp\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"objtype\"\n      ],\n      \"__set__\": [\n         \"self\",\n         \"obj\",\n         \"val\"\n      ]\n   },\n   \"_QFunctionalBinaryArithmeticBenchmarkBase\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"N\",\n         \"dtype\",\n         \"contig\"\n      ]\n   },\n   \"_QLinearBenchmarkBase\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"init\": [\n         \"self\",\n         \"N\",\n         \"IN\",\n         \"OUT\",\n         \"linear_under_test\"\n      ]\n   },\n   \"_QMethodBenchmarkBase\": {\n      \"init\": [\n         \"self\",\n         \"M\",\n         \"N\",\n         \"dtype\",\n         \"contig\",\n         \"op_func\"\n      ]\n   },\n   \"_QPool2dBenchmarkBase\": {\n      \"forward\": [\n         \"self\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"N\",\n         \"C\",\n         \"H\",\n         \"W\",\n         \"dtype\",\n         \"contig\"\n      ]\n   },\n   \"_QueueReader\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs_queue\",\n         \"schema\",\n         \"name\"\n      ],\n      \"read\": [\n         \"self\",\n         \"read_net\"\n      ]\n   },\n   \"_QueueWriter\": {\n      \"__init__\": [\n         \"self\",\n         \"blobs_queue\",\n         \"schema\"\n      ],\n      \"write\": [\n         \"self\",\n         \"writer_net\",\n         \"fields\"\n      ]\n   },\n   \"_Real\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_RealVector\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_ReflectionPadNd\": {\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_ReplicationPadNd\": {\n      \"extra_repr\": [\n         \"self\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_ReporterBuilder\": {\n      \"__exit__\": [\n         \"self\",\n         \"etype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"interval_ms\",\n         \"net\",\n         \"name\"\n      ]\n   },\n   \"_RequiredParameter\": {\n      \"__repr__\": [\n         \"self\"\n      ]\n   },\n   \"_RunElseNet\": {\n      \"__exit__\": [\n         \"self\",\n         \"type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_RunIf\": {\n      \"Elif\": [\n         \"self\",\n         \"cond\",\n         \"name\"\n      ],\n      \"Else\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"cond_blob\",\n         \"name\",\n         \"_already_ran\"\n      ]\n   },\n   \"_RunIfNet\": {\n      \"__exit__\": [\n         \"self\",\n         \"type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"cond_blob\",\n         \"name\"\n      ],\n      \"add\": [\n         \"self\",\n         \"child\"\n      ]\n   },\n   \"_RunOnce\": {\n      \"__exit__\": [\n         \"self\",\n         \"etype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_RunWhileCondition\": {\n      \"__exit__\": [\n         \"self\",\n         \"type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_RunWhileNet\": {\n      \"__exit__\": [\n         \"self\",\n         \"type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_SchemaNode\": {\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"type_str\"\n      ],\n      \"add_child\": [\n         \"self\",\n         \"name\",\n         \"type_str\"\n      ],\n      \"get_field\": [\n         \"self\"\n      ],\n      \"print_recursively\": [\n         \"self\"\n      ]\n   },\n   \"_SetupBuilder\": {\n      \"__init__\": [\n         \"self\",\n         \"type\",\n         \"name\"\n      ],\n      \"exit\": [\n         \"self\",\n         \"net\"\n      ],\n      \"setup\": [\n         \"self\",\n         \"net\"\n      ]\n   },\n   \"_Simplex\": {\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_SingleProcessDataLoaderIter\": {\n      \"__init__\": [\n         \"self\",\n         \"loader\"\n      ],\n      \"_next_data\": [\n         \"self\"\n      ]\n   },\n   \"_Stack\": {\n      \"__init__\": [\n         \"self\",\n         \"cseq\",\n         \"dim\"\n      ],\n      \"check\": [\n         \"self\",\n         \"value\"\n      ]\n   },\n   \"_StopGuard\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"etype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"has_stopped_blob\",\n         \"name\"\n      ],\n      \"has_stopped\": [\n         \"self\"\n      ]\n   },\n   \"_StorageBase\": {\n      \"__copy__\": [\n         \"self\"\n      ],\n      \"__deepcopy__\": [\n         \"self\",\n         \"memo\"\n      ],\n      \"__iter__\": [\n         \"self\"\n      ],\n      \"__reduce__\": [\n         \"self\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__sizeof__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_new_shared\": [\n         \"cls\",\n         \"size\"\n      ],\n      \"bfloat16\": [\n         \"self\"\n      ],\n      \"bool\": [\n         \"self\"\n      ],\n      \"byte\": [\n         \"self\"\n      ],\n      \"char\": [\n         \"self\"\n      ],\n      \"clone\": [\n         \"self\"\n      ],\n      \"complex_double\": [\n         \"self\"\n      ],\n      \"complex_float\": [\n         \"self\"\n      ],\n      \"cpu\": [\n         \"self\"\n      ],\n      \"double\": [\n         \"self\"\n      ],\n      \"float\": [\n         \"self\"\n      ],\n      \"half\": [\n         \"self\"\n      ],\n      \"int\": [\n         \"self\"\n      ],\n      \"long\": [\n         \"self\"\n      ],\n      \"pin_memory\": [\n         \"self\"\n      ],\n      \"share_memory_\": [\n         \"self\"\n      ],\n      \"short\": [\n         \"self\"\n      ],\n      \"tolist\": [\n         \"self\"\n      ]\n   },\n   \"_SupportedQEnginesProp\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"objtype\"\n      ],\n      \"__set__\": [\n         \"self\",\n         \"obj\",\n         \"val\"\n      ]\n   },\n   \"_TestMultiProcessing\": {\n      \"test_exception_all\": [\n         \"self\"\n      ],\n      \"test_exception_single\": [\n         \"self\"\n      ],\n      \"test_first_argument_index\": [\n         \"self\"\n      ],\n      \"test_nested\": [\n         \"self\"\n      ],\n      \"test_success\": [\n         \"self\"\n      ],\n      \"test_success_first_then_exception\": [\n         \"self\"\n      ],\n      \"test_success_non_blocking\": [\n         \"self\"\n      ],\n      \"test_terminate_exit\": [\n         \"self\"\n      ],\n      \"test_terminate_signal\": [\n         \"self\"\n      ]\n   },\n   \"_TestTorchMixin\": {\n      \"_assert_matches_numpy\": [\n         \"self\",\n         \"t\",\n         \"n\"\n      ],\n      \"_consecutive\": [\n         \"self\",\n         \"size\",\n         \"start\"\n      ],\n      \"_fill_indices\": [\n         \"self\",\n         \"idx\",\n         \"dim\",\n         \"dim_size\",\n         \"elems_per_row\",\n         \"m\",\n         \"n\",\n         \"o\"\n      ],\n      \"_make_tensors\": [\n         \"self\",\n         \"shape\",\n         \"val_range\",\n         \"use_floating\",\n         \"use_integral\"\n      ],\n      \"_spawn_method\": [\n         \"self\",\n         \"method\",\n         \"arg\"\n      ],\n      \"_testCSelection\": [\n         \"self\",\n         \"torchfn\",\n         \"mathfn\"\n      ],\n      \"_testSelection\": [\n         \"self\",\n         \"torchfn\",\n         \"mathfn\"\n      ],\n      \"_test_bernoulli\": [\n         \"self\",\n         \"t_dtype\",\n         \"p_dtype\",\n         \"device\"\n      ],\n      \"_test_conv_corr_eq\": [\n         \"self\",\n         \"fn\",\n         \"fn_2_to_3\"\n      ],\n      \"_test_dim_ops\": [\n         \"self\",\n         \"pytorch_op\",\n         \"numpy_op\",\n         \"use_floating\",\n         \"use_integral\"\n      ],\n      \"_test_fft_ifft_rfft_irfft\": [\n         \"self\",\n         \"device\",\n         \"dtype\"\n      ],\n      \"_test_gather\": [\n         \"self\",\n         \"cast\",\n         \"test_bounds\"\n      ],\n      \"_test_multinomial_invalid_probs\": [\n         \"probs\"\n      ],\n      \"_test_reduce_integer_upcast\": [\n         \"self\",\n         \"fn\",\n         \"has_out\",\n         \"test_complex\"\n      ],\n      \"_test_scatter_base\": [\n         \"self\",\n         \"cast\",\n         \"method\",\n         \"is_scalar\",\n         \"test_bounds\"\n      ],\n      \"assertIsOrdered\": [\n         \"self\",\n         \"order\",\n         \"x\",\n         \"mxx\",\n         \"ixx\",\n         \"task\"\n      ],\n      \"check_single_matmul\": [\n         \"self\",\n         \"x\",\n         \"y\",\n         \"shape\"\n      ],\n      \"test_RNGState\": [\n         \"self\"\n      ],\n      \"test_RNGStateAliasing\": [\n         \"self\"\n      ],\n      \"test_RNG_after_pickle\": [\n         \"self\"\n      ],\n      \"test_Size\": [\n         \"self\"\n      ],\n      \"test_Size_iter\": [\n         \"self\"\n      ],\n      \"test_Size_scalar\": [\n         \"self\"\n      ],\n      \"test_T\": [\n         \"self\"\n      ],\n      \"test_accreal_type\": [\n         \"self\"\n      ],\n      \"test_all_any\": [\n         \"self\"\n      ],\n      \"test_all_any_with_dim\": [\n         \"self\"\n      ],\n      \"test_allow_tensor_metadata_change\": [\n         \"self\"\n      ],\n      \"test_apply\": [\n         \"self\"\n      ],\n      \"test_arange\": [\n         \"self\"\n      ],\n      \"test_arange_inference\": [\n         \"self\"\n      ],\n      \"test_as_subclass\": [\n         \"self\"\n      ],\n      \"test_as_tensor\": [\n         \"self\"\n      ],\n      \"test_assertEqual\": [\n         \"self\"\n      ],\n      \"test_batch_norm_cpu_inference\": [\n         \"self\"\n      ],\n      \"test_bernoulli\": [\n         \"self\"\n      ],\n      \"test_bernoulli_edge_cases\": [\n         \"self\"\n      ],\n      \"test_big_transpose\": [\n         \"self\"\n      ],\n      \"test_bitwise_ops\": [\n         \"self\"\n      ],\n      \"test_boxMullerState\": [\n         \"self\"\n      ],\n      \"test_broadcast_empty\": [\n         \"self\"\n      ],\n      \"test_c10_layer_norm\": [\n         \"self\"\n      ],\n      \"test_cartesian_prod\": [\n         \"self\"\n      ],\n      \"test_cast_binary_op\": [\n         \"self\"\n      ],\n      \"test_chunk\": [\n         \"self\"\n      ],\n      \"test_combinations\": [\n         \"self\"\n      ],\n      \"test_comparison_ops\": [\n         \"self\"\n      ],\n      \"test_comparison_ops_check_for_scalar_overflow\": [\n         \"self\"\n      ],\n      \"test_comparison_ops_check_for_zerodim_tensor_overflow\": [\n         \"self\"\n      ],\n      \"test_comparison_ops_must_take_bool_output\": [\n         \"self\"\n      ],\n      \"test_constructor_device_legacy\": [\n         \"self\"\n      ],\n      \"test_constructor_dtypes\": [\n         \"self\"\n      ],\n      \"test_contains\": [\n         \"self\"\n      ],\n      \"test_conv2\": [\n         \"self\"\n      ],\n      \"test_conv3\": [\n         \"self\"\n      ],\n      \"test_conv3_conv2_eq_valid\": [\n         \"self\"\n      ],\n      \"test_copy_broadcast\": [\n         \"self\"\n      ],\n      \"test_copy_dtypes\": [\n         \"self\"\n      ],\n      \"test_copy_many_to_one\": [\n         \"self\"\n      ],\n      \"test_copy_transpose\": [\n         \"self\"\n      ],\n      \"test_cpu_parallel\": [\n         \"self\"\n      ],\n      \"test_cross_validation\": [\n         \"self\"\n      ],\n      \"test_ctor_with_numpy_scalar_ctor\": [\n         \"self\"\n      ],\n      \"test_cuda_not_built\": [\n         \"self\"\n      ],\n      \"test_cumprod_integer_upcast\": [\n         \"self\"\n      ],\n      \"test_cumsum_integer_upcast\": [\n         \"self\"\n      ],\n      \"test_deepcopy_parameter\": [\n         \"self\"\n      ],\n      \"test_device\": [\n         \"self\"\n      ],\n      \"test_dim_reduction_less_than_64\": [\n         \"self\"\n      ],\n      \"test_dim_reduction_uint8_overflow\": [\n         \"self\"\n      ],\n      \"test_dir\": [\n         \"self\"\n      ],\n      \"test_doc\": [\n         \"self\"\n      ],\n      \"test_doc_template\": [\n         \"self\"\n      ],\n      \"test_dot_data_use\": [\n         \"self\"\n      ],\n      \"test_dtype_is_signed\": [\n         \"self\"\n      ],\n      \"test_dtype_out_match\": [\n         \"self\"\n      ],\n      \"test_dtypes\": [\n         \"self\"\n      ],\n      \"test_element_size\": [\n         \"self\"\n      ],\n      \"test_empty_full\": [\n         \"self\"\n      ],\n      \"test_empty_like\": [\n         \"self\"\n      ],\n      \"test_empty_reshape\": [\n         \"self\"\n      ],\n      \"test_empty_storage_view\": [\n         \"self\"\n      ],\n      \"test_equal\": [\n         \"self\"\n      ],\n      \"test_error_msg_type_translation\": [\n         \"self\"\n      ],\n      \"test_expand\": [\n         \"self\"\n      ],\n      \"test_fconv3_fconv2_eq\": [\n         \"self\"\n      ],\n      \"test_fft_ifft_rfft_irfft\": [\n         \"self\"\n      ],\n      \"test_fill_diagonal\": [\n         \"self\"\n      ],\n      \"test_flatten\": [\n         \"self\"\n      ],\n      \"test_from_buffer\": [\n         \"self\"\n      ],\n      \"test_from_file\": [\n         \"self\"\n      ],\n      \"test_from_numpy\": [\n         \"self\"\n      ],\n      \"test_gather\": [\n         \"self\"\n      ],\n      \"test_generator_cpu\": [\n         \"self\"\n      ],\n      \"test_half_tensor\": [\n         \"self\"\n      ],\n      \"test_has_internal_overlap\": [\n         \"self\"\n      ],\n      \"test_has_storage\": [\n         \"self\"\n      ],\n      \"test_index_add\": [\n         \"self\"\n      ],\n      \"test_index_add_all_dtypes\": [\n         \"self\"\n      ],\n      \"test_inplace_comparison_ops_require_inputs_have_same_dtype\": [\n         \"self\"\n      ],\n      \"test_inplace_division\": [\n         \"self\"\n      ],\n      \"test_is_nonzero\": [\n         \"self\"\n      ],\n      \"test_is_same_size\": [\n         \"self\"\n      ],\n      \"test_iter\": [\n         \"self\"\n      ],\n      \"test_linear_algebra_scalar_raises\": [\n         \"self\"\n      ],\n      \"test_logsumexp\": [\n         \"self\"\n      ],\n      \"test_logsumexp_dim\": [\n         \"self\"\n      ],\n      \"test_manual_seed\": [\n         \"self\"\n      ],\n      \"test_map\": [\n         \"self\"\n      ],\n      \"test_map2\": [\n         \"self\"\n      ],\n      \"test_masked_fill\": [\n         \"self\"\n      ],\n      \"test_masked_scatter\": [\n         \"self\"\n      ],\n      \"test_matmul_small_brute_force_1d_Nd\": [\n         \"self\"\n      ],\n      \"test_matmul_small_brute_force_2d_Nd\": [\n         \"self\"\n      ],\n      \"test_max\": [\n         \"self\"\n      ],\n      \"test_max_elementwise\": [\n         \"self\"\n      ],\n      \"test_mean_dim\": [\n         \"self\"\n      ],\n      \"test_median\": [\n         \"self\"\n      ],\n      \"test_memory_format\": [\n         \"self\"\n      ],\n      \"test_memory_format_contiguous_returns_same_tensor_if_already_satisfies\": [\n         \"self\"\n      ],\n      \"test_memory_format_empty\": [\n         \"self\"\n      ],\n      \"test_meshgrid\": [\n         \"self\"\n      ],\n      \"test_min\": [\n         \"self\"\n      ],\n      \"test_min_elementwise\": [\n         \"self\"\n      ],\n      \"test_mode\": [\n         \"self\"\n      ],\n      \"test_msnpu_error\": [\n         \"self\"\n      ],\n      \"test_multinomial_invalid_probs\": [\n         \"self\"\n      ],\n      \"test_multiplication_numpy_scalar\": [\n         \"self\"\n      ],\n      \"test_mv\": [\n         \"self\"\n      ],\n      \"test_mvlgamma\": [\n         \"self\"\n      ],\n      \"test_mvlgamma_argcheck\": [\n         \"self\"\n      ],\n      \"test_narrow\": [\n         \"self\"\n      ],\n      \"test_narrow_tensor\": [\n         \"self\"\n      ],\n      \"test_ndim\": [\n         \"self\"\n      ],\n      \"test_new\": [\n         \"self\"\n      ],\n      \"test_new_tensor\": [\n         \"self\"\n      ],\n      \"test_newaxis_numpy_comparison\": [\n         \"self\"\n      ],\n      \"test_newindex\": [\n         \"self\"\n      ],\n      \"test_norm_fastpaths\": [\n         \"self\"\n      ],\n      \"test_normal_shape\": [\n         \"self\"\n      ],\n      \"test_not_equal\": [\n         \"self\"\n      ],\n      \"test_numel\": [\n         \"self\"\n      ],\n      \"test_numpy_args\": [\n         \"self\"\n      ],\n      \"test_numpy_array_interface\": [\n         \"self\"\n      ],\n      \"test_numpy_index\": [\n         \"self\"\n      ],\n      \"test_numpy_non_writeable\": [\n         \"self\"\n      ],\n      \"test_numpy_unresizable\": [\n         \"self\"\n      ],\n      \"test_offset_scalar_cast\": [\n         \"self\"\n      ],\n      \"test_ones\": [\n         \"self\"\n      ],\n      \"test_ones_like\": [\n         \"self\"\n      ],\n      \"test_op_invert\": [\n         \"self\"\n      ],\n      \"test_ormqr\": [\n         \"self\"\n      ],\n      \"test_parallel_info\": [\n         \"self\"\n      ],\n      \"test_parse_numpy_int\": [\n         \"self\"\n      ],\n      \"test_parsing_double\": [\n         \"self\"\n      ],\n      \"test_parsing_int64\": [\n         \"self\"\n      ],\n      \"test_parsing_intlist\": [\n         \"self\"\n      ],\n      \"test_permute\": [\n         \"self\"\n      ],\n      \"test_pickle\": [\n         \"self\"\n      ],\n      \"test_pickle_dtype\": [\n         \"self\"\n      ],\n      \"test_pickle_parameter\": [\n         \"self\"\n      ],\n      \"test_pickle_parameter_no_requires_grad\": [\n         \"self\"\n      ],\n      \"test_pickle_size\": [\n         \"self\"\n      ],\n      \"test_pin_memory\": [\n         \"self\"\n      ],\n      \"test_polygamma_neg\": [\n         \"self\"\n      ],\n      \"test_print\": [\n         \"self\"\n      ],\n      \"test_prod_integer_upcast\": [\n         \"self\"\n      ],\n      \"test_put_\": [\n         \"self\"\n      ],\n      \"test_put_accumulate\": [\n         \"self\"\n      ],\n      \"test_python_types\": [\n         \"self\"\n      ],\n      \"test_qengine\": [\n         \"self\"\n      ],\n      \"test_randint\": [\n         \"self\"\n      ],\n      \"test_randint_inference\": [\n         \"self\"\n      ],\n      \"test_range\": [\n         \"self\"\n      ],\n      \"test_range_warning\": [\n         \"self\"\n      ],\n      \"test_renorm\": [\n         \"self\"\n      ],\n      \"test_repeat\": [\n         \"self\"\n      ],\n      \"test_repeat_interleave\": [\n         \"self\"\n      ],\n      \"test_repeat_tile\": [\n         \"self\"\n      ],\n      \"test_reshape\": [\n         \"self\"\n      ],\n      \"test_reversed\": [\n         \"self\"\n      ],\n      \"test_scalars_as_floats\": [\n         \"self\"\n      ],\n      \"test_scatter\": [\n         \"self\"\n      ],\n      \"test_scatterAdd\": [\n         \"self\"\n      ],\n      \"test_scatterFill\": [\n         \"self\"\n      ],\n      \"test_set_flush_denormal\": [\n         \"self\"\n      ],\n      \"test_show_config\": [\n         \"self\"\n      ],\n      \"test_simple_scalar_cast\": [\n         \"self\"\n      ],\n      \"test_sizeof\": [\n         \"self\"\n      ],\n      \"test_slice\": [\n         \"self\"\n      ],\n      \"test_slow_test\": [\n         \"self\"\n      ],\n      \"test_sobolengine_scrambled_highdim\": [\n         \"self\"\n      ],\n      \"test_sobolengine_scrambled_lowdim\": [\n         \"self\"\n      ],\n      \"test_sobolengine_scrambled_lowdim_default_rng\": [\n         \"self\"\n      ],\n      \"test_sobolengine_unscrambled_highdim\": [\n         \"self\"\n      ],\n      \"test_sobolengine_unscrambled_lowdim\": [\n         \"self\"\n      ],\n      \"test_sort\": [\n         \"self\"\n      ],\n      \"test_split\": [\n         \"self\"\n      ],\n      \"test_stack\": [\n         \"self\"\n      ],\n      \"test_stack_out\": [\n         \"self\"\n      ],\n      \"test_std_dim\": [\n         \"self\"\n      ],\n      \"test_storage_casts\": [\n         \"self\"\n      ],\n      \"test_structseq_repr\": [\n         \"self\"\n      ],\n      \"test_subclass_tensors\": [\n         \"self\"\n      ],\n      \"test_sum_dim\": [\n         \"self\"\n      ],\n      \"test_sum_integer_upcast\": [\n         \"self\"\n      ],\n      \"test_t\": [\n         \"self\"\n      ],\n      \"test_t_not_2d_error\": [\n         \"self\"\n      ],\n      \"test_take\": [\n         \"self\"\n      ],\n      \"test_tensor_device\": [\n         \"self\"\n      ],\n      \"test_tensor_factory\": [\n         \"self\"\n      ],\n      \"test_tensor_factory_copy_var\": [\n         \"self\"\n      ],\n      \"test_tensor_factory_type_inference\": [\n         \"self\"\n      ],\n      \"test_tensor_from_sequence\": [\n         \"self\"\n      ],\n      \"test_tensor_grad_warnings\": [\n         \"self\"\n      ],\n      \"test_tensor_set\": [\n         \"self\"\n      ],\n      \"test_tensor_set_errors\": [\n         \"self\"\n      ],\n      \"test_tensoriterator_output_setup\": [\n         \"self\"\n      ],\n      \"test_to\": [\n         \"self\"\n      ],\n      \"test_to_numpy\": [\n         \"self\"\n      ],\n      \"test_to_numpy_bool\": [\n         \"self\"\n      ],\n      \"test_to_with_tensor\": [\n         \"self\"\n      ],\n      \"test_tolist\": [\n         \"self\"\n      ],\n      \"test_topk\": [\n         \"self\"\n      ],\n      \"test_topk_arguments\": [\n         \"self\"\n      ],\n      \"test_torch_from_file\": [\n         \"self\"\n      ],\n      \"test_trilu_indices\": [\n         \"self\"\n      ],\n      \"test_type\": [\n         \"self\"\n      ],\n      \"test_type_conversion_via_dtype_name\": [\n         \"self\"\n      ],\n      \"test_unbiased\": [\n         \"self\"\n      ],\n      \"test_unbind\": [\n         \"self\"\n      ],\n      \"test_unsqueeze\": [\n         \"self\"\n      ],\n      \"test_var_dim\": [\n         \"self\"\n      ],\n      \"test_var_stability\": [\n         \"self\"\n      ],\n      \"test_view_empty\": [\n         \"self\"\n      ],\n      \"test_where_bool_tensor\": [\n         \"self\"\n      ],\n      \"test_where_invalid_device\": [\n         \"self\"\n      ],\n      \"test_where_tensor\": [\n         \"self\"\n      ],\n      \"test_xcorr3_xcorr2_eq\": [\n         \"self\"\n      ],\n      \"test_xcorr3_xcorr2_eq_full\": [\n         \"self\"\n      ],\n      \"test_zeros\": [\n         \"self\"\n      ],\n      \"test_zeros_out\": [\n         \"self\"\n      ]\n   },\n   \"_TorchMathTestMeta\": {\n      \"__init__\": [\n         \"self\",\n         \"opstr\",\n         \"args\",\n         \"reffn\",\n         \"refargs\",\n         \"input_fn\",\n         \"inputargs\",\n         \"substr\",\n         \"make_inplace\",\n         \"decorators\",\n         \"ref_backend\",\n         \"rtol\",\n         \"atol\",\n         \"dtypes\",\n         \"replace_inf_with_nan\"\n      ]\n   },\n   \"_WeightedLoss\": {\n      \"__init__\": [\n         \"self\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ]\n   },\n   \"_WorkspaceCtx\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_value\",\n         \"traceback\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"workspace_id\"\n      ]\n   },\n   \"_XNNPACKEnabled\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"objtype\"\n      ],\n      \"__set__\": [\n         \"self\",\n         \"obj\",\n         \"val\"\n      ]\n   },\n   \"__PrinterOptions\": {},\n   \"_disable_tracing\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"_netD\": {\n      \"__init__\": [\n         \"self\",\n         \"ngpu\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_netG\": {\n      \"__init__\": [\n         \"self\",\n         \"ngpu\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"input\"\n      ]\n   },\n   \"_open_buffer_reader\": {\n      \"__init__\": [\n         \"self\",\n         \"buffer\"\n      ]\n   },\n   \"_open_buffer_writer\": {\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"_open_file\": {\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\",\n         \"mode\"\n      ]\n   },\n   \"_open_zipfile_reader\": {\n      \"__init__\": [\n         \"self\",\n         \"name_or_buffer\"\n      ]\n   },\n   \"_open_zipfile_writer_buffer\": {\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"buffer\"\n      ]\n   },\n   \"_open_zipfile_writer_file\": {\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ]\n   },\n   \"_opener\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"file_like\"\n      ]\n   },\n   \"autocast\": {\n      \"__call__\": [\n         \"self\",\n         \"func\"\n      ],\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"enabled\"\n      ]\n   },\n   \"bcolors\": {},\n   \"build_ext\": {\n      \"build_extensions\": [\n         \"self\"\n      ],\n      \"create_compile_commands\": [\n         \"self\"\n      ],\n      \"get_outputs\": [\n         \"self\"\n      ],\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"capture_stdout\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"clean\": {\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"context\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"type\",\n         \"value\",\n         \"traceback\"\n      ]\n   },\n   \"cuFFTPlanCache\": {\n      \"__init__\": [\n         \"self\",\n         \"device_index\"\n      ],\n      \"clear\": [\n         \"self\"\n      ]\n   },\n   \"cuFFTPlanCacheAttrContextProp\": {\n      \"__get__\": [\n         \"self\",\n         \"obj\",\n         \"objtype\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"getter\",\n         \"setter\"\n      ],\n      \"__set__\": [\n         \"self\",\n         \"obj\",\n         \"val\"\n      ]\n   },\n   \"cuFFTPlanCacheManager\": {\n      \"__getattr__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"device\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__setattr__\": [\n         \"self\",\n         \"name\",\n         \"value\"\n      ]\n   },\n   \"cudaStatus\": {},\n   \"define_context\": {\n      \"__call__\": [\n         \"self\",\n         \"cls\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"arg_name\",\n         \"allow_default\"\n      ]\n   },\n   \"detect_anomaly\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"device\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"device\"\n      ]\n   },\n   \"deviceCountAtLeast\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"num_required_devices\"\n      ]\n   },\n   \"device_of\": {\n      \"__init__\": [\n         \"self\",\n         \"obj\"\n      ]\n   },\n   \"dont_convert\": {},\n   \"dtypes\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"dtypesIfCPU\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"dtypesIfCUDA\": {\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"emit_nvtx\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_val\",\n         \"exc_tb\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"enabled\",\n         \"record_shapes\"\n      ]\n   },\n   \"enable_grad\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"expectedFailure\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"device_type\"\n      ]\n   },\n   \"global_func\": {\n      \"AddArgument\": [\n         \"op\",\n         \"key\",\n         \"value\"\n      ],\n      \"AddBlobSync\": [\n         \"model\",\n         \"blobs\",\n         \"net\"\n      ],\n      \"AddBlobs\": [\n         \"meta_net_def\",\n         \"blob_name\",\n         \"blob_def\"\n      ],\n      \"AddDirectGradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"AddDistributedBlobSync\": [\n         \"model\",\n         \"blobs\"\n      ],\n      \"AddImageInput\": [\n         \"model\",\n         \"reader\",\n         \"batch_size\",\n         \"img_size\",\n         \"dtype\",\n         \"is_test\",\n         \"mean_per_channel\",\n         \"std_per_channel\"\n      ],\n      \"AddInput\": [\n         \"model\",\n         \"batch_size\",\n         \"db\",\n         \"db_type\"\n      ],\n      \"AddModelIdArg\": [\n         \"meta_net_def\",\n         \"net_def\"\n      ],\n      \"AddMomentumParameterUpdate\": [\n         \"train_model\",\n         \"LR\"\n      ],\n      \"AddNet\": [\n         \"meta_net_def\",\n         \"net_name\",\n         \"net_def\"\n      ],\n      \"AddNogradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"AddNullInput\": [\n         \"model\",\n         \"reader\",\n         \"batch_size\",\n         \"img_size\",\n         \"dtype\"\n      ],\n      \"AddParameterUpdate\": [\n         \"model\"\n      ],\n      \"AddPlan\": [\n         \"meta_net_def\",\n         \"plan_name\",\n         \"plan_def\"\n      ],\n      \"AddUseInputGradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"AddUseOutputGradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"AlexNet\": [\n         \"order\",\n         \"cudnn_ws\"\n      ],\n      \"Allreduce\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"Allreduce2\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"Allreduce4\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"Allreduce4Group2\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"Allreduce8\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"AllreduceFallback\": [\n         \"net\",\n         \"blobs\",\n         \"reduced_affix\",\n         \"gpu_indices\"\n      ],\n      \"ApplyTransform\": [\n         \"transform_key\",\n         \"net\"\n      ],\n      \"ApplyTransformIfFaster\": [\n         \"transform_key\",\n         \"net\",\n         \"init_net\"\n      ],\n      \"ArgsToDict\": [\n         \"args\"\n      ],\n      \"Attribute\": [\n         \"value\",\n         \"type\"\n      ],\n      \"BaseTranslate\": [\n         \"layer\",\n         \"caffe2_type\"\n      ],\n      \"Benchmark\": [\n         \"args\"\n      ],\n      \"BoolNet\": [],\n      \"BuildUniqueMutexIter\": [\n         \"init_net\",\n         \"net\",\n         \"iter\",\n         \"iter_mutex\",\n         \"iter_val\"\n      ],\n      \"CUDAExtension\": [\n         \"name\",\n         \"sources\"\n      ],\n      \"Caffe2EmbeddingGeneration\": [\n         \"args\"\n      ],\n      \"Caffe2LSTM\": [\n         \"args\"\n      ],\n      \"Caffe2TensorToNumpyArray\": [\n         \"tensor\"\n      ],\n      \"CaffeBlobToNumpyArray\": [\n         \"blob\"\n      ],\n      \"CallWithExceptionIntercept\": [\n         \"func\",\n         \"op_id_fetcher\",\n         \"net_name\"\n      ],\n      \"ChannelFirst\": [\n         \"arr\"\n      ],\n      \"ChannelLast\": [\n         \"arr\"\n      ],\n      \"ClearGlobalNetObserver\": [],\n      \"CombineConditions\": [\n         \"name\",\n         \"condition_nets\",\n         \"relation\"\n      ],\n      \"Compare\": [\n         \"args\"\n      ],\n      \"CompleteInTimeOrDie\": [\n         \"timeout_secs\"\n      ],\n      \"Const\": [\n         \"net\",\n         \"value\",\n         \"dtype\",\n         \"name\"\n      ],\n      \"ConstRecord\": [\n         \"net\",\n         \"array_record\"\n      ],\n      \"ConvertNetForDevice\": [\n         \"net\",\n         \"device\"\n      ],\n      \"ConvertProtoToBinary\": [\n         \"proto_class\",\n         \"filename\",\n         \"out_filename\"\n      ],\n      \"ConvertTensorProtosToInitNet\": [\n         \"net_params\",\n         \"input_name\"\n      ],\n      \"CopyDeviceOption\": [\n         \"op\",\n         \"src_op\"\n      ],\n      \"CountUntil\": [\n         \"num_iter\"\n      ],\n      \"CppExtension\": [\n         \"name\",\n         \"sources\"\n      ],\n      \"Create\": [\n         \"args\"\n      ],\n      \"CreateNet\": [\n         \"net\",\n         \"overwrite\",\n         \"input_blobs\"\n      ],\n      \"CreateNetOnce\": [\n         \"net\",\n         \"created_names\"\n      ],\n      \"CreateOperator\": [\n         \"operator_type\",\n         \"inputs\",\n         \"outputs\",\n         \"name\",\n         \"control_input\",\n         \"device_option\",\n         \"arg\",\n         \"engine\",\n         \"debug_info\"\n      ],\n      \"CreatePythonOperator\": [\n         \"f\",\n         \"inputs\",\n         \"outputs\",\n         \"grad_f\",\n         \"pass_workspace\",\n         \"python_func_type\"\n      ],\n      \"CurrentDeviceScope\": [],\n      \"CurrentNameScope\": [],\n      \"DeviceOption\": [\n         \"device_type\",\n         \"device_id\",\n         \"random_seed\",\n         \"node_name\",\n         \"numa_node_id\",\n         \"extra_info\"\n      ],\n      \"DeviceScope\": [\n         \"scope\",\n         \"node_name\"\n      ],\n      \"DistributedDataParallelCPU\": [],\n      \"DlopenGuard\": [\n         \"extra_flags\"\n      ],\n      \"Do\": [\n         \"name\"\n      ],\n      \"DoParallel\": [\n         \"name\"\n      ],\n      \"DoUntil\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"DoWhile\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"EmptyDeviceScope\": [],\n      \"EmptyNameScope\": [],\n      \"EnumClassKeyVals\": [\n         \"cls\"\n      ],\n      \"ErrorThresholdRow\": [\n         \"X\",\n         \"bit_rate\"\n      ],\n      \"EuthanizeIfNecessary\": [\n         \"timeout_secs\"\n      ],\n      \"Export\": [\n         \"workspace\",\n         \"net\",\n         \"params\"\n      ],\n      \"ExtractPredictorNet\": [\n         \"net_proto\",\n         \"input_blobs\",\n         \"output_blobs\",\n         \"device\",\n         \"renames\",\n         \"disabled_inputs\"\n      ],\n      \"FakeQuantization8BitsRowwise\": [\n         \"data\"\n      ],\n      \"FeedBlob\": [\n         \"name\",\n         \"arr\",\n         \"device_option\"\n      ],\n      \"FeedImmediate\": [],\n      \"FeedRecord\": [\n         \"blob_record\",\n         \"arrays\",\n         \"ws\"\n      ],\n      \"FetchBlob\": [\n         \"name\"\n      ],\n      \"FetchBlobs\": [\n         \"names\"\n      ],\n      \"FetchImmediate\": [],\n      \"FetchInt8Blob\": [\n         \"name\"\n      ],\n      \"FetchInt8BlobRealVal\": [\n         \"name\"\n      ],\n      \"FetchRecord\": [\n         \"blob_record\",\n         \"ws\",\n         \"throw_on_type_mismatch\"\n      ],\n      \"FetchTorch\": [\n         \"name\"\n      ],\n      \"FillRandomNetworkInputs\": [\n         \"net\",\n         \"input_dims\",\n         \"input_types\"\n      ],\n      \"FinalizeAfterCheckpoint\": [\n         \"model\",\n         \"blobs\",\n         \"cpu_mode\"\n      ],\n      \"For\": [\n         \"name\",\n         \"nets_or_steps\",\n         \"iter_num\"\n      ],\n      \"GIS\": [\n         \"op\"\n      ],\n      \"GetApplicationSpecificInfo\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetArgumentByName\": [\n         \"net_def\",\n         \"arg_name\"\n      ],\n      \"GetArgumentParser\": [],\n      \"GetBlobNodeProducer\": [],\n      \"GetBlobs\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetBlobsByTypePrefix\": [\n         \"meta_net_def\",\n         \"blob_type_prefix\"\n      ],\n      \"GetCheckpointParams\": [\n         \"model\"\n      ],\n      \"GetConditionBlobFromNet\": [\n         \"condition_net\"\n      ],\n      \"GetContentFromProto\": [\n         \"obj\",\n         \"function_map\"\n      ],\n      \"GetContentFromProtoString\": [\n         \"s\",\n         \"function_map\"\n      ],\n      \"GetGPUMemoryUsageStats\": [],\n      \"GetGlobalInitArgs\": [],\n      \"GetGpuPeerAccessPattern\": [],\n      \"GetGraphInJson\": [\n         \"operators_or_net\",\n         \"output_filepath\"\n      ],\n      \"GetGraphPngSafe\": [\n         \"func\"\n      ],\n      \"GetImportedOpsLibraries\": [],\n      \"GetIndexFromGradientList\": [\n         \"g_list\",\n         \"name\"\n      ],\n      \"GetLSTMParamNames\": [],\n      \"GetLearningRateBlobNames\": [\n         \"model\"\n      ],\n      \"GetNameScope\": [],\n      \"GetNet\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetNetName\": [\n         \"net\"\n      ],\n      \"GetNetOriginal\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetOpNodeProducer\": [\n         \"append_output\"\n      ],\n      \"GetOperatorCost\": [\n         \"operator\",\n         \"blobs\"\n      ],\n      \"GetOperatorMapForPlan\": [\n         \"plan_def\"\n      ],\n      \"GetPlan\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetPlanGraph\": [\n         \"plan_def\",\n         \"name\",\n         \"rankdir\"\n      ],\n      \"GetPlanOriginal\": [\n         \"meta_net_def\",\n         \"key\"\n      ],\n      \"GetPydotGraph\": [\n         \"operators_or_net\",\n         \"name\",\n         \"rankdir\",\n         \"op_node_producer\",\n         \"blob_node_producer\"\n      ],\n      \"GetPydotGraphMinimal\": [\n         \"operators_or_net\",\n         \"name\",\n         \"rankdir\",\n         \"minimal_dependency\",\n         \"op_node_producer\"\n      ],\n      \"GetSymbolTrie\": [\n         \"target\",\n         \"nm_command\",\n         \"max_depth\"\n      ],\n      \"GlobalInit\": [\n         \"args\"\n      ],\n      \"If\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"true_nets_or_steps\",\n         \"false_nets_or_steps\"\n      ],\n      \"IfNot\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"true_nets_or_steps\",\n         \"false_nets_or_steps\"\n      ],\n      \"ImmediateBlobs\": [],\n      \"Inception\": [\n         \"order\",\n         \"cudnn_ws\"\n      ],\n      \"InferBlobDevices\": [\n         \"net\"\n      ],\n      \"InferOpBlobDevices\": [\n         \"op\"\n      ],\n      \"InferOpBlobDevicesAsDict\": [\n         \"op\"\n      ],\n      \"InferOpDeviceAsBlobDevices\": [\n         \"op\"\n      ],\n      \"InferShapesAndTypes\": [\n         \"nets\",\n         \"blob_dimensions\",\n         \"nets_proto\",\n         \"blob_types\"\n      ],\n      \"InitEmptyRecord\": [\n         \"net\",\n         \"schema_or_record\",\n         \"enforce_types\"\n      ],\n      \"InitFromLSTMParams\": [\n         \"lstm_pblobs\",\n         \"param_values\"\n      ],\n      \"InitOpsLibrary\": [\n         \"name\"\n      ],\n      \"InjectCrossDeviceCopies\": [\n         \"net\",\n         \"blob_to_device\",\n         \"blob_remap\",\n         \"placeHolderOps\"\n      ],\n      \"InjectDeviceCopiesAmongNets\": [\n         \"nets\",\n         \"blob_to_device_init\"\n      ],\n      \"InjectDeviceCopiesAmongNetsWithoutB2D\": [\n         \"nets\",\n         \"blob_to_device_init\"\n      ],\n      \"IsGPUDeviceType\": [\n         \"device_type\"\n      ],\n      \"IsImmediate\": [],\n      \"IsOperator\": [\n         \"op_type\"\n      ],\n      \"IsOperatorWithEngine\": [\n         \"op_type\",\n         \"engine\"\n      ],\n      \"LOBPCG_call_tracker\": [\n         \"self\"\n      ],\n      \"LSTMCell\": [\n         \"input\",\n         \"hidden\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"LSTMCellC\": [],\n      \"LSTMCellF\": [\n         \"input\",\n         \"hx\",\n         \"cx\"\n      ],\n      \"LSTMCellS\": [\n         \"x\",\n         \"hx\",\n         \"cx\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"LSTMWithAttention\": [\n         \"model\",\n         \"decoder_inputs\",\n         \"decoder_input_lengths\",\n         \"initial_decoder_hidden_state\",\n         \"initial_decoder_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"encoder_output_dim\",\n         \"encoder_outputs\",\n         \"encoder_lengths\",\n         \"decoder_input_dim\",\n         \"decoder_state_dim\",\n         \"scope\",\n         \"attention_type\",\n         \"outputs_with_grads\",\n         \"weighted_encoder_outputs\",\n         \"lstm_memory_optimization\",\n         \"attention_memory_optimization\",\n         \"forget_bias\",\n         \"forward_only\"\n      ],\n      \"LoadModel\": [\n         \"path\",\n         \"model\",\n         \"use_ideep\"\n      ],\n      \"MLP\": [\n         \"order\",\n         \"cudnn_ws\"\n      ],\n      \"MainOpFunctionThatThrowsCustomError\": [\n         \"inputs\",\n         \"_\"\n      ],\n      \"MainOpFunctionThatThrowsCustomErrorInBuilder\": [\n         \"inputs\",\n         \"_\"\n      ],\n      \"MakeArgument\": [\n         \"key\",\n         \"value\"\n      ],\n      \"Map\": [\n         \"keys\",\n         \"values\",\n         \"keys_name\",\n         \"values_name\",\n         \"lengths_blob\"\n      ],\n      \"MapWithEvicted\": [\n         \"keys\",\n         \"values\",\n         \"keys_name\",\n         \"values_name\",\n         \"lengths_blob\",\n         \"evicted_values\"\n      ],\n      \"MaybeAddColor\": [\n         \"s\",\n         \"color\"\n      ],\n      \"MergeConditionNets\": [\n         \"name\",\n         \"condition_nets\",\n         \"relation\"\n      ],\n      \"MiLSTMCell\": [\n         \"x\",\n         \"hx\",\n         \"cx\",\n         \"w_ih\",\n         \"w_hh\",\n         \"alpha\",\n         \"beta_i\",\n         \"beta_h\",\n         \"bias\"\n      ],\n      \"NCHW2NHWC\": [\n         \"tensor\"\n      ],\n      \"NHWC2NCHW\": [\n         \"tensor\"\n      ],\n      \"NameScope\": [\n         \"prefix\",\n         \"reset\"\n      ],\n      \"NamedTuple\": [\n         \"name_prefix\"\n      ],\n      \"NeedAll\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"NewRecord\": [\n         \"net\",\n         \"schema\"\n      ],\n      \"NotNet\": [\n         \"condition_blob_or_net\"\n      ],\n      \"NumpyArrayToCaffe2Tensor\": [\n         \"arr\",\n         \"name\"\n      ],\n      \"OnCPU\": [],\n      \"OnGPU\": [\n         \"gpu_id\"\n      ],\n      \"OpAlmostEqual\": [\n         \"op_a\",\n         \"op_b\",\n         \"ignore_fields\"\n      ],\n      \"Optimize\": [\n         \"args\"\n      ],\n      \"OptimizeGradientMemory\": [\n         \"model\",\n         \"input_shapes\",\n         \"excluded_blobs\",\n         \"recycle_activations\"\n      ],\n      \"OverFeat\": [\n         \"order\",\n         \"cudnn_ws\"\n      ],\n      \"Parallelize\": [\n         \"model_helper_obj\",\n         \"input_builder_fun\",\n         \"forward_pass_builder_fun\",\n         \"param_update_builder_fun\",\n         \"optimizer_builder_fun\",\n         \"post_sync_builder_fun\",\n         \"pre_grad_net_transformer_fun\",\n         \"net_transformer_fun\",\n         \"devices\",\n         \"rendezvous\",\n         \"net_type\",\n         \"broadcast_computed_params\",\n         \"optimize_gradient_memory\",\n         \"dynamic_memory_management\",\n         \"blobs_to_keep\",\n         \"use_nccl\",\n         \"max_concurrent_distributed_ops\",\n         \"cpu_device\",\n         \"ideep\",\n         \"num_threads_per_device\",\n         \"shared_model\",\n         \"combine_spatial_bn\",\n         \"barrier_net_timeout_sec\"\n      ],\n      \"Parallelize_BMUF\": [\n         \"model_helper_obj\",\n         \"input_builder_fun\",\n         \"forward_pass_builder_fun\",\n         \"param_update_builder_fun\",\n         \"block_learning_rate\",\n         \"block_momentum\",\n         \"devices\",\n         \"rendezvous\",\n         \"net_type\",\n         \"master_device\",\n         \"use_nccl\",\n         \"nesterov\",\n         \"optimize_gradient_memory\",\n         \"reset_momentum_sgd\",\n         \"warmup_iterations\",\n         \"max_concurrent_distributed_ops\",\n         \"add_blobs_to_sync\",\n         \"num_threads_per_device\",\n         \"cpu_device\",\n         \"barrier_net_timeout_sec\"\n      ],\n      \"Parallelize_CPU\": [],\n      \"Parallelize_CPU_BMUF\": [],\n      \"Parallelize_GPU\": [],\n      \"Parallelize_GPU_BMUF\": [],\n      \"Parallelize_iDeep\": [],\n      \"ParameterSharing\": [\n         \"shared_scopes\"\n      ],\n      \"Predictor\": [\n         \"init_net\",\n         \"predict_net\"\n      ],\n      \"PrintTrie\": [\n         \"trie\",\n         \"prefix\",\n         \"max_depth\",\n         \"min_size\",\n         \"color\"\n      ],\n      \"Prune2Sparse\": [\n         \"cur\",\n         \"id2node\",\n         \"name2id\",\n         \"ops\",\n         \"model\"\n      ],\n      \"PyTorchModule\": [\n         \"helper\",\n         \"model\",\n         \"sample_arguments\",\n         \"caffe2_inputs\",\n         \"prefix_name\"\n      ],\n      \"RawTuple\": [\n         \"num_fields\",\n         \"name_prefix\"\n      ],\n      \"ReadableSize\": [\n         \"num\"\n      ],\n      \"RefreshRegisteredOperators\": [],\n      \"ReplaceBlobs\": [\n         \"meta_net_def\",\n         \"blob_name\",\n         \"blob_def\"\n      ],\n      \"ResetBlobs\": [\n         \"blobs\"\n      ],\n      \"ResetWorkspace\": [\n         \"root_folder\"\n      ],\n      \"RunEpoch\": [\n         \"args\",\n         \"epoch\",\n         \"train_model\",\n         \"test_model\",\n         \"total_batch_size\",\n         \"num_shards\",\n         \"expname\",\n         \"explog\"\n      ],\n      \"RunInitNet\": [\n         \"model\"\n      ],\n      \"RunNet\": [\n         \"name\",\n         \"num_iter\",\n         \"allow_fail\"\n      ],\n      \"RunNetOnce\": [\n         \"net\"\n      ],\n      \"RunOperatorImmediate\": [\n         \"op\"\n      ],\n      \"RunOperatorMultiple\": [\n         \"operator\",\n         \"num_runs\"\n      ],\n      \"RunOperatorOnce\": [\n         \"operator\"\n      ],\n      \"RunOperatorsOnce\": [\n         \"operators\"\n      ],\n      \"RunPlan\": [\n         \"plan_or_step\"\n      ],\n      \"RunPlanInBackground\": [\n         \"plan_or_step\"\n      ],\n      \"RunWarmup\": [\n         \"model\"\n      ],\n      \"SaveModel\": [\n         \"args\",\n         \"train_model\",\n         \"epoch\",\n         \"use_ideep\"\n      ],\n      \"ScopedBlobReference\": [\n         \"name\"\n      ],\n      \"ScopedName\": [\n         \"name\"\n      ],\n      \"SetBlobsOrder\": [\n         \"meta_net_def\",\n         \"blobs_order\"\n      ],\n      \"SetPreLoadBlobs\": [\n         \"meta_net_def\",\n         \"pre_load_blobs\"\n      ],\n      \"SetTensorBoundShapes\": [\n         \"meta_net_def\",\n         \"tensor_bound_shapes\"\n      ],\n      \"SetupMPI\": [],\n      \"StartImmediate\": [\n         \"i_know\"\n      ],\n      \"StartMint\": [\n         \"root_folder\",\n         \"port\"\n      ],\n      \"StopImmediate\": [],\n      \"StringifyBlobName\": [\n         \"name\"\n      ],\n      \"StringifyNetName\": [\n         \"name\"\n      ],\n      \"StringifyProto\": [\n         \"obj\"\n      ],\n      \"SubFunctionThatThrowsCustomError\": [],\n      \"Switch\": [\n         \"name\"\n      ],\n      \"SwitchNot\": [\n         \"name\"\n      ],\n      \"Synchronize\": [\n         \"model\",\n         \"timeout_sec\"\n      ],\n      \"TemporaryFileName\": [],\n      \"Train\": [\n         \"args\"\n      ],\n      \"TranslateAccuracy\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateBatchNorm\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateConcat\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateConv\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateConvNd\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateCrop\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateData\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateDeconv\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateDropout\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateElementWise\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateFlatten\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateInnerProduct\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateInput\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateInstanceNorm\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateLRN\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateModel\": [],\n      \"TranslatePRelu\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslatePool\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslatePool3D\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateROIPooling\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateReduction\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateRelu\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateReshape\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateScale\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateSigmoid\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateSoftmax\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateSoftmaxWithLoss\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateTanH\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TranslateVideoData\": [\n         \"layer\",\n         \"pretrained_blobs\",\n         \"is_test\"\n      ],\n      \"TryReadProtoWithClass\": [\n         \"cls\",\n         \"s\"\n      ],\n      \"Tuple\": [],\n      \"TypedDict\": [\n         \"name\",\n         \"attrs\",\n         \"total\"\n      ],\n      \"Until\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"VGGA\": [\n         \"order\",\n         \"cudnn_ws\"\n      ],\n      \"While\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"WorkspaceGuard\": [\n         \"workspace_name\"\n      ],\n      \"_AddBarrierToModelNets\": [\n         \"model\",\n         \"barrier_net_timeout_sec\"\n      ],\n      \"_AddDynamicMemoryOptimization\": [\n         \"model\",\n         \"blobs_to_keep\",\n         \"devices\"\n      ],\n      \"_AddGradientOperators\": [\n         \"devices\",\n         \"model\",\n         \"losses_by_gpu\"\n      ],\n      \"_AdjustDims\": [\n         \"op_def\",\n         \"arg_map\",\n         \"pads\",\n         \"dim1\",\n         \"dim2\"\n      ],\n      \"_AllReduce\": [\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"param\",\n         \"use_nccl\",\n         \"control_input\"\n      ],\n      \"_AllReduceBlobs\": [\n         \"blob_names\",\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"rendezvous\",\n         \"use_nccl\",\n         \"max_concurrent_distributed_ops\"\n      ],\n      \"_AllReduceBlobsDistributed\": [\n         \"blob_names\",\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"rendezvous\",\n         \"max_concurrent_distributed_ops\"\n      ],\n      \"_AllReduceBlobsSingleHost\": [\n         \"blob_names\",\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"use_nccl\"\n      ],\n      \"_AnalyzeOperators\": [\n         \"model\"\n      ],\n      \"_AppendNets\": [\n         \"nets_or_steps\"\n      ],\n      \"_Blob_feed\": [\n         \"blob\",\n         \"arg\",\n         \"device_option\"\n      ],\n      \"_Blob_to_torch\": [\n         \"blob\"\n      ],\n      \"_Broadcast\": [\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"param\",\n         \"use_nccl\"\n      ],\n      \"_BroadcastComputedParams\": [\n         \"devices\",\n         \"model\",\n         \"rendezvous\",\n         \"use_nccl\"\n      ],\n      \"_BroadcastComputedParamsDistributed\": [\n         \"devices\",\n         \"model\",\n         \"rendezvous\",\n         \"use_nccl\"\n      ],\n      \"_BroadcastComputedParamsSingleHost\": [\n         \"devices\",\n         \"model\",\n         \"use_nccl\"\n      ],\n      \"_CPUInterDeviceBatchNormalization\": [\n         \"model\"\n      ],\n      \"_ComputeBlobsToSync\": [\n         \"model\"\n      ],\n      \"_ConvBase\": [\n         \"model\",\n         \"is_nd\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"WeightInitializer\",\n         \"BiasInitializer\",\n         \"group\",\n         \"transform_inputs\",\n         \"use_cudnn\",\n         \"order\",\n         \"cudnn_exhaustive_search\",\n         \"ws_nbytes_limit\",\n         \"float16_compute\"\n      ],\n      \"_CopyConditionBlobNet\": [\n         \"condition_blob\"\n      ],\n      \"_CreateBarrierNet\": [\n         \"model\",\n         \"init_net\",\n         \"name_prefix\",\n         \"timeout_sec\"\n      ],\n      \"_CreateOrCloneCommonWorld\": [\n         \"net\",\n         \"common_world_blob\",\n         \"rendezvous\",\n         \"name\",\n         \"timeout_sec\"\n      ],\n      \"_Dirichlet_backward\": [\n         \"x\",\n         \"concentration\",\n         \"grad_output\"\n      ],\n      \"_FC_or_packed_FC\": [\n         \"model\",\n         \"op_call\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"weight_init\",\n         \"bias_init\",\n         \"WeightInitializer\",\n         \"BiasInitializer\",\n         \"enable_tensor_core\",\n         \"float16_compute\"\n      ],\n      \"_ForEachDevice\": [\n         \"devices\",\n         \"f\",\n         \"device_type\",\n         \"device_prefix\",\n         \"scoped\"\n      ],\n      \"_GPUInterDeviceBatchNormalization\": [\n         \"model\"\n      ],\n      \"_GetBlobDimMap\": [\n         \"net\",\n         \"net_params\",\n         \"dummy_input\"\n      ],\n      \"_GetFreeFlaskPort\": [],\n      \"_GetInputDims\": [\n         \"caffe_net\"\n      ],\n      \"_GetLegacyDims\": [\n         \"net\",\n         \"net_params\",\n         \"dummy_input\",\n         \"legacy_pad_ops\"\n      ],\n      \"_GetLegacyPadArgs\": [\n         \"op_def\",\n         \"arg_map\"\n      ],\n      \"_GetRegisteredOperators\": [],\n      \"_GetReverseOrderedGrads\": [\n         \"model\"\n      ],\n      \"_GroupByDevice\": [\n         \"model\",\n         \"devices\",\n         \"params\",\n         \"non_data_params\"\n      ],\n      \"_InceptionModule\": [\n         \"model\",\n         \"input_blob\",\n         \"input_depth\",\n         \"output_name\",\n         \"conv1_depth\",\n         \"conv3_depths\",\n         \"conv5_depths\",\n         \"pool_depth\"\n      ],\n      \"_InferBlobDevice\": [\n         \"model\"\n      ],\n      \"_InitDataType\": [],\n      \"_InterleaveOps\": [\n         \"model\"\n      ],\n      \"_IsGPUBlob\": [\n         \"model\",\n         \"blob_name\"\n      ],\n      \"_IsIDEEPBlob\": [\n         \"model\",\n         \"blob_name\"\n      ],\n      \"_IsNets\": [\n         \"nets_or_steps\"\n      ],\n      \"_LSTM\": [\n         \"cell_class\",\n         \"model\",\n         \"input_blob\",\n         \"seq_lengths\",\n         \"initial_states\",\n         \"dim_in\",\n         \"dim_out\",\n         \"scope\",\n         \"outputs_with_grads\",\n         \"return_params\",\n         \"memory_optimization\",\n         \"forget_bias\",\n         \"forward_only\",\n         \"drop_states\",\n         \"return_last_layer_only\",\n         \"static_rnn_unroll_size\"\n      ],\n      \"_MakeList\": [\n         \"input\"\n      ],\n      \"_OptimizeGradientMemorySimple\": [\n         \"model\",\n         \"losses_by_gpu\",\n         \"devices\"\n      ],\n      \"_PrependNets\": [\n         \"nets_or_steps\"\n      ],\n      \"_ProtoMapGet\": [\n         \"field\",\n         \"key\"\n      ],\n      \"_PruneParametersForSharing\": [\n         \"model\"\n      ],\n      \"_RectifyInputOutput\": [\n         \"blobs\",\n         \"net\"\n      ],\n      \"_RectifyName\": [\n         \"blob_reference_or_name\"\n      ],\n      \"_RectifyNames\": [\n         \"blob_references_or_names\"\n      ],\n      \"_RegisterPythonImpl\": [\n         \"f\",\n         \"grad_f\",\n         \"python_func_type\",\n         \"pass_workspace\"\n      ],\n      \"_RemapParameterBlobsForSharedModel\": [\n         \"model\",\n         \"all_params\"\n      ],\n      \"_RemoveLegacyPad\": [\n         \"net\",\n         \"net_params\",\n         \"input_dims\"\n      ],\n      \"_RunComparison\": [\n         \"model\",\n         \"blob_name\",\n         \"device\"\n      ],\n      \"_RunOnceIf\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"_RunOnceIfNot\": [\n         \"name\",\n         \"condition_blob_or_net\",\n         \"nets_or_steps\"\n      ],\n      \"_ShouldInclude\": [\n         \"net_state\",\n         \"layer\"\n      ],\n      \"_StateMeetsRule\": [\n         \"state\",\n         \"rule\"\n      ],\n      \"_StringifyName\": [\n         \"name\",\n         \"expected_type\"\n      ],\n      \"_SyncAllParams\": [\n         \"devices\",\n         \"model\",\n         \"init_net\",\n         \"net\",\n         \"rendezvous\",\n         \"unique_param_names\",\n         \"max_concurrent_distributed_ops\"\n      ],\n      \"_SyncAllParamsDistributed\": [\n         \"devices\",\n         \"model\",\n         \"init_net\",\n         \"net\",\n         \"rendezvous\",\n         \"unique_param_names\",\n         \"max_concurrent_distributed_ops\"\n      ],\n      \"_SyncAllParamsSingleHost\": [\n         \"devices\",\n         \"model\",\n         \"net\",\n         \"unique_param_names\"\n      ],\n      \"_TensorCPU_reshape\": [\n         \"self\",\n         \"shape\"\n      ],\n      \"_TensorCPU_shape\": [\n         \"self\"\n      ],\n      \"_Tensor_to_torch\": [\n         \"tensor\"\n      ],\n      \"_TranslateStridePadKernelHelper\": [\n         \"param\",\n         \"caffe_op\"\n      ],\n      \"_ValidateParams\": [\n         \"params\"\n      ],\n      \"_Workspace_create_net_with_exception_intercept\": [\n         \"ws\",\n         \"net\",\n         \"overwrite\"\n      ],\n      \"_Workspace_feed_blob\": [\n         \"ws\",\n         \"name\",\n         \"arr\",\n         \"device_option\"\n      ],\n      \"_Workspace_fetch_int8_blob\": [\n         \"ws\",\n         \"name\"\n      ],\n      \"_Workspace_remove_blob\": [\n         \"ws\",\n         \"blob\"\n      ],\n      \"_Workspace_run\": [\n         \"ws\",\n         \"obj\"\n      ],\n      \"__allow_nonbracketed_mutation\": [],\n      \"__and_\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"__call__\": [\n         \"self\",\n         \"func\"\n      ],\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__getitem_\": [\n         \"g\",\n         \"self\",\n         \"i\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ],\n      \"__interpolate\": [\n         \"g\",\n         \"input\",\n         \"size\",\n         \"scale_factor\",\n         \"mode\",\n         \"align_corners\",\n         \"recompute_scale_factor\"\n      ],\n      \"__lshift_\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"__or_\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"__rshift_\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"_accepted_compilers_for_platform\": [],\n      \"_accumulate\": [\n         \"iterable\",\n         \"fn\"\n      ],\n      \"_adaptive_max_pool1d\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"_adaptive_max_pool2d\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"_adaptive_max_pool3d\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"_adaptive_pool\": [\n         \"name\",\n         \"type\",\n         \"tuple_fn\",\n         \"fn\"\n      ],\n      \"_add_attribute\": [\n         \"node\",\n         \"key\",\n         \"value\",\n         \"aten\"\n      ],\n      \"_add_gradient_scope\": [\n         \"shapes\",\n         \"blob_name_tracker\",\n         \"ops\"\n      ],\n      \"_add_net_to_dict\": [\n         \"net_dict\",\n         \"net\"\n      ],\n      \"_add_padding_ref\": [\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"ret_lengths\",\n         \"data\",\n         \"lengths\",\n         \"start_padding\",\n         \"end_padding\"\n      ],\n      \"_add_script_class\": [\n         \"cls\",\n         \"name\"\n      ],\n      \"_add_single_target_ifneeded\": [\n         \"g\"\n      ],\n      \"_add_suffixes\": [\n         \"tensor_str\",\n         \"suffixes\",\n         \"indent\",\n         \"force_newline\"\n      ],\n      \"_add_tf_shape\": [\n         \"attr_dict\",\n         \"ints\"\n      ],\n      \"_addindent\": [\n         \"s_\",\n         \"numSpaces\"\n      ],\n      \"_all_contexts_cleaned_up\": [\n         \"timeout_seconds\"\n      ],\n      \"_apply_fc_weight_for_sum_match\": [\n         \"model\",\n         \"input\",\n         \"dim_in\",\n         \"dim_out\",\n         \"scope\",\n         \"name\"\n      ],\n      \"_arange_cast_helper\": [\n         \"g\",\n         \"end\",\n         \"start\",\n         \"step\",\n         \"dtype\"\n      ],\n      \"_arg_val\": [\n         \"arg\"\n      ],\n      \"_as_tuple\": [\n         \"x\"\n      ],\n      \"_assertGradAndGradgradChecks\": [\n         \"test_case\",\n         \"apply_fn\",\n         \"inputs\"\n      ],\n      \"_assert_arrays_equal\": [\n         \"actual\",\n         \"ref\",\n         \"err_msg\"\n      ],\n      \"_assert_close\": [\n         \"value1\",\n         \"value2\",\n         \"threshold\",\n         \"err_msg\"\n      ],\n      \"_assert_records_equal\": [\n         \"actual\",\n         \"ref\"\n      ],\n      \"_autograd_grad\": [\n         \"outputs\",\n         \"inputs\",\n         \"grad_outputs\",\n         \"create_graph\",\n         \"retain_graph\"\n      ],\n      \"_avg_pool\": [\n         \"name\",\n         \"tuple_fn\"\n      ],\n      \"_avgpool_helper\": [\n         \"tuple_fn\",\n         \"padding\",\n         \"kernel_size\",\n         \"stride\",\n         \"divisor_override\",\n         \"name\"\n      ],\n      \"_backend_type_repr\": [\n         \"self\"\n      ],\n      \"_bad_tensor_splits\": [\n         \"draw\"\n      ],\n      \"_base_url\": [\n         \"opset_version\"\n      ],\n      \"_batch_capacitance_tril\": [\n         \"W\",\n         \"D\"\n      ],\n      \"_batch_lowrank_logdet\": [\n         \"W\",\n         \"D\",\n         \"capacitance_tril\"\n      ],\n      \"_batch_lowrank_mahalanobis\": [\n         \"W\",\n         \"D\",\n         \"x\",\n         \"capacitance_tril\"\n      ],\n      \"_batch_mahalanobis\": [\n         \"bL\",\n         \"bx\"\n      ],\n      \"_batch_mv\": [\n         \"bmat\",\n         \"bvec\"\n      ],\n      \"_batch_trace_XXT\": [\n         \"bmat\"\n      ],\n      \"_biject_to_cat\": [\n         \"constraint\"\n      ],\n      \"_biject_to_simplex\": [\n         \"constraint\"\n      ],\n      \"_biject_to_stack\": [\n         \"constraint\"\n      ],\n      \"_black_list_in_opset\": [\n         \"name\"\n      ],\n      \"_blob_to_node\": [\n         \"producing_ops\",\n         \"shapes\",\n         \"name\"\n      ],\n      \"_broadcast_coalesced_reshape\": [\n         \"tensors\",\n         \"devices\",\n         \"detach\"\n      ],\n      \"_build\": [\n         \"model\",\n         \"optimizer\",\n         \"weights_only\",\n         \"use_param_info_optim\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"_buildEquivalentAffineTransforms2d\": [\n         \"device\",\n         \"input_size\",\n         \"output_size\",\n         \"angle_rad\"\n      ],\n      \"_buildEquivalentAffineTransforms3d\": [\n         \"device\",\n         \"input_size\",\n         \"output_size\",\n         \"angle_rad\",\n         \"axis_vector\"\n      ],\n      \"_build_faulty_backend_options\": [\n         \"faulty_agent_fixture\",\n         \"faulty_messages\",\n         \"messages_to_delay\"\n      ],\n      \"_build_multidim_tensor\": [\n         \"dim\",\n         \"dim_size\",\n         \"value\"\n      ],\n      \"_build_rpc_profiling_key\": [\n         \"exec_type\",\n         \"func_name\",\n         \"current_worker_name\",\n         \"dst_worker_name\"\n      ],\n      \"_build_tensor\": [\n         \"size\",\n         \"value\"\n      ],\n      \"_build_test\": [\n         \"configs\",\n         \"bench_op\",\n         \"OperatorTestCase\",\n         \"run_backward\",\n         \"op_name_function\"\n      ],\n      \"_build_tree\": [\n         \"paths\"\n      ],\n      \"_calc_attention_logits_from_sum_match\": [\n         \"model\",\n         \"decoder_hidden_encoder_outputs_sum\",\n         \"encoder_output_dim\",\n         \"scope\"\n      ],\n      \"_calc_attention_weights\": [\n         \"model\",\n         \"attention_logits_transposed\",\n         \"scope\",\n         \"encoder_lengths\"\n      ],\n      \"_calc_norm_ratio\": [\n         \"model\",\n         \"params\",\n         \"name_scope\",\n         \"param_to_device\",\n         \"max_gradient_norm\"\n      ],\n      \"_calc_scale_factor\": [\n         \"tensor\"\n      ],\n      \"_calc_weighted_context\": [\n         \"model\",\n         \"encoder_outputs_transposed\",\n         \"encoder_output_dim\",\n         \"attention_weights_3d\",\n         \"scope\"\n      ],\n      \"_calculate_correct_fan\": [\n         \"tensor\",\n         \"mode\"\n      ],\n      \"_calculate_dynamic_per_channel_qparams\": [\n         \"X\",\n         \"dtype\"\n      ],\n      \"_calculate_dynamic_qparams\": [\n         \"X\",\n         \"dtype\",\n         \"reduce_range\"\n      ],\n      \"_calculate_fan_in_and_fan_out\": [\n         \"tensor\"\n      ],\n      \"_call_method\": [\n         \"method\",\n         \"obj_rref\"\n      ],\n      \"_call_method_on_rref\": [\n         \"method\",\n         \"rref\"\n      ],\n      \"_call_remote_embedding\": [\n         \"cls\",\n         \"embedding_rref\",\n         \"input\",\n         \"offsets\",\n         \"per_sample_weights\"\n      ],\n      \"_cast\": [\n         \"value\",\n         \"dtype\"\n      ],\n      \"_cast_func_template\": [\n         \"to_i\",\n         \"g\",\n         \"input\",\n         \"non_blocking\"\n      ],\n      \"_cast_to_type\": [\n         \"g\",\n         \"input\",\n         \"to_type\"\n      ],\n      \"_check_balance\": [\n         \"device_ids\"\n      ],\n      \"_check_capability\": [],\n      \"_check_default_pg\": [],\n      \"_check_dependencies\": [\n         \"m\"\n      ],\n      \"_check_dill_version\": [\n         \"pickle_module\"\n      ],\n      \"_check_directly_compile_overloaded\": [\n         \"obj\"\n      ],\n      \"_check_driver\": [],\n      \"_check_forward_method\": [\n         \"model\"\n      ],\n      \"_check_if_cpu\": [\n         \"blob\"\n      ],\n      \"_check_if_forward\": [\n         \"blob\"\n      ],\n      \"_check_is_script_module\": [\n         \"model\"\n      ],\n      \"_check_list_size\": [\n         \"out_len\",\n         \"get_infos\",\n         \"out\"\n      ],\n      \"_check_module_exists\": [\n         \"name\"\n      ],\n      \"_check_no_signature\": [\n         \"func\"\n      ],\n      \"_check_overload_defaults\": [\n         \"impl_defaults\",\n         \"overload_defaults\",\n         \"loc\"\n      ],\n      \"_check_param_device\": [\n         \"param\",\n         \"old_param_device\"\n      ],\n      \"_check_requires_grad\": [\n         \"inputs\",\n         \"input_type\",\n         \"strict\"\n      ],\n      \"_check_rpc_done\": [\n         \"rank_distance\"\n      ],\n      \"_check_seekable\": [\n         \"f\"\n      ],\n      \"_check_single_tensor\": [\n         \"param\",\n         \"param_name\"\n      ],\n      \"_check_tensor_list\": [\n         \"param\",\n         \"param_name\"\n      ],\n      \"_check_trace\": [\n         \"check_inputs\",\n         \"func\",\n         \"traced_func\",\n         \"check_tolerance\",\n         \"strict\",\n         \"force_outplace\",\n         \"is_trace_module\",\n         \"_module_class\"\n      ],\n      \"_clamp_by_zero\": [\n         \"x\"\n      ],\n      \"_clear_debug_info\": [\n         \"ops\",\n         \"perform_clear\"\n      ],\n      \"_clear_fn_overloads\": [\n         \"qual_name\"\n      ],\n      \"_clipped_sigmoid\": [\n         \"x\"\n      ],\n      \"_clone_inputs\": [\n         \"args\"\n      ],\n      \"_compare_large_trilu_indices\": [\n         \"self\",\n         \"row\",\n         \"col\",\n         \"offset\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"_compare_owner_value\": [\n         \"context_id\",\n         \"rref\",\n         \"grad\"\n      ],\n      \"_compare_trilu_indices\": [\n         \"self\",\n         \"row\",\n         \"col\",\n         \"offset\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"_compared_saved_loaded\": [\n         \"self\",\n         \"m\"\n      ],\n      \"_comparison_operator\": [\n         \"g\",\n         \"input\",\n         \"other\",\n         \"op_name\"\n      ],\n      \"_compile_and_register_class\": [\n         \"obj\",\n         \"rcb\",\n         \"qualified_name\"\n      ],\n      \"_compile_function_with_overload\": [\n         \"overload_fn\",\n         \"qual_name\",\n         \"impl_fn\"\n      ],\n      \"_compress_uniform_simplified\": [\n         \"X\",\n         \"bit_rate\",\n         \"xmin\",\n         \"xmax\",\n         \"fp16_scale_bias\"\n      ],\n      \"_compute_in_out\": [\n         \"ops\"\n      ],\n      \"_compute_norm\": [\n         \"t\",\n         \"n\",\n         \"dim\"\n      ],\n      \"_compute_nparams_toprune\": [\n         \"amount\",\n         \"tensor_size\"\n      ],\n      \"_compute_tree_height\": [\n         \"g\",\n         \"root\"\n      ],\n      \"_constant_fill\": [\n         \"g\",\n         \"sizes\",\n         \"dtype\",\n         \"const_value\"\n      ],\n      \"_context_registry\": [],\n      \"_conv_1d_output_size\": [\n         \"size\",\n         \"kernel\",\n         \"pad\",\n         \"dilation\",\n         \"stride\"\n      ],\n      \"_conv_2d_offsets_dims\": [\n         \"batch_size\",\n         \"size\",\n         \"kernel\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"stride_h\",\n         \"stride_w\",\n         \"deformable_group\"\n      ],\n      \"_conv_2d_output_size\": [\n         \"size\",\n         \"kernel\",\n         \"pad_h\",\n         \"pad_w\",\n         \"dilation\",\n         \"stride_h\",\n         \"stride_w\"\n      ],\n      \"_conv_2d_random_offsets\": [\n         \"batch_size\",\n         \"kernel\",\n         \"dims\",\n         \"num_deformable_group\"\n      ],\n      \"_conv_2d_shuffle_offsets\": [\n         \"batch_size\",\n         \"kernel\",\n         \"dims\",\n         \"num_deformable_group\",\n         \"input_channels\",\n         \"output_channels\"\n      ],\n      \"_conv_output_shape\": [\n         \"input_size\",\n         \"kernel_size\",\n         \"padding\",\n         \"stride\",\n         \"dilation\",\n         \"output_padding\"\n      ],\n      \"_convert_script\": [\n         \"model\",\n         \"is_dynamic\",\n         \"debug\"\n      ],\n      \"_convert_t\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_convert_to_ssa\": [\n         \"shapes\",\n         \"blob_name_tracker\",\n         \"ops\"\n      ],\n      \"_convolution\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"transposed\",\n         \"output_padding\",\n         \"groups\",\n         \"benchmark\",\n         \"deterministic\",\n         \"cudnn_enabled\"\n      ],\n      \"_copy_to_script_wrapper\": [\n         \"fn\"\n      ],\n      \"_cpu_deserialize\": [\n         \"obj\",\n         \"location\"\n      ],\n      \"_cpu_tag\": [\n         \"obj\"\n      ],\n      \"_create_build_env\": [],\n      \"_create_interpreter_name_lookup_fn\": [\n         \"frames_up\"\n      ],\n      \"_create_named_tuple\": [\n         \"t\",\n         \"unqual_name\",\n         \"field_names\"\n      ],\n      \"_create_test\": [\n         \"bench_op_obj\",\n         \"orig_test_attrs\",\n         \"tags\",\n         \"OperatorTestCase\",\n         \"run_backward\",\n         \"bwd_input\"\n      ],\n      \"_cubic_interpolate\": [\n         \"x1\",\n         \"f1\",\n         \"g1\",\n         \"x2\",\n         \"f2\",\n         \"g2\",\n         \"bounds\"\n      ],\n      \"_cuda\": [\n         \"self\",\n         \"device\",\n         \"non_blocking\"\n      ],\n      \"_cuda_deserialize\": [\n         \"obj\",\n         \"location\"\n      ],\n      \"_cuda_tag\": [\n         \"obj\"\n      ],\n      \"_cudnn_convolution_algo_count\": [\n         \"direction\"\n      ],\n      \"_cudnn_supports\": [\n         \"dilation\",\n         \"nhwc\"\n      ],\n      \"_current\": [\n         \"cls\",\n         \"value\",\n         \"required\"\n      ],\n      \"_data\": [\n         \"draw\"\n      ],\n      \"_data_and_scale\": [\n         \"data_min_size\",\n         \"data_max_size\",\n         \"examples_min_number\",\n         \"examples_max_number\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"_dataset\": [\n         \"draw\",\n         \"min_elements\",\n         \"max_elements\"\n      ],\n      \"_decide_add_node_names\": [\n         \"add_node_names\",\n         \"operator_export_type\"\n      ],\n      \"_decide_constant_folding\": [\n         \"do_constant_folding\",\n         \"operator_export_type\"\n      ],\n      \"_decide_external_data_format\": [\n         \"use_external_data_format\",\n         \"operator_export_type\",\n         \"f\"\n      ],\n      \"_decide_keep_init_as_input\": [\n         \"keep_initializers_as_inputs\",\n         \"operator_export_type\",\n         \"opset_version\"\n      ],\n      \"_dense_features_map\": [\n         \"draw\",\n         \"num_records\"\n      ],\n      \"_dequantize\": [\n         \"qx\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"_dev_options\": [\n         \"draw\"\n      ],\n      \"_differentiable_outputs\": [\n         \"x\"\n      ],\n      \"_dim_arange\": [\n         \"g\",\n         \"like\",\n         \"dim\"\n      ],\n      \"_dim_values_to_list\": [\n         \"dim_values\"\n      ],\n      \"_disable_emit_hooks\": [],\n      \"_dispatch_kl\": [\n         \"type_p\",\n         \"type_q\"\n      ],\n      \"_do_op_sanity_check_and_process\": [\n         \"op\"\n      ],\n      \"_do_test_autograd_simple_views_python\": [\n         \"self\",\n         \"dtype\"\n      ],\n      \"_download_onnx_model\": [\n         \"model_name\",\n         \"opset_version\"\n      ],\n      \"_download_url_to_file\": [\n         \"url\",\n         \"dst\",\n         \"hash_prefix\",\n         \"progress\"\n      ],\n      \"_draw_nets\": [\n         \"nets\",\n         \"g\"\n      ],\n      \"_draw_single_box\": [\n         \"image\",\n         \"xmin\",\n         \"ymin\",\n         \"xmax\",\n         \"ymax\",\n         \"display_str\",\n         \"color\",\n         \"color_text\",\n         \"thickness\"\n      ],\n      \"_draw_steps\": [\n         \"steps\",\n         \"g\",\n         \"skip_step_edges\"\n      ],\n      \"_dtypes\": [\n         \"dtypes\"\n      ],\n      \"_dummy_type\": [\n         \"name\"\n      ],\n      \"_elementwise_linear\": [\n         \"model\",\n         \"op_call\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim\",\n         \"weight_init\",\n         \"bias_init\"\n      ],\n      \"_emit_arg\": [\n         \"indent\",\n         \"i\",\n         \"arg\"\n      ],\n      \"_emit_args\": [\n         \"indent\",\n         \"arguments\"\n      ],\n      \"_emit_ret\": [\n         \"ret\"\n      ],\n      \"_emit_rets\": [\n         \"returns\"\n      ],\n      \"_emit_schema\": [\n         \"mod\",\n         \"name\",\n         \"schema\",\n         \"arg_start\",\n         \"padding\"\n      ],\n      \"_emit_type\": [\n         \"type\"\n      ],\n      \"_empty_affine_quantized\": [\n         \"g\",\n         \"input\",\n         \"shape\",\n         \"scale\",\n         \"zero_point\",\n         \"dtype\",\n         \"pin_memory\",\n         \"memory_format\",\n         \"layout\"\n      ],\n      \"_env_rendezvous_handler\": [\n         \"url\",\n         \"timeout\"\n      ],\n      \"_escape_label\": [\n         \"name\"\n      ],\n      \"_eval_poly\": [\n         \"y\",\n         \"coef\"\n      ],\n      \"_export\": [],\n      \"_export_to_pretty_string\": [],\n      \"_extract_stacktrace\": [],\n      \"_fake_quantize_per_channel_affine_grad_reference\": [\n         \"dY\",\n         \"X\",\n         \"per_channel_scale\",\n         \"per_channel_zero_point\",\n         \"axis\",\n         \"quant_min\",\n         \"quant_max\"\n      ],\n      \"_fake_quantize_per_channel_affine_reference\": [\n         \"X\",\n         \"per_channel_scale\",\n         \"per_channel_zero_point\",\n         \"axis\",\n         \"quant_min\",\n         \"quant_max\"\n      ],\n      \"_fake_quantize_per_tensor_affine_grad_reference\": [\n         \"dY\",\n         \"X\",\n         \"scale\",\n         \"zero_point\",\n         \"quant_min\",\n         \"quant_max\"\n      ],\n      \"_fake_quantize_per_tensor_affine_reference\": [\n         \"X\",\n         \"scale\",\n         \"zero_point\",\n         \"quant_min\",\n         \"quant_max\"\n      ],\n      \"_faulty_process_group_construct_rpc_backend_options_handler\": [\n         \"rpc_timeout\",\n         \"init_method\",\n         \"num_send_recv_threads\",\n         \"messages_to_fail\",\n         \"messages_to_delay\",\n         \"num_fail_sends\"\n      ],\n      \"_faulty_process_group_init_backend_handler\": [\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_file_rendezvous_handler\": [\n         \"url\"\n      ],\n      \"_fill_diagonal\": [\n         \"shape\",\n         \"value\"\n      ],\n      \"_fill_in_zeros\": [\n         \"grads\",\n         \"refs\",\n         \"strict\",\n         \"create_graph\",\n         \"stage\"\n      ],\n      \"_fill_missing_operator_names\": [\n         \"ops\"\n      ],\n      \"_filter_layers\": [\n         \"layers\",\n         \"include_tags\"\n      ],\n      \"_filter_ops\": [\n         \"ops\",\n         \"filter_fn\",\n         \"perform_filter\"\n      ],\n      \"_find_builtin\": [\n         \"fn\"\n      ],\n      \"_find_cuda_home\": [],\n      \"_find_match\": [\n         \"str_list\",\n         \"key_str\",\n         \"postfix\"\n      ],\n      \"_find_rocm_home\": [],\n      \"_find_source_nodes\": [\n         \"g\"\n      ],\n      \"_find_target_nodes\": [\n         \"g\"\n      ],\n      \"_find_tensors\": [\n         \"obj\"\n      ],\n      \"_flatten_dense_tensors\": [\n         \"tensors\"\n      ],\n      \"_flatten_sparse_tensors\": [\n         \"tensors\"\n      ],\n      \"_floats_wrapper\": [],\n      \"_fractional_max_pool2d\": [\n         \"input\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"_fractional_max_pool3d\": [\n         \"input\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"_free_mutex\": [],\n      \"_fuse_modules\": [\n         \"model\",\n         \"modules_to_fuse\",\n         \"fuser_func\"\n      ],\n      \"_gather_padding_ref\": [\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"data\",\n         \"lengths\"\n      ],\n      \"_gen_grad_zero_init_ops\": [\n         \"init_grad_map\",\n         \"grad_map\",\n         \"grad_output_names\"\n      ],\n      \"_gen_subgradient_pass\": [\n         \"subnet\",\n         \"init_grad\"\n      ],\n      \"_gen_subnet_gradient\": [\n         \"subnet\",\n         \"init_grad\"\n      ],\n      \"_gen_test_add_padding\": [\n         \"with_pad_data\",\n         \"is_remove\"\n      ],\n      \"_gen_torch_functional_registered_ops\": [],\n      \"_gen_unsupported_methods_properties\": [],\n      \"_generate_gamma_input\": [\n         \"dtype\",\n         \"device\",\n         \"test_poles\"\n      ],\n      \"_generate_reference_input\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_generate_training_net_only\": [\n         \"model\",\n         \"include_tags\"\n      ],\n      \"_generic_rnn\": [\n         \"g\",\n         \"variant\",\n         \"input\",\n         \"initial_states\",\n         \"all_weights\",\n         \"has_biases\",\n         \"num_layers\",\n         \"dropout\",\n         \"train\",\n         \"bidirectional\",\n         \"batch_first\",\n         \"batch_sizes\"\n      ],\n      \"_getGradientOrNone\": [\n         \"op_proto\"\n      ],\n      \"_get_activation_fn\": [\n         \"activation\"\n      ],\n      \"_get_active_context\": [\n         \"cls\",\n         \"val\",\n         \"required\"\n      ],\n      \"_get_async_or_non_blocking\": [\n         \"function_name\",\n         \"non_blocking\",\n         \"kwargs\"\n      ],\n      \"_get_blob_names\": [\n         \"ops\"\n      ],\n      \"_get_blob_ref\": [\n         \"blob_name_or_ref\"\n      ],\n      \"_get_buffer_ids\": [\n         \"module\"\n      ],\n      \"_get_build_directory\": [\n         \"name\",\n         \"verbose\"\n      ],\n      \"_get_builtin_table\": [],\n      \"_get_builtins_helper\": [],\n      \"_get_cache_or_reload\": [\n         \"github\",\n         \"force_reload\",\n         \"verbose\"\n      ],\n      \"_get_clones\": [\n         \"module\",\n         \"N\"\n      ],\n      \"_get_const\": [\n         \"value\",\n         \"desc\",\n         \"arg_name\"\n      ],\n      \"_get_count\": [\n         \"assignments\"\n      ],\n      \"_get_cuda_arch_flags\": [\n         \"cflags\"\n      ],\n      \"_get_debug_info\": [],\n      \"_get_default_group\": [],\n      \"_get_default_store\": [],\n      \"_get_default_tolerance\": [\n         \"a\",\n         \"b\"\n      ],\n      \"_get_device_index\": [\n         \"device\",\n         \"optional\"\n      ],\n      \"_get_do_arguments\": [\n         \"do_op\"\n      ],\n      \"_get_fn_overloads\": [\n         \"qual_name\"\n      ],\n      \"_get_global_builtins\": [],\n      \"_get_global_rank\": [\n         \"group\",\n         \"group_rank\"\n      ],\n      \"_get_grad\": [\n         \"cls\",\n         \"embedding_rref\",\n         \"context_id\"\n      ],\n      \"_get_grad_blob\": [\n         \"grad_map\",\n         \"input_to_check\"\n      ],\n      \"_get_group_rank\": [\n         \"group\",\n         \"rank\"\n      ],\n      \"_get_group_size\": [\n         \"group\"\n      ],\n      \"_get_im2col_indices_along_dim\": [\n         \"g\",\n         \"input_d\",\n         \"kernel_size_d\",\n         \"dilation_d\",\n         \"padding_d\",\n         \"stride_d\"\n      ],\n      \"_get_im2col_output_shape\": [\n         \"g\",\n         \"input\",\n         \"kernel_h\",\n         \"kernel_w\"\n      ],\n      \"_get_im2col_padded_input\": [\n         \"g\",\n         \"input\",\n         \"padding_h\",\n         \"padding_w\"\n      ],\n      \"_get_interpolate_attributes\": [\n         \"g\",\n         \"mode\",\n         \"args\"\n      ],\n      \"_get_json_config\": [\n         \"config_dict\"\n      ],\n      \"_get_layout\": [\n         \"name\"\n      ],\n      \"_get_logger_dict_helper\": [\n         \"mod\",\n         \"target_dict\",\n         \"Logger\",\n         \"prefix\"\n      ],\n      \"_get_longest_paths\": [\n         \"g\",\n         \"source_nodes\"\n      ],\n      \"_get_math_builtins\": [],\n      \"_get_max_size\": [\n         \"assignment\"\n      ],\n      \"_get_methods\": [\n         \"cls\"\n      ],\n      \"_get_module\": [\n         \"model\",\n         \"submodule_key\"\n      ],\n      \"_get_named_tuple_properties\": [\n         \"obj\"\n      ],\n      \"_get_net_argument\": [\n         \"op\",\n         \"net_name\"\n      ],\n      \"_get_next_step_name\": [\n         \"control_name\",\n         \"base_name\"\n      ],\n      \"_get_nn_functional_ops\": [],\n      \"_get_num_workers\": [\n         \"verbose\"\n      ],\n      \"_get_output_shapes\": [\n         \"output_value_infos\"\n      ],\n      \"_get_overloaded_args\": [\n         \"relevant_args\"\n      ],\n      \"_get_overloaded_methods\": [\n         \"method\",\n         \"mod_class\"\n      ],\n      \"_get_overloads\": [\n         \"obj\"\n      ],\n      \"_get_param_to_device\": [\n         \"model\"\n      ],\n      \"_get_path\": [\n         \"pred_list\",\n         \"dist_list\"\n      ],\n      \"_get_py3_code\": [\n         \"self\",\n         \"code\",\n         \"fn_name\"\n      ],\n      \"_get_qengine_id\": [\n         \"qengine\"\n      ],\n      \"_get_qengine_str\": [\n         \"qengine\"\n      ],\n      \"_get_random_tensor_and_q_params\": [\n         \"shapes\",\n         \"rand_scale\",\n         \"torch_type\"\n      ],\n      \"_get_restore_location\": [\n         \"map_location\"\n      ],\n      \"_get_rocm_arch_flags\": [\n         \"cflags\"\n      ],\n      \"_get_script_class\": [\n         \"name\"\n      ],\n      \"_get_softmax_dim\": [\n         \"name\",\n         \"ndim\",\n         \"stacklevel\"\n      ],\n      \"_get_step_context\": [\n         \"step\"\n      ],\n      \"_get_stream\": [\n         \"device\"\n      ],\n      \"_get_tensor_ops\": [],\n      \"_get_tensor_summary\": [\n         \"name\",\n         \"display_name\",\n         \"description\",\n         \"tensor\",\n         \"content_type\",\n         \"components\",\n         \"json_config\"\n      ],\n      \"_get_test_report_path\": [],\n      \"_get_thnn_function_backend\": [],\n      \"_get_torch_home\": [],\n      \"_get_torchscript_builtins\": [],\n      \"_get_trace_graph\": [\n         \"f\",\n         \"args\",\n         \"kwargs\",\n         \"strict\",\n         \"_force_outplace\",\n         \"return_inputs\",\n         \"_return_inputs_states\"\n      ],\n      \"_get_valid_constant\": [\n         \"attr\",\n         \"v\"\n      ],\n      \"_get_valid_min_max\": [\n         \"qparams\"\n      ],\n      \"_get_weights\": [\n         \"model\",\n         \"namescope\"\n      ],\n      \"_get_win_folder_from_registry\": [\n         \"csidl_name\"\n      ],\n      \"_get_win_folder_with_ctypes\": [\n         \"csidl_name\"\n      ],\n      \"_get_win_folder_with_jna\": [\n         \"csidl_name\"\n      ],\n      \"_get_win_folder_with_pywin32\": [\n         \"csidl_name\"\n      ],\n      \"_giant_1d\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_git_archive_link\": [\n         \"repo_owner\",\n         \"repo_name\",\n         \"branch\"\n      ],\n      \"_global_init_net\": [\n         \"predictor_export_meta\",\n         \"db_type\"\n      ],\n      \"_glu_old_input\": [\n         \"draw\"\n      ],\n      \"_grad_input_padding\": [\n         \"grad_output\",\n         \"input_size\",\n         \"stride\",\n         \"padding\",\n         \"kernel_size\",\n         \"dilation\"\n      ],\n      \"_grad_postprocess\": [\n         \"inputs\",\n         \"create_graph\"\n      ],\n      \"_grad_preprocess\": [\n         \"inputs\",\n         \"create_graph\",\n         \"need_graph\"\n      ],\n      \"_graph_at\": [\n         \"g\",\n         \"opname\"\n      ],\n      \"_graph_constant\": [\n         \"g\",\n         \"value\",\n         \"dims\",\n         \"type\"\n      ],\n      \"_graph_for\": [\n         \"self\"\n      ],\n      \"_graph_op\": [\n         \"g\",\n         \"opname\"\n      ],\n      \"_handle_exception\": [\n         \"result\"\n      ],\n      \"_hidden\": [\n         \"name\"\n      ],\n      \"_host_allocator\": [],\n      \"_if_scalar_type_as\": [\n         \"g\",\n         \"self\",\n         \"tensor\"\n      ],\n      \"_import_dotted_name\": [\n         \"name\"\n      ],\n      \"_import_module_from_library\": [\n         \"module_name\",\n         \"path\",\n         \"is_python_module\"\n      ],\n      \"_index_fill_reshape_helper\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\"\n      ],\n      \"_index_tensor_with_indices_list\": [\n         \"tensor\",\n         \"indices\"\n      ],\n      \"_indices_product\": [\n         \"indices\"\n      ],\n      \"_infer_shapes\": [\n         \"pred_net\",\n         \"inputs\"\n      ],\n      \"_infinite_like\": [\n         \"tensor\"\n      ],\n      \"_inflate_expr\": [\n         \"arg\",\n         \"ref\"\n      ],\n      \"_init\": [],\n      \"_init_impl\": [\n         \"path\"\n      ],\n      \"_init_output\": [\n         \"output\",\n         \"capacity\",\n         \"global_init_net\",\n         \"global_exit_net\"\n      ],\n      \"_init_rpc_backend\": [\n         \"backend\",\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_init_script_module\": [],\n      \"_initialize_orthogonal\": [\n         \"conv\"\n      ],\n      \"_inline_everything\": [\n         \"fn\"\n      ],\n      \"_inputs\": [\n         \"draw\"\n      ],\n      \"_interp_output_size\": [\n         \"closed_over_args\"\n      ],\n      \"_interpolate\": [\n         \"name\",\n         \"dim\",\n         \"interpolate_mode\"\n      ],\n      \"_interpolate_get_scales\": [\n         \"g\",\n         \"scale_factor\",\n         \"dim\"\n      ],\n      \"_interpolate_get_scales_and_mode\": [\n         \"g\",\n         \"input\",\n         \"size\",\n         \"scale_factor\",\n         \"mode\",\n         \"align_corners\"\n      ],\n      \"_interpolate_get_scales_if_available\": [\n         \"g\",\n         \"scales\"\n      ],\n      \"_interpolate_size_to_scales\": [\n         \"g\",\n         \"input\",\n         \"output_size\",\n         \"dim\"\n      ],\n      \"_interpolate_warning\": [\n         \"interpolate_mode\"\n      ],\n      \"_invoke_rpc\": [\n         \"rref\",\n         \"rpc_api\",\n         \"func_name\"\n      ],\n      \"_isHookExceptionOk\": [\n         \"self\",\n         \"e\"\n      ],\n      \"_is_binary_build\": [],\n      \"_is_checkpoint_valid\": [],\n      \"_is_compressed_file\": [\n         \"f\"\n      ],\n      \"_is_constant_tensor_list\": [\n         \"node\"\n      ],\n      \"_is_cuda_file\": [\n         \"path\"\n      ],\n      \"_is_fp\": [\n         \"value\"\n      ],\n      \"_is_id_list\": [\n         \"input_record\"\n      ],\n      \"_is_id_score_list\": [\n         \"input_record\"\n      ],\n      \"_is_jit_enabled\": [],\n      \"_is_math_fn\": [\n         \"fn\"\n      ],\n      \"_is_new_style_class\": [\n         \"cls\"\n      ],\n      \"_is_ninja_available\": [],\n      \"_is_none\": [\n         \"x\"\n      ],\n      \"_is_onnx_list\": [\n         \"value\"\n      ],\n      \"_is_packed_list\": [\n         \"list_value\"\n      ],\n      \"_is_path\": [\n         \"name_or_buffer\"\n      ],\n      \"_is_script_method\": [\n         \"module\"\n      ],\n      \"_is_script_module\": [\n         \"module\"\n      ],\n      \"_is_special_functional_bound_op\": [\n         \"fn\"\n      ],\n      \"_is_tensor_list\": [\n         \"x\"\n      ],\n      \"_is_torchscript_zip\": [\n         \"zip_file\"\n      ],\n      \"_is_value\": [\n         \"x\"\n      ],\n      \"_is_zipfile\": [\n         \"f\"\n      ],\n      \"_iter_filter\": [\n         \"condition\",\n         \"allow_unknown\",\n         \"condition_msg\",\n         \"conversion\"\n      ],\n      \"_jit_compile\": [\n         \"name\",\n         \"sources\",\n         \"extra_cflags\",\n         \"extra_cuda_cflags\",\n         \"extra_ldflags\",\n         \"extra_include_paths\",\n         \"build_directory\",\n         \"verbose\",\n         \"with_cuda\",\n         \"is_python_module\",\n         \"keep_intermediates\"\n      ],\n      \"_jit_disabled\": [],\n      \"_jit_unwrap_structured\": [\n         \"obj\"\n      ],\n      \"_join_cuda_home\": [],\n      \"_join_field_name\": [\n         \"prefix\",\n         \"suffix\"\n      ],\n      \"_join_rocm_home\": [],\n      \"_kl_bernoulli_bernoulli\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_bernoulli_poisson\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_beta\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_continuous_bernoulli\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_exponential\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_gamma\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_beta_uniform\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_binomial_binomial\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_categorical_categorical\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_cauchy_cauchy\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_continuous_bernoulli_continuous_bernoulli\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_continuous_bernoulli_exponential\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_continuous_bernoulli_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_continuous_bernoulli_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_continuous_bernoulli_uniform\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_dirichlet_dirichlet\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_expfamily_expfamily\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_exponential_exponential\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_exponential_gamma\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_exponential_gumbel\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_exponential_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_exponential_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gamma_exponential\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gamma_gamma\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gamma_gumbel\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gamma_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gamma_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_geometric_geometric\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gumbel_gumbel\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gumbel_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_gumbel_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_halfnormal_halfnormal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_independent_independent\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_laplace_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_laplace_laplace\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_laplace_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_lowrankmultivariatenormal_lowrankmultivariatenormal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_lowrankmultivariatenormal_multivariatenormal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_multivariatenormal_lowrankmultivariatenormal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_multivariatenormal_multivariatenormal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_normal_gumbel\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_normal_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_normal_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_onehotcategorical_onehotcategorical\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_pareto_exponential\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_pareto_gamma\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_pareto_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_pareto_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_pareto_pareto\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_poisson_infinity\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_poisson_poisson\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_transformed_transformed\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_beta\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_continuous_bernoulli\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_exponetial\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_gamma\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_gumbel\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_normal\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_pareto\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_kl_uniform_uniform\": [\n         \"p\",\n         \"q\"\n      ],\n      \"_large_2d\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_layer_norm_grad_ref\": [\n         \"axis\",\n         \"gout_full\",\n         \"norm\",\n         \"mean_full\",\n         \"stdev_full\",\n         \"X_full\"\n      ],\n      \"_layer_norm_ref\": [\n         \"axis\",\n         \"epsilon\",\n         \"X\"\n      ],\n      \"_layer_norm_with_affine_ref\": [\n         \"axis\",\n         \"epsilon\",\n         \"X\",\n         \"gamma\",\n         \"beta\"\n      ],\n      \"_layered_LSTM\": [\n         \"model\",\n         \"input_blob\",\n         \"seq_lengths\",\n         \"initial_states\",\n         \"dim_in\",\n         \"dim_out\",\n         \"scope\",\n         \"outputs_with_grads\",\n         \"return_params\",\n         \"memory_optimization\",\n         \"forget_bias\",\n         \"forward_only\",\n         \"drop_states\",\n         \"create_lstm\"\n      ],\n      \"_lazy_call\": [\n         \"callable\"\n      ],\n      \"_lazy_init\": [],\n      \"_lazy_new\": [\n         \"cls\"\n      ],\n      \"_legacy_load\": [\n         \"f\",\n         \"map_location\",\n         \"pickle_module\"\n      ],\n      \"_legacy_save\": [\n         \"obj\",\n         \"f\",\n         \"pickle_module\",\n         \"pickle_protocol\"\n      ],\n      \"_len\": [\n         \"g\",\n         \"self\"\n      ],\n      \"_list_supported_ops\": [],\n      \"_list_unsupported_tensor_ops\": [],\n      \"_list_with_default\": [\n         \"out_size\",\n         \"defaults\"\n      ],\n      \"_load\": [\n         \"zip_file\",\n         \"map_location\",\n         \"pickle_module\"\n      ],\n      \"_load_attr_from_module\": [\n         \"module\",\n         \"func_name\"\n      ],\n      \"_load_entry_from_hubconf\": [\n         \"m\",\n         \"model\"\n      ],\n      \"_load_from_bytes\": [\n         \"b\"\n      ],\n      \"_load_global_deps\": [],\n      \"_local_invoke\": [\n         \"rref\",\n         \"func_name\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"_local_optimizer_step\": [\n         \"local_optim_rref\",\n         \"autograd_ctx_id\"\n      ],\n      \"_lock\": [],\n      \"_log_modified_bessel_fn\": [\n         \"x\",\n         \"order\"\n      ],\n      \"_lstm_full\": [\n         \"g\",\n         \"input\",\n         \"hidden_v\",\n         \"weight_v\",\n         \"has_biases\",\n         \"num_layers\",\n         \"dropout\",\n         \"train\",\n         \"bidirectional\",\n         \"batch_first\"\n      ],\n      \"_lstm_packed\": [\n         \"g\",\n         \"input\",\n         \"batch_sizes\",\n         \"hidden_v\",\n         \"weight_v\",\n         \"has_biases\",\n         \"num_layers\",\n         \"dropout\",\n         \"train\",\n         \"bidirectional\"\n      ],\n      \"_lu_impl\": [\n         \"A\",\n         \"pivot\",\n         \"get_infos\",\n         \"out\"\n      ],\n      \"_lu_no_infos\": [\n         \"A\",\n         \"pivot\",\n         \"get_infos\",\n         \"out\"\n      ],\n      \"_lu_with_infos\": [\n         \"A\",\n         \"pivot\",\n         \"get_infos\",\n         \"out\"\n      ],\n      \"_make_conv_test_input\": [\n         \"batch_size\",\n         \"in_channels_per_group\",\n         \"input_feature_map_size\",\n         \"out_channels_per_group\",\n         \"groups\",\n         \"kernel_size\",\n         \"X_scale\",\n         \"X_zero_point\",\n         \"W_scale\",\n         \"W_zero_point\",\n         \"use_bias\",\n         \"use_channelwise\"\n      ],\n      \"_make_deprecate\": [\n         \"meth\"\n      ],\n      \"_make_fail\": [\n         \"name\"\n      ],\n      \"_make_grads\": [\n         \"outputs\",\n         \"grads\"\n      ],\n      \"_make_tensor\": [\n         \"shape\",\n         \"dtype\",\n         \"device\",\n         \"fill_ones\"\n      ],\n      \"_make_unique_name\": [\n         \"seen\",\n         \"name\",\n         \"min_version\"\n      ],\n      \"_max_pool\": [\n         \"name\",\n         \"tuple_fn\",\n         \"ndims\",\n         \"return_indices\"\n      ],\n      \"_max_pool1d\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"_max_pool2d\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"_max_pool3d\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"_maybe_decode_ascii\": [\n         \"bytes_str\"\n      ],\n      \"_maybe_get_const\": [\n         \"value\",\n         \"desc\"\n      ],\n      \"_maybe_get_scalar\": [\n         \"value\"\n      ],\n      \"_medium_1d\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_medium_2d\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_merge_node_kwargs\": [\n         \"a\",\n         \"b\"\n      ],\n      \"_mixed_requires_grad\": [\n         \"cls\",\n         \"t1\",\n         \"t2\"\n      ],\n      \"_mkdir_p\": [\n         \"d\"\n      ],\n      \"_model_to_graph\": [\n         \"model\",\n         \"args\",\n         \"verbose\",\n         \"input_names\",\n         \"output_names\",\n         \"operator_export_type\",\n         \"example_outputs\",\n         \"propagate\",\n         \"_retain_param_name\",\n         \"do_constant_folding\",\n         \"_disable_torch_constant_prop\",\n         \"fixed_batch_size\"\n      ],\n      \"_multilabelmarginloss_reference\": [\n         \"input\",\n         \"target\"\n      ],\n      \"_multimarginloss_reference\": [\n         \"input\",\n         \"target_idx\",\n         \"p\",\n         \"margin\",\n         \"weight\"\n      ],\n      \"_nested_map\": [\n         \"condition\",\n         \"fn\",\n         \"condition_msg\"\n      ],\n      \"_newNode\": [\n         \"g\",\n         \"opname\",\n         \"outputs\"\n      ],\n      \"_new_local_optimizer\": [\n         \"optim_cls\",\n         \"local_params_rref\"\n      ],\n      \"_new_process_group_helper\": [\n         \"world_size\",\n         \"rank\",\n         \"group_ranks\",\n         \"backend\",\n         \"store\",\n         \"group_name\",\n         \"timeout\"\n      ],\n      \"_new_t\": [\n         \"shape\"\n      ],\n      \"_no_grad_embedding_renorm_\": [\n         \"weight\",\n         \"input\",\n         \"max_norm\",\n         \"norm_type\"\n      ],\n      \"_no_grad_fill_\": [\n         \"tensor\",\n         \"val\"\n      ],\n      \"_no_grad_normal_\": [\n         \"tensor\",\n         \"mean\",\n         \"std\"\n      ],\n      \"_no_grad_trunc_normal_\": [\n         \"tensor\",\n         \"mean\",\n         \"std\",\n         \"a\",\n         \"b\"\n      ],\n      \"_no_grad_uniform_\": [\n         \"tensor\",\n         \"a\",\n         \"b\"\n      ],\n      \"_no_grad_zero_\": [\n         \"tensor\"\n      ],\n      \"_node_getitem\": [\n         \"self\",\n         \"k\"\n      ],\n      \"_normalize_field\": [\n         \"field_or_type_or_blob\",\n         \"keep_blobs\"\n      ],\n      \"_normalize_namescope\": [\n         \"namescope\"\n      ],\n      \"_ntuple\": [\n         \"n\"\n      ],\n      \"_ntuple_from_first\": [\n         \"n\"\n      ],\n      \"_number\": [\n         \"floating\",\n         \"integer\",\n         \"dtype\"\n      ],\n      \"_observer_forward_hook\": [\n         \"self\",\n         \"input\",\n         \"output\"\n      ],\n      \"_on_leader_follower_report_shutdown_intent\": [\n         \"sequence_id\",\n         \"worker_name\"\n      ],\n      \"_one_hidden_rnn\": [\n         \"kind\"\n      ],\n      \"_one_hots\": [],\n      \"_open_file_like\": [\n         \"name_or_buffer\",\n         \"mode\"\n      ],\n      \"_open_zipfile_writer\": [\n         \"name_or_buffer\"\n      ],\n      \"_operator_to_node\": [\n         \"shapes\",\n         \"op\"\n      ],\n      \"_operator_to_node_simp\": [\n         \"op\",\n         \"inter_blobs\",\n         \"seen\"\n      ],\n      \"_operators_to_graph_def\": [\n         \"shapes\",\n         \"ops\",\n         \"colon_replacement\",\n         \"with_ssa\",\n         \"with_gradient_scope\",\n         \"blob_name_tracker\",\n         \"show_simplified\",\n         \"custom_rename\"\n      ],\n      \"_optimize_graph\": [\n         \"graph\",\n         \"operator_export_type\",\n         \"_disable_torch_constant_prop\",\n         \"fixed_batch_size\",\n         \"params_dict\"\n      ],\n      \"_optimize_trace\": [\n         \"graph\",\n         \"operator_export_type\"\n      ],\n      \"_overlay_windows_vcvars\": [\n         \"env\"\n      ],\n      \"_overload\": [\n         \"func\"\n      ],\n      \"_overload_method\": [\n         \"func\"\n      ],\n      \"_pack_padded_sequence\": [\n         \"g\",\n         \"input\",\n         \"lengths\",\n         \"batch_first\"\n      ],\n      \"_packed_sequence_init\": [\n         \"data\",\n         \"batch_sizes\",\n         \"sorted_indices\",\n         \"unsorted_indices\"\n      ],\n      \"_packed_sequence_init_args\": [\n         \"data\",\n         \"batch_sizes\",\n         \"sorted_indices\",\n         \"unsorted_indices\"\n      ],\n      \"_pad\": [\n         \"input\",\n         \"pad\",\n         \"mode\",\n         \"value\"\n      ],\n      \"_pad_circular\": [\n         \"input\",\n         \"padding\"\n      ],\n      \"_pad_packed_sequence\": [\n         \"g\",\n         \"data\",\n         \"batch_sizes\",\n         \"batch_first\",\n         \"padding_value\",\n         \"total_length\"\n      ],\n      \"_parseFile\": [\n         \"filename\"\n      ],\n      \"_parse_arg\": [\n         \"value\",\n         \"desc\"\n      ],\n      \"_parse_env\": [\n         \"name\",\n         \"default\",\n         \"true_message\",\n         \"false_message\"\n      ],\n      \"_parse_repo_info\": [\n         \"github\"\n      ],\n      \"_permute_helper\": [\n         \"g\",\n         \"input\",\n         \"axes\"\n      ],\n      \"_permute_to_axis_zero\": [\n         \"X\",\n         \"axis\"\n      ],\n      \"_pin_memory_loop\": [\n         \"in_queue\",\n         \"out_queue\",\n         \"device_id\",\n         \"done_event\"\n      ],\n      \"_pipe_step\": [\n         \"input\",\n         \"output\",\n         \"num_threads\",\n         \"processor\",\n         \"name\",\n         \"capacity\",\n         \"group\",\n         \"num_runtime_threads\",\n         \"final_outputs\"\n      ],\n      \"_pointwise_loss\": [\n         \"lambd\",\n         \"lambd_optimized\",\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"_precision_to_scale_tril\": [\n         \"P\"\n      ],\n      \"_prepare_attention\": [\n         \"t\",\n         \"n\",\n         \"dim_in\",\n         \"encoder_dim\",\n         \"forward_only\",\n         \"T\",\n         \"dim_out\",\n         \"residual\",\n         \"final_dropout\"\n      ],\n      \"_prepare_blob_copy_op\": [\n         \"from_name\",\n         \"to_name\"\n      ],\n      \"_prepare_caffe2\": [\n         \"x\"\n      ],\n      \"_prepare_dir\": [\n         \"path\"\n      ],\n      \"_prepare_gradient_do_op\": [\n         \"fwd_op\",\n         \"fwd_net\",\n         \"grad_ops\",\n         \"inputs\",\n         \"outputs\",\n         \"blob_bindings\",\n         \"saved_fwd_blobs\",\n         \"workspace_blob_name\"\n      ],\n      \"_prepare_gradient_if_op\": [\n         \"fwd_op\",\n         \"input_names\",\n         \"output_names\",\n         \"then_grad_net\",\n         \"else_grad_net\"\n      ],\n      \"_prepare_gradient_while_ops\": [\n         \"fwd_op\",\n         \"input_names\",\n         \"output_names\",\n         \"loop_grad_net\",\n         \"workspace_blob\",\n         \"init_grad_map\",\n         \"loop_grad_map\"\n      ],\n      \"_prepare_gru_unit_op\": [\n         \"gc\",\n         \"n\",\n         \"d\",\n         \"outputs_with_grads\",\n         \"forward_only\",\n         \"drop_states\",\n         \"sequence_lengths\",\n         \"two_d_initial_states\"\n      ],\n      \"_prepare_ldflags\": [\n         \"extra_ldflags\",\n         \"with_cuda\",\n         \"verbose\"\n      ],\n      \"_prepare_onnx_paddings\": [\n         \"dim\",\n         \"pad\"\n      ],\n      \"_prepare_pytorch\": [\n         \"x\"\n      ],\n      \"_prepare_rnn\": [\n         \"t\",\n         \"n\",\n         \"dim_in\",\n         \"create_rnn\",\n         \"outputs_with_grads\",\n         \"forget_bias\",\n         \"memory_optim\",\n         \"forward_only\",\n         \"drop_states\",\n         \"T\",\n         \"two_d_initial_states\",\n         \"dim_out\",\n         \"num_states\"\n      ],\n      \"_prepare_script\": [\n         \"model\",\n         \"qconfig_dict\",\n         \"is_dynamic\"\n      ],\n      \"_prepare_video\": [\n         \"V\"\n      ],\n      \"_print_net\": [\n         \"net\"\n      ],\n      \"_print_task_output\": [\n         \"x\"\n      ],\n      \"_process_group_construct_rpc_backend_options_handler\": [\n         \"rpc_timeout\",\n         \"init_method\",\n         \"num_send_recv_threads\"\n      ],\n      \"_process_group_init_backend_handler\": [\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_propagate_device_option\": [\n         \"net_def\"\n      ],\n      \"_propagate_qconfig_helper\": [\n         \"module\",\n         \"qconfig_dict\",\n         \"white_list\",\n         \"qconfig_parent\",\n         \"prefix\"\n      ],\n      \"_python_version_check\": [],\n      \"_qualified_name\": [\n         \"obj\"\n      ],\n      \"_quantize\": [\n         \"x\",\n         \"scale\",\n         \"zero_point\",\n         \"qmin\",\n         \"qmax\",\n         \"dtype\"\n      ],\n      \"_quantize_script\": [\n         \"model\",\n         \"qconfig_dict\",\n         \"run_fn\",\n         \"run_args\",\n         \"is_dynamic\",\n         \"debug\"\n      ],\n      \"_quantize_weight\": [\n         \"float_wt\",\n         \"observer\"\n      ],\n      \"_rand_tensor_non_equal\": [],\n      \"_rank_not_in_group\": [\n         \"group\"\n      ],\n      \"_rebuild_parameter\": [\n         \"data\",\n         \"requires_grad\",\n         \"backward_hooks\"\n      ],\n      \"_rebuild_qtensor\": [\n         \"storage\",\n         \"storage_offset\",\n         \"size\",\n         \"stride\",\n         \"quantizer_params\",\n         \"requires_grad\",\n         \"backward_hooks\"\n      ],\n      \"_rebuild_sparse_tensor\": [\n         \"layout\",\n         \"data\"\n      ],\n      \"_rebuild_tensor\": [\n         \"storage\",\n         \"storage_offset\",\n         \"size\",\n         \"stride\"\n      ],\n      \"_rebuild_tensor_v2\": [\n         \"storage\",\n         \"storage_offset\",\n         \"size\",\n         \"stride\",\n         \"requires_grad\",\n         \"backward_hooks\"\n      ],\n      \"_rebuild_xla_tensor\": [\n         \"data\",\n         \"dtype\",\n         \"device\",\n         \"requires_grad\"\n      ],\n      \"_recover_record_by_prefix\": [\n         \"names\",\n         \"prefix\"\n      ],\n      \"_rectify_operator_and_name\": [\n         \"operators_or_net\",\n         \"name\"\n      ],\n      \"_reduce_op_symbolic\": [\n         \"onnx_op_name\",\n         \"allow_multi_dim_support\"\n      ],\n      \"_reduce_with_dtype\": [\n         \"onnx_op\",\n         \"name\",\n         \"allow_multi_dim_support\"\n      ],\n      \"_register\": [\n         \"func\"\n      ],\n      \"_register_builtin\": [\n         \"fn\",\n         \"op\"\n      ],\n      \"_register_test\": [],\n      \"_rejection_sample\": [\n         \"loc\",\n         \"concentration\",\n         \"proposal_r\",\n         \"x\"\n      ],\n      \"_remap_keys\": [\n         \"old_dict\",\n         \"rename_fn\"\n      ],\n      \"_remove_if_exists\": [\n         \"path\"\n      ],\n      \"_remove_padding_ref\": [\n         \"start_pad_width\",\n         \"end_pad_width\",\n         \"data\",\n         \"lengths\"\n      ],\n      \"_remove_qconfig\": [\n         \"module\"\n      ],\n      \"_rename_all\": [\n         \"shapes\",\n         \"blob_name_tracker\",\n         \"ops\",\n         \"rename_fn\"\n      ],\n      \"_rename_tensorflow_style\": [\n         \"shapes\",\n         \"blob_name_tracker\",\n         \"ops\"\n      ],\n      \"_rendezvous_error\": [\n         \"msg\"\n      ],\n      \"_reorder_tensors_as\": [\n         \"tensors\",\n         \"ordered_tensors\"\n      ],\n      \"_repeat_tuple\": [\n         \"t\",\n         \"n\"\n      ],\n      \"_replace_colons\": [\n         \"shapes\",\n         \"blob_name_tracker\",\n         \"ops\",\n         \"repl\"\n      ],\n      \"_replicatable_module\": [\n         \"module\",\n         \"memo\"\n      ],\n      \"_requantize\": [\n         \"x\",\n         \"multiplier\",\n         \"zero_point\",\n         \"qmin\",\n         \"qmax\",\n         \"qtype\"\n      ],\n      \"_require_initialized\": [\n         \"func\"\n      ],\n      \"_reshape_from_tensor\": [\n         \"g\",\n         \"input\",\n         \"shape\"\n      ],\n      \"_resolve_args_by_export_type\": [\n         \"arg_name\",\n         \"arg_value\",\n         \"operator_export_type\"\n      ],\n      \"_run_function\": [\n         \"python_udf\"\n      ],\n      \"_run_ninja_build\": [\n         \"build_directory\",\n         \"verbose\",\n         \"error_prefix\"\n      ],\n      \"_run_symbolic_function\": [],\n      \"_run_symbolic_method\": [],\n      \"_run_trainer\": [\n         \"rref_t1\",\n         \"t2\",\n         \"ps\",\n         \"rank_diff\"\n      ],\n      \"_run_trainer_torchscript\": [\n         \"rref_t1\",\n         \"t2\",\n         \"ps\",\n         \"rank_diff\"\n      ],\n      \"_runtime_threads_task\": [\n         \"name\",\n         \"group\",\n         \"final_outputs\",\n         \"reader\",\n         \"num_threads\",\n         \"output\",\n         \"capacity\"\n      ],\n      \"_sample_dirichlet\": [\n         \"g\",\n         \"self\",\n         \"generator\"\n      ],\n      \"_sanitize_str\": [\n         \"s\"\n      ],\n      \"_save\": [\n         \"obj\",\n         \"zip_file\",\n         \"pickle_module\",\n         \"pickle_protocol\"\n      ],\n      \"_scalar\": [\n         \"x\"\n      ],\n      \"_scalar_str\": [\n         \"self\",\n         \"formatter\"\n      ],\n      \"_scatter_helper\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"src\"\n      ],\n      \"_script_if_tracing\": [\n         \"fn\"\n      ],\n      \"_set_SIGCHLD_handler\": [],\n      \"_set_input_and_output_names\": [\n         \"graph\",\n         \"input_names\",\n         \"output_names\"\n      ],\n      \"_set_jit_function_cache\": [\n         \"key\",\n         \"value\"\n      ],\n      \"_set_jit_overload_cache\": [\n         \"key\",\n         \"compiled_fns\"\n      ],\n      \"_set_module\": [\n         \"model\",\n         \"submodule_key\",\n         \"module\"\n      ],\n      \"_set_operator_export_type\": [\n         \"operator_export_type\"\n      ],\n      \"_set_opset_version\": [\n         \"opset_version\"\n      ],\n      \"_set_proceed_shutdown_signal\": [\n         \"sequence_id\"\n      ],\n      \"_set_python_exit_flag\": [],\n      \"_set_rpc_done\": [\n         \"ctx_id\",\n         \"rank_distance\"\n      ],\n      \"_set_tf_attr\": [\n         \"attr_dict\",\n         \"arg\"\n      ],\n      \"_set_training_mode\": [\n         \"training_mode\"\n      ],\n      \"_setup_hubdir\": [],\n      \"_shape_as_tensor\": [\n         \"g\",\n         \"input\"\n      ],\n      \"_should_read_directly\": [\n         \"f\"\n      ],\n      \"_show_graph\": [\n         \"graph_def\"\n      ],\n      \"_size_helper\": [\n         \"g\",\n         \"self\",\n         \"dim\"\n      ],\n      \"_skipper\": [\n         \"condition\",\n         \"reason\"\n      ],\n      \"_sleep\": [\n         \"cycles\"\n      ],\n      \"_slice\": [\n         \"g\",\n         \"input\",\n         \"axes\",\n         \"starts\",\n         \"ends\"\n      ],\n      \"_slice_helper\": [\n         \"g\",\n         \"input\",\n         \"axes\",\n         \"starts\",\n         \"ends\",\n         \"steps\",\n         \"dynamic_slice\"\n      ],\n      \"_small_0d\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_small_2d\": [\n         \"dtype\",\n         \"device\",\n         \"has_zeros\",\n         \"fill_ones\",\n         \"oneish\"\n      ],\n      \"_small_3d\": [\n         \"dtype\",\n         \"device\",\n         \"has_zeros\",\n         \"fill_ones\",\n         \"oneish\"\n      ],\n      \"_small_3d_ones\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_small_3d_unique\": [\n         \"dtype\",\n         \"device\"\n      ],\n      \"_smooth_l1_loss\": [\n         \"input\",\n         \"target\"\n      ],\n      \"_sort_helper\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"decending\",\n         \"out\"\n      ],\n      \"_sort_tree_leaves\": [\n         \"g\",\n         \"root\"\n      ],\n      \"_sparse_features_map\": [\n         \"draw\",\n         \"num_records\"\n      ],\n      \"_split_tensor_list_constants\": [\n         \"g\",\n         \"block\"\n      ],\n      \"_standard_gamma\": [\n         \"g\",\n         \"self\",\n         \"generator\"\n      ],\n      \"_standard_normal\": [\n         \"shape\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"_start_record_function\": [\n         \"exec_type\",\n         \"func_name\",\n         \"current_worker_name\",\n         \"dest_worker_name\"\n      ],\n      \"_static_threads_task\": [\n         \"name\",\n         \"group\",\n         \"final_outputs\",\n         \"reader\",\n         \"num_threads\",\n         \"output\",\n         \"capacity\"\n      ],\n      \"_std\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"unbiased\",\n         \"keepdim\"\n      ],\n      \"_str\": [\n         \"self\"\n      ],\n      \"_string_lists\": [\n         \"alphabet\"\n      ],\n      \"_strong_wolfe\": [\n         \"obj_func\",\n         \"x\",\n         \"t\",\n         \"d\",\n         \"f\",\n         \"g\",\n         \"gtd\",\n         \"c1\",\n         \"c2\",\n         \"tolerance_change\",\n         \"max_ls\"\n      ],\n      \"_stub_construct_rpc_backend_options_handler\": [],\n      \"_stub_init_rpc_backend_handler\": [\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_sum_of_list\": [\n         \"tensorlist\"\n      ],\n      \"_sum_rightmost\": [\n         \"value\",\n         \"dim\"\n      ],\n      \"_svd_lowrank\": [\n         \"A\",\n         \"q\",\n         \"niter\",\n         \"M\"\n      ],\n      \"_take_tensors\": [\n         \"tensors\",\n         \"size_limit\"\n      ],\n      \"_tcp_rendezvous_handler\": [\n         \"url\",\n         \"timeout\"\n      ],\n      \"_tensor_and_indices\": [\n         \"min_dim\",\n         \"max_dim\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"_tensor_and_prefix\": [\n         \"draw\",\n         \"dtype\",\n         \"elements\",\n         \"min_dim\",\n         \"max_dim\"\n      ],\n      \"_tensor_splits\": [\n         \"draw\"\n      ],\n      \"_tensor_str\": [\n         \"self\",\n         \"indent\"\n      ],\n      \"_tensor_str_with_formatter\": [\n         \"self\",\n         \"indent\",\n         \"formatter\",\n         \"summarize\"\n      ],\n      \"_tensorpipe_construct_rpc_backend_options_handler\": [\n         \"rpc_timeout\",\n         \"init_method\",\n         \"worker_name_to_id\"\n      ],\n      \"_tensorpipe_init_backend_handler\": [\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_test_binary\": [\n         \"name\",\n         \"ref\",\n         \"filter_\",\n         \"gcs\",\n         \"test_gradient\",\n         \"allow_inplace\",\n         \"dtypes\"\n      ],\n      \"_test_binary_broadcast\": [\n         \"name\",\n         \"ref\",\n         \"filter_\",\n         \"gcs\",\n         \"allow_inplace\",\n         \"dtypes\"\n      ],\n      \"_test_cpp_extensions_aot\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\",\n         \"use_ninja\"\n      ],\n      \"_test_function\": [\n         \"fn\",\n         \"device\"\n      ],\n      \"_test_get_worker_info\": [],\n      \"_test_hardsigmoid\": [\n         \"self\",\n         \"X\",\n         \"engine\"\n      ],\n      \"_test_hardswish\": [\n         \"self\",\n         \"X\",\n         \"Y_scale\",\n         \"Y_zero_point\",\n         \"engine\"\n      ],\n      \"_test_if\": [\n         \"x\"\n      ],\n      \"_test_inner_stop\": [\n         \"x\"\n      ],\n      \"_test_lerp_tensor_weights\": [\n         \"self\",\n         \"cast\"\n      ],\n      \"_test_loop\": [],\n      \"_test_nested_backward_accumulate_grads\": [\n         \"t1\",\n         \"t2\",\n         \"dst_rank\"\n      ],\n      \"_test_outer\": [],\n      \"_test_pickle_checkpoint\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_pickle_checkpoint_qtensor\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_pickle_checkpoint_views\": [\n         \"self\",\n         \"device\"\n      ],\n      \"_test_proper_exit\": [\n         \"is_iterable_dataset\",\n         \"use_workers\",\n         \"pin_memory\",\n         \"exit_method\",\n         \"hold_iter_reference\",\n         \"loader_setup_event\",\n         \"tester_setup_event\"\n      ],\n      \"_test_reentrant_with_callbacks\": [\n         \"self\",\n         \"install_callbacks_in_depths\"\n      ],\n      \"_test_reshape\": [\n         \"old_shape\",\n         \"new_shape\",\n         \"expected_shape\",\n         \"arg_shape\",\n         \"in_place\",\n         \"shape_dtype\"\n      ],\n      \"_test_reshape_output_and_gradient\": [\n         \"old_shape\",\n         \"new_shape\",\n         \"expected_shape\",\n         \"arg_shape\",\n         \"in_place\",\n         \"expected_gradient\"\n      ],\n      \"_test_segfault\": [],\n      \"_test_setitem\": [\n         \"self\",\n         \"size\",\n         \"index\"\n      ],\n      \"_test_setitem_tensor\": [\n         \"self\",\n         \"size\",\n         \"index\"\n      ],\n      \"_test_sparse_gather\": [\n         \"self\",\n         \"size_x\",\n         \"size_ind\",\n         \"dim\"\n      ],\n      \"_test_timeout\": [],\n      \"_test_timeout_pin_memory\": [],\n      \"_test_type_conversion_backward\": [\n         \"self\",\n         \"t\"\n      ],\n      \"_tf_device\": [\n         \"device_option\"\n      ],\n      \"_time\": [\n         \"trace_name\",\n         \"name\",\n         \"time\"\n      ],\n      \"_tmp_donotuse_dont_inline_everything\": [\n         \"fn\"\n      ],\n      \"_to_worker_info\": [\n         \"name_or_info\"\n      ],\n      \"_topk_helper\": [\n         \"g\",\n         \"input\",\n         \"k\",\n         \"dim\",\n         \"largest\",\n         \"sorted\",\n         \"out\"\n      ],\n      \"_torch_ones\": [\n         \"sizes\",\n         \"requires_grad\"\n      ],\n      \"_trace\": [],\n      \"_trace_and_get_graph_from_model\": [\n         \"model\",\n         \"args\"\n      ],\n      \"_transformList\": [\n         \"l\"\n      ],\n      \"_transform_to_cat\": [\n         \"constraint\"\n      ],\n      \"_transform_to_greater_than\": [\n         \"constraint\"\n      ],\n      \"_transform_to_interval\": [\n         \"constraint\"\n      ],\n      \"_transform_to_less_than\": [\n         \"constraint\"\n      ],\n      \"_transform_to_lower_cholesky\": [\n         \"constraint\"\n      ],\n      \"_transform_to_positive\": [\n         \"constraint\"\n      ],\n      \"_transform_to_real\": [\n         \"constraint\"\n      ],\n      \"_transform_to_simplex\": [\n         \"constraint\"\n      ],\n      \"_transform_to_stack\": [\n         \"constraint\"\n      ],\n      \"_try_cast_integer_to_float\": [\n         \"g\"\n      ],\n      \"_try_get_dispatched_fn\": [\n         \"fn\"\n      ],\n      \"_try_get_jit_cached_function\": [\n         \"key\"\n      ],\n      \"_try_get_jit_cached_overloads\": [\n         \"key\"\n      ],\n      \"_try_get_overloaded_fn\": [\n         \"mod\",\n         \"field\"\n      ],\n      \"_try_get_scalar_type\": [],\n      \"_try_get_shapes\": [\n         \"nets\"\n      ],\n      \"_tuple_postprocess\": [\n         \"res\",\n         \"to_unpack\"\n      ],\n      \"_type\": [\n         \"self\",\n         \"dtype\",\n         \"non_blocking\"\n      ],\n      \"_unflatten\": [\n         \"input\",\n         \"proto\"\n      ],\n      \"_unflatten_dense_tensors\": [\n         \"flat\",\n         \"tensors\"\n      ],\n      \"_unflatten_sparse_tensors\": [\n         \"flat\",\n         \"tensors\"\n      ],\n      \"_unimplemented\": [\n         \"op\",\n         \"msg\"\n      ],\n      \"_unique\": [\n         \"g\",\n         \"input\",\n         \"sorted\",\n         \"return_inverse\"\n      ],\n      \"_unique2\": [\n         \"g\",\n         \"input\",\n         \"sorted\",\n         \"return_inverse\",\n         \"return_counts\"\n      ],\n      \"_unique_ref\": [\n         \"x\",\n         \"return_inverse\"\n      ],\n      \"_unique_state_dict\": [\n         \"module\",\n         \"keep_vars\"\n      ],\n      \"_unpack_list\": [\n         \"list_value\"\n      ],\n      \"_unpool_output_size\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_size\"\n      ],\n      \"_unsqueeze_helper\": [\n         \"g\",\n         \"input\",\n         \"dim\"\n      ],\n      \"_unsupported_dropout\": [\n         \"name\"\n      ],\n      \"_unwrap_optional\": [\n         \"x\"\n      ],\n      \"_use_rpc_pickler\": [\n         \"rpc_pickler\"\n      ],\n      \"_uses_true_division\": [\n         \"fn\"\n      ],\n      \"_validate_dynamic_axes\": [\n         \"dynamic_axes\",\n         \"model\",\n         \"input_names\",\n         \"output_names\"\n      ],\n      \"_validate_pruning_amount\": [\n         \"amount\",\n         \"tensor_size\"\n      ],\n      \"_validate_pruning_amount_init\": [\n         \"amount\"\n      ],\n      \"_validate_pruning_dim\": [\n         \"t\",\n         \"dim\"\n      ],\n      \"_validate_rpc_args\": [\n         \"backend\",\n         \"store\",\n         \"name\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"_validate_structured_pruning\": [\n         \"t\"\n      ],\n      \"_validate_v\": [\n         \"v\",\n         \"other\",\n         \"is_other_tuple\"\n      ],\n      \"_vector_str\": [\n         \"self\",\n         \"indent\",\n         \"formatter\",\n         \"summarize\"\n      ],\n      \"_verify_batch_size\": [\n         \"size\"\n      ],\n      \"_verify_equal\": [\n         \"xs\",\n         \"ys\"\n      ],\n      \"_wait_all_workers\": [],\n      \"_wait_for_all\": [\n         \"rpc_futs\"\n      ],\n      \"_weight_norm\": [\n         \"g\",\n         \"weight_v\",\n         \"weight_g\",\n         \"dim\"\n      ],\n      \"_weighted_sum\": [\n         \"model\",\n         \"values\",\n         \"weight\",\n         \"output_name\"\n      ],\n      \"_with_args\": [\n         \"cls_or_self\"\n      ],\n      \"_worker_loop\": [\n         \"dataset_kind\",\n         \"dataset\",\n         \"index_queue\",\n         \"data_queue\",\n         \"done_event\",\n         \"auto_collation\",\n         \"collate_fn\",\n         \"drop_last\",\n         \"seed\",\n         \"init_fn\",\n         \"worker_id\",\n         \"num_workers\"\n      ],\n      \"_workload_thread\": [],\n      \"_wrap\": [\n         \"fn\",\n         \"i\",\n         \"args\",\n         \"error_queue\"\n      ],\n      \"_wrap_maybe_warns\": [\n         \"regex\"\n      ],\n      \"_wrap_type_error_to_not_implemented\": [\n         \"f\"\n      ],\n      \"_write_ninja_file\": [\n         \"path\",\n         \"cflags\",\n         \"post_cflags\",\n         \"cuda_cflags\",\n         \"cuda_post_cflags\",\n         \"sources\",\n         \"objects\",\n         \"ldflags\",\n         \"library_target\",\n         \"with_cuda\"\n      ],\n      \"_write_ninja_file_and_build_library\": [\n         \"name\",\n         \"sources\",\n         \"extra_cflags\",\n         \"extra_cuda_cflags\",\n         \"extra_ldflags\",\n         \"extra_include_paths\",\n         \"build_directory\",\n         \"verbose\",\n         \"with_cuda\"\n      ],\n      \"_write_ninja_file_and_compile_objects\": [\n         \"sources\",\n         \"objects\",\n         \"cflags\",\n         \"post_cflags\",\n         \"cuda_cflags\",\n         \"cuda_post_cflags\",\n         \"build_directory\",\n         \"verbose\",\n         \"with_cuda\"\n      ],\n      \"_write_ninja_file_to_build_library\": [\n         \"path\",\n         \"name\",\n         \"sources\",\n         \"extra_cflags\",\n         \"extra_cuda_cflags\",\n         \"extra_ldflags\",\n         \"extra_include_paths\",\n         \"with_cuda\"\n      ],\n      \"_x_log_x\": [\n         \"tensor\"\n      ],\n      \"abs\": [\n         \"g\",\n         \"self\"\n      ],\n      \"absolute\": [\n         \"g\",\n         \"self\"\n      ],\n      \"accuracy\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\"\n      ],\n      \"acos\": [\n         \"g\",\n         \"self\"\n      ],\n      \"adagrad_sparse_test_helper\": [\n         \"parent_test\",\n         \"inputs\",\n         \"lr\",\n         \"epsilon\",\n         \"engine\",\n         \"ref_adagrad\",\n         \"gc\",\n         \"dc\",\n         \"row_wise\",\n         \"weight_decay\"\n      ],\n      \"adaptive_avg_pool2d\": [\n         \"input\",\n         \"output_size\"\n      ],\n      \"adaptive_avg_pool3d\": [\n         \"input\",\n         \"output_size\"\n      ],\n      \"adaptive_max_pool1d_with_indices\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"adaptive_max_pool2d_with_indices\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"adaptive_max_pool3d_with_indices\": [\n         \"input\",\n         \"output_size\",\n         \"return_indices\"\n      ],\n      \"add\": [\n         \"g\",\n         \"self\",\n         \"other\",\n         \"alpha\"\n      ],\n      \"add_autograd_test\": [\n         \"name\",\n         \"self_size\",\n         \"args\",\n         \"variant_name\",\n         \"check_ad\",\n         \"dim_args_idx\",\n         \"skipTestIf\",\n         \"output_process_fn\",\n         \"kwargs\"\n      ],\n      \"add_blob\": [\n         \"ws\",\n         \"blob_name\",\n         \"tensor_size\"\n      ],\n      \"add_dim3\": [\n         \"kernel_string\",\n         \"cuda_kernel\"\n      ],\n      \"add_docstr_all\": [\n         \"method\",\n         \"docstr\"\n      ],\n      \"add_if_op\": [\n         \"if_net\",\n         \"cond_blob\",\n         \"lexical_scope\",\n         \"then_net\",\n         \"else_net\"\n      ],\n      \"add_neg_dim_tests\": [],\n      \"add_nets_in_order\": [\n         \"step\",\n         \"net_list\"\n      ],\n      \"add_nn_functional_test\": [\n         \"name\",\n         \"self_size\",\n         \"args\",\n         \"variant_name\",\n         \"check_ad\",\n         \"skipTestIf\",\n         \"output_process_fn\",\n         \"kwargs\"\n      ],\n      \"add_nn_module_test\": [],\n      \"add_observer_\": [\n         \"module\"\n      ],\n      \"add_op_registrations\": [\n         \"per_type_registrations\",\n         \"per_op_registrations\",\n         \"schema_registrations\",\n         \"op_registrations\"\n      ],\n      \"add_python_attr_to_scripted_model\": [\n         \"script_model\",\n         \"orig\",\n         \"attr\"\n      ],\n      \"add_quant_dequant\": [\n         \"module\"\n      ],\n      \"add_quantization_param_args\": [\n         \"op\",\n         \"tensor\",\n         \"preserve_sparsity\"\n      ],\n      \"add_quantization_param_args_\": [\n         \"op\",\n         \"q_param\"\n      ],\n      \"add_rref_to_value\": [\n         \"rref\",\n         \"value\"\n      ],\n      \"add_setup_steps\": [\n         \"step\",\n         \"init_nets\",\n         \"exit_nets\",\n         \"name\"\n      ],\n      \"add_tensor\": [\n         \"net\",\n         \"name\",\n         \"blob\"\n      ],\n      \"add_tensors_loop\": [\n         \"x\",\n         \"y\"\n      ],\n      \"add_test\": [\n         \"test\",\n         \"decorator\"\n      ],\n      \"add_variants\": [\n         \"option\"\n      ],\n      \"add_version_to_conv_bias\": [\n         \"net\",\n         \"init_net\"\n      ],\n      \"add_weight_decay\": [\n         \"model\",\n         \"weight_decay\"\n      ],\n      \"add_while_op\": [\n         \"while_net\",\n         \"cond_blob\",\n         \"lexical_scope\",\n         \"loop_body_net\",\n         \"condition_body_net\"\n      ],\n      \"addmm\": [\n         \"mat\",\n         \"mat1\",\n         \"mat2\",\n         \"beta\",\n         \"alpha\"\n      ],\n      \"affine_grid\": [\n         \"theta\",\n         \"size\",\n         \"align_corners\"\n      ],\n      \"alexnet\": [],\n      \"alias\": [\n         \"g\",\n         \"self\"\n      ],\n      \"align_tensors\": [],\n      \"all_backward_graphs\": [\n         \"script_module\",\n         \"diff_graph_idx\"\n      ],\n      \"all_gather\": [\n         \"tensor_list\",\n         \"tensor\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_gather_coalesced\": [\n         \"output_tensor_lists\",\n         \"input_tensor_list\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_gather_multigpu\": [\n         \"output_tensor_lists\",\n         \"input_tensor_list\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_generator_source\": [],\n      \"all_reduce\": [\n         \"tensor\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_reduce_coalesced\": [\n         \"tensors\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_reduce_multigpu\": [\n         \"tensor_list\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_saved_variables\": [\n         \"derivatives\",\n         \"key\"\n      ],\n      \"all_to_all\": [\n         \"output_tensor_list\",\n         \"input_tensor_list\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"all_to_all_single\": [\n         \"output\",\n         \"input\",\n         \"output_split_sizes\",\n         \"input_split_sizes\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"allcompare_process\": [\n         \"filestore_dir\",\n         \"process_id\",\n         \"data\",\n         \"num_procs\"\n      ],\n      \"allequal\": [\n         \"iterator\"\n      ],\n      \"allgather_object\": [\n         \"obj\"\n      ],\n      \"allgather_run\": [\n         \"cmd\"\n      ],\n      \"allocate_buffers\": [\n         \"engine\"\n      ],\n      \"almost_equal_schemas\": [\n         \"record\",\n         \"original_schema\",\n         \"check_field_names\",\n         \"check_field_types\",\n         \"check_field_metas\"\n      ],\n      \"alpha_dropout\": [\n         \"input\",\n         \"p\",\n         \"training\",\n         \"inplace\"\n      ],\n      \"analyze\": [\n         \"obj\"\n      ],\n      \"analyze_job\": [\n         \"analyzer\",\n         \"job\"\n      ],\n      \"analyze_net\": [\n         \"analyzer\",\n         \"net\"\n      ],\n      \"analyze_op\": [\n         \"analyzer\",\n         \"op\"\n      ],\n      \"analyze_step\": [\n         \"analyzer\",\n         \"step\"\n      ],\n      \"analyze_task\": [\n         \"analyzer\",\n         \"task\"\n      ],\n      \"analyze_task_group\": [\n         \"analyzer\",\n         \"tg\"\n      ],\n      \"angle_rad_\": [],\n      \"ann_to_type\": [\n         \"ann\",\n         \"loc\"\n      ],\n      \"annotate\": [\n         \"ret\"\n      ],\n      \"annotated_type_of\": [\n         \"arg\",\n         \"typ\"\n      ],\n      \"append\": [\n         \"g\",\n         \"self\",\n         \"tensor\"\n      ],\n      \"apply_assignments\": [\n         \"net\",\n         \"blob_assignments\"\n      ],\n      \"apply_crf\": [\n         \"init_net\",\n         \"net\",\n         \"transitions\",\n         \"predictions\",\n         \"num_classes\"\n      ],\n      \"apply_dot_attention\": [\n         \"model\",\n         \"encoder_output_dim\",\n         \"encoder_outputs_transposed\",\n         \"decoder_hidden_state_t\",\n         \"decoder_hidden_state_dim\",\n         \"scope\",\n         \"encoder_lengths\"\n      ],\n      \"apply_hack_for_nccl\": [],\n      \"apply_permutation\": [\n         \"tensor\",\n         \"permutation\",\n         \"dim\"\n      ],\n      \"apply_recurrent_attention\": [\n         \"model\",\n         \"encoder_output_dim\",\n         \"encoder_outputs_transposed\",\n         \"weighted_encoder_outputs\",\n         \"decoder_hidden_state_t\",\n         \"decoder_hidden_state_dim\",\n         \"attention_weighted_encoder_context_t_prev\",\n         \"scope\",\n         \"encoder_lengths\"\n      ],\n      \"apply_recurrent_blob_assignments\": [\n         \"op\",\n         \"blob_assignments\",\n         \"canonical_name\"\n      ],\n      \"apply_regular_attention\": [\n         \"model\",\n         \"encoder_output_dim\",\n         \"encoder_outputs_transposed\",\n         \"weighted_encoder_outputs\",\n         \"decoder_hidden_state_t\",\n         \"decoder_hidden_state_dim\",\n         \"scope\",\n         \"encoder_lengths\"\n      ],\n      \"apply_soft_coverage_attention\": [\n         \"model\",\n         \"encoder_output_dim\",\n         \"encoder_outputs_transposed\",\n         \"weighted_encoder_outputs\",\n         \"decoder_hidden_state_t\",\n         \"decoder_hidden_state_dim\",\n         \"scope\",\n         \"encoder_lengths\",\n         \"coverage_t_prev\",\n         \"coverage_weights\"\n      ],\n      \"apply_to_cons\": [\n         \"t\"\n      ],\n      \"approx_heatmap_keypoint\": [\n         \"heatmaps_in\",\n         \"bboxes_in\"\n      ],\n      \"aquireDatasets\": [\n         \"opts\"\n      ],\n      \"arange\": [\n         \"g\"\n      ],\n      \"arg_scope\": [\n         \"single_helper_or_list\"\n      ],\n      \"arg_to_type_hint\": [\n         \"arg\"\n      ],\n      \"argmax\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"keepdim\"\n      ],\n      \"argmin\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"keepdim\"\n      ],\n      \"argument_order\": [\n         \"decl\"\n      ],\n      \"argument_to_declaration\": [\n         \"param\",\n         \"func\"\n      ],\n      \"array_shapes\": [\n         \"draw\",\n         \"min_dims\",\n         \"max_dims\",\n         \"min_side\",\n         \"max_side\"\n      ],\n      \"arrays\": [\n         \"dims\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"as_record\": [\n         \"value\"\n      ],\n      \"asin\": [\n         \"g\",\n         \"self\"\n      ],\n      \"assembleAllOutputs\": [\n         \"self\"\n      ],\n      \"assertAutodiffNode\": [\n         \"self\",\n         \"graph\",\n         \"should_autodiff_node\",\n         \"nonfusible_nodes\",\n         \"fusible_nodes\"\n      ],\n      \"assertEqual\": [\n         \"tensor\",\n         \"expected\",\n         \"threshold\"\n      ],\n      \"assertExpectedGraph\": [\n         \"self\",\n         \"trace\"\n      ],\n      \"assertExpectedONNXGraph\": [\n         \"self\",\n         \"g\"\n      ],\n      \"assertExportImport\": [\n         \"self\",\n         \"trace\",\n         \"inputs\"\n      ],\n      \"assertExportImportModule\": [\n         \"self\",\n         \"m\",\n         \"inputs\"\n      ],\n      \"assertGraphContains\": [\n         \"self\",\n         \"graph\",\n         \"kind\"\n      ],\n      \"assertGraphContainsExactly\": [\n         \"self\",\n         \"graph\",\n         \"kind\",\n         \"num_kind_nodes\",\n         \"consider_subgraphs\"\n      ],\n      \"assert_allclose\": [\n         \"actual\",\n         \"expected\",\n         \"rtol\",\n         \"atol\",\n         \"equal_nan\",\n         \"msg\"\n      ],\n      \"assert_deadline_disabled\": [],\n      \"assert_int_or_pair\": [\n         \"arg\",\n         \"arg_name\",\n         \"message\"\n      ],\n      \"assert_similar\": [\n         \"ref\",\n         \"real\"\n      ],\n      \"assert_training_mode\": [\n         \"op_mode\",\n         \"op_name\"\n      ],\n      \"assign\": [],\n      \"assorted_types_args_kwargs\": [\n         \"tensor_arg\",\n         \"str_arg\",\n         \"int_arg\",\n         \"tensor_kwarg\",\n         \"str_kwarg\",\n         \"int_kwarg\"\n      ],\n      \"assume_not_overflowing\": [\n         \"tensor\",\n         \"qparams\"\n      ],\n      \"atan\": [\n         \"g\",\n         \"self\"\n      ],\n      \"attach_metadata_to_scalars\": [\n         \"field\",\n         \"metadata\"\n      ],\n      \"attr_formatter\": [\n         \"name\"\n      ],\n      \"attr_probs\": [],\n      \"attr_value_proto\": [\n         \"dtype\",\n         \"shape\",\n         \"s\"\n      ],\n      \"attribute_names\": [\n         \"o\"\n      ],\n      \"attrs_with_prefix\": [\n         \"module\",\n         \"prefix\"\n      ],\n      \"audio\": [\n         \"tag\",\n         \"tensor\",\n         \"sample_rate\"\n      ],\n      \"augment_model_with_bundled_inputs\": [\n         \"model\",\n         \"inputs\",\n         \"_receive_inflate_expr\"\n      ],\n      \"autograd_sharing\": [\n         \"queue\",\n         \"ready\",\n         \"master_modified\",\n         \"device\",\n         \"is_parameter\"\n      ],\n      \"average_pool\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"use_cudnn\",\n         \"order\"\n      ],\n      \"avg_pool2d\": [\n         \"g\",\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"avg_pool3d\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"ceil_mode\",\n         \"count_include_pad\",\n         \"divisor_override\"\n      ],\n      \"avoid_vpmaddubsw_overflow\": [\n         \"strides\",\n         \"pads\",\n         \"kernels\",\n         \"dilations\",\n         \"sizes\",\n         \"input_channels\",\n         \"output_channels\",\n         \"batch_size\",\n         \"X\",\n         \"X_min\",\n         \"X_max\",\n         \"W\",\n         \"W_min\",\n         \"W_max\"\n      ],\n      \"avoid_vpmaddubsw_overflow_fc\": [\n         \"batch_size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"X\",\n         \"X_min\",\n         \"X_max\",\n         \"W\",\n         \"W_min\",\n         \"W_max\"\n      ],\n      \"avoid_vpmaddubsw_overflow_linear\": [\n         \"batch_size\",\n         \"input_channels\",\n         \"output_channels\",\n         \"X\",\n         \"X_min\",\n         \"X_max\",\n         \"W\",\n         \"W_min\",\n         \"W_max\"\n      ],\n      \"axis_vector_\": [],\n      \"backend_registered\": [\n         \"backend_name\"\n      ],\n      \"backend_to_devicetype\": [\n         \"backend\"\n      ],\n      \"backward\": [\n         \"tensors\",\n         \"grad_tensors\",\n         \"retain_graph\",\n         \"create_graph\",\n         \"grad_variables\"\n      ],\n      \"backward_declaration\": [\n         \"base\",\n         \"thnn_functions\",\n         \"backend_types\"\n      ],\n      \"backward_engine\": [\n         \"engine\"\n      ],\n      \"backward_graph\": [\n         \"script_module\",\n         \"diff_graph_idx\",\n         \"skip_check\"\n      ],\n      \"baddbmm\": [\n         \"g\",\n         \"self\",\n         \"batch1\",\n         \"batch2\",\n         \"beta\",\n         \"alpha\"\n      ],\n      \"bar\": [\n         \"a\"\n      ],\n      \"barf\": [],\n      \"barrier\": [\n         \"group\",\n         \"async_op\"\n      ],\n      \"base_declaration\": [\n         \"func\",\n         \"thnn_function\",\n         \"backends\",\n         \"backend_types\",\n         \"inplace\"\n      ],\n      \"base_name\": [\n         \"decl\"\n      ],\n      \"basic_rnn_reference\": [\n         \"input\",\n         \"hidden_initial\",\n         \"i2h_w\",\n         \"i2h_b\",\n         \"gate_w\",\n         \"gate_b\",\n         \"seq_lengths\",\n         \"drop_states\",\n         \"use_sequence_lengths\"\n      ],\n      \"basis\": [\n         \"A\"\n      ],\n      \"batch_mat_mul\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"enable_tensor_core\"\n      ],\n      \"batch_norm\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"running_mean\",\n         \"running_var\",\n         \"training\",\n         \"momentum\",\n         \"eps\",\n         \"cudnn_enabled\"\n      ],\n      \"batched_boarders_and_data\": [\n         \"data_min_size\",\n         \"data_max_size\",\n         \"examples_min_number\",\n         \"examples_max_number\",\n         \"example_min_size\",\n         \"example_max_size\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"baz\": [\n         \"a\",\n         \"b\"\n      ],\n      \"bbox_transform\": [\n         \"boxes\",\n         \"deltas\",\n         \"weights\"\n      ],\n      \"bbox_transform_rotated\": [\n         \"boxes\",\n         \"deltas\",\n         \"weights\",\n         \"angle_bound_on\",\n         \"angle_bound_lo\",\n         \"angle_bound_hi\"\n      ],\n      \"bce_with_logistic_legacy_enum_test\": [],\n      \"bce_with_logistic_no_reduce_scalar_test\": [],\n      \"bce_with_logistic_no_reduce_test\": [],\n      \"bceloss_no_reduce_scalar_test\": [],\n      \"bceloss_no_reduce_test\": [],\n      \"bceloss_weights_no_reduce_scalar_test\": [],\n      \"bceloss_weights_no_reduce_test\": [],\n      \"bench\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"bench_group\": [\n         \"model_list\",\n         \"bench_name\",\n         \"bench_group\",\n         \"bench_args\"\n      ],\n      \"benchmark\": [\n         \"args\"\n      ],\n      \"benchmark_caffe2_model\": [\n         \"init_net\",\n         \"predict_net\",\n         \"warmup_iters\",\n         \"main_iters\",\n         \"layer_details\"\n      ],\n      \"benchmark_module\": [\n         \"config\",\n         \"module\",\n         \"use_throughput_benchmark\"\n      ],\n      \"benchmark_mul_gradient\": [\n         \"args\"\n      ],\n      \"benchmark_process_group\": [\n         \"pg\",\n         \"benchmark\",\n         \"use_ddp_for_single_rank\"\n      ],\n      \"benchmark_pytorch_model\": [\n         \"model\",\n         \"inputs\",\n         \"training\",\n         \"warmup_iters\",\n         \"main_iters\",\n         \"verbose\"\n      ],\n      \"benchmark_simple_fn\": [\n         \"args\",\n         \"config\",\n         \"module_config\",\n         \"module_type\",\n         \"result\"\n      ],\n      \"benchmark_sparse_lengths_sum\": [\n         \"dtype_str\",\n         \"categorical_limit\",\n         \"embedding_size\",\n         \"average_len\",\n         \"batch_size\",\n         \"iterations\",\n         \"flush_cache\"\n      ],\n      \"benchmark_using_throughput_benchmark\": [\n         \"config\",\n         \"module\"\n      ],\n      \"bernoulli_scalar\": [],\n      \"bform\": [\n         \"X\",\n         \"A\",\n         \"Y\"\n      ],\n      \"bilinear\": [\n         \"input1\",\n         \"input2\",\n         \"weight\",\n         \"bias\"\n      ],\n      \"binary_cross_entropy\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"binary_cross_entropy_with_logits\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\",\n         \"pos_weight\"\n      ],\n      \"bind\": [\n         \"optional\",\n         \"fn\"\n      ],\n      \"bind_method\": [\n         \"fn\",\n         \"obj\",\n         \"obj_type\"\n      ],\n      \"bitwise_not\": [\n         \"g\",\n         \"inp\"\n      ],\n      \"blob_nbytes\": [\n         \"blob\"\n      ],\n      \"blob_uses\": [\n         \"net\",\n         \"blob\"\n      ],\n      \"block_diag\": [],\n      \"bmm\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"bmuf_process\": [\n         \"filestore_dir\",\n         \"process_id\",\n         \"shared_results\",\n         \"cpu_device\",\n         \"nesterov\"\n      ],\n      \"boolean_dispatch\": [\n         \"arg_name\",\n         \"arg_index\",\n         \"default\",\n         \"if_true\",\n         \"if_false\",\n         \"module_name\",\n         \"func_name\"\n      ],\n      \"boxes_area\": [\n         \"boxes\"\n      ],\n      \"broadcast\": [\n         \"tensor\",\n         \"src\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"broadcast_all\": [],\n      \"broadcast_coalesced\": [\n         \"tensors\",\n         \"devices\",\n         \"buffer_size\"\n      ],\n      \"broadcast_multigpu\": [\n         \"tensor_list\",\n         \"src\",\n         \"group\",\n         \"async_op\",\n         \"src_tensor\"\n      ],\n      \"broadcast_parameters\": [\n         \"opts\",\n         \"model\",\n         \"num_xpus\",\n         \"broadcast_computed_param\"\n      ],\n      \"broadcast_tensors\": [],\n      \"build_adadelta\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"parameters\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_adagrad\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"parameters\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_adam\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_boollist\": [\n         \"data\"\n      ],\n      \"build_caffe2\": [\n         \"version\",\n         \"cmake_python_library\",\n         \"build_python\",\n         \"rerun_cmake\",\n         \"cmake_only\",\n         \"cmake\"\n      ],\n      \"build_class_def\": [\n         \"ctx\",\n         \"py_def\",\n         \"methods\",\n         \"self_name\"\n      ],\n      \"build_complex_tensors\": [],\n      \"build_conv_model\": [\n         \"model_name\",\n         \"batch_size\"\n      ],\n      \"build_cpp_tests\": [\n         \"unit_test_class\",\n         \"print_cpp_source\"\n      ],\n      \"build_def\": [\n         \"ctx\",\n         \"py_def\",\n         \"type_line\",\n         \"self_name\"\n      ],\n      \"build_deps\": [],\n      \"build_dim_map\": [\n         \"tensor\"\n      ],\n      \"build_doublelist\": [\n         \"data\"\n      ],\n      \"build_embedding_decoder\": [\n         \"model\",\n         \"decoder_layer_configs\",\n         \"inputs\",\n         \"input_lengths\",\n         \"encoder_lengths\",\n         \"encoder_outputs\",\n         \"weighted_encoder_outputs\",\n         \"final_encoder_hidden_states\",\n         \"final_encoder_cell_states\",\n         \"encoder_units_per_layer\",\n         \"vocab_size\",\n         \"embeddings\",\n         \"embedding_size\",\n         \"attention_type\",\n         \"forward_only\",\n         \"num_gpus\",\n         \"scope\"\n      ],\n      \"build_embedding_encoder\": [\n         \"model\",\n         \"encoder_params\",\n         \"num_decoder_layers\",\n         \"inputs\",\n         \"input_lengths\",\n         \"vocab_size\",\n         \"embeddings\",\n         \"embedding_size\",\n         \"use_attention\",\n         \"num_gpus\",\n         \"forward_only\",\n         \"scope\"\n      ],\n      \"build_embeddings\": [\n         \"model\",\n         \"vocab_size\",\n         \"embedding_size\",\n         \"name\",\n         \"freeze_embeddings\"\n      ],\n      \"build_fp16_sgd\": [\n         \"model\",\n         \"base_learning_rate\"\n      ],\n      \"build_ftrl\": [\n         \"model\",\n         \"engine\"\n      ],\n      \"build_gftrl\": [\n         \"model\",\n         \"engine\"\n      ],\n      \"build_initial_rnn_decoder_states\": [\n         \"model\",\n         \"encoder_units_per_layer\",\n         \"decoder_units_per_layer\",\n         \"final_encoder_hidden_states\",\n         \"final_encoder_cell_states\",\n         \"use_attention\"\n      ],\n      \"build_intlist\": [\n         \"data\"\n      ],\n      \"build_multi_precision_sgd\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_net\": [\n         \"net_name\",\n         \"cross_socket\"\n      ],\n      \"build_param\": [\n         \"ctx\",\n         \"py_arg\",\n         \"self_name\",\n         \"kwarg_only\"\n      ],\n      \"build_param_list\": [\n         \"ctx\",\n         \"py_args\",\n         \"self_name\"\n      ],\n      \"build_pipeline\": [\n         \"node_id\"\n      ],\n      \"build_resnet50_dataparallel_model\": [\n         \"num_gpus\",\n         \"batch_size\",\n         \"epoch_size\",\n         \"cudnn_workspace_limit_mb\",\n         \"num_channels\",\n         \"num_labels\",\n         \"weight_decay\",\n         \"base_learning_rate\",\n         \"image_size\",\n         \"use_cpu\"\n      ],\n      \"build_rms_prop\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_sgd\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_stmts\": [\n         \"ctx\",\n         \"stmts\"\n      ],\n      \"build_storm\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"parameters\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_table\": [\n         \"events\",\n         \"sort_by\",\n         \"header\",\n         \"row_limit\",\n         \"use_cuda\"\n      ],\n      \"build_tensor_from_id\": [\n         \"data\"\n      ],\n      \"build_tensorlist\": [\n         \"data\"\n      ],\n      \"build_test_net\": [\n         \"net_name\"\n      ],\n      \"build_wngrad\": [\n         \"model\",\n         \"base_learning_rate\",\n         \"parameters\",\n         \"max_gradient_norm\",\n         \"allow_lr_injection\"\n      ],\n      \"build_yellowfin\": [\n         \"model\",\n         \"base_learning_rate\"\n      ],\n      \"bundle_randn\": [],\n      \"bytes_to_floats\": [\n         \"byte_matrix\"\n      ],\n      \"bytes_to_half_floats\": [\n         \"byte_matrix\"\n      ],\n      \"c10_op_ref\": [\n         \"maps\",\n         \"rois\"\n      ],\n      \"c2_native_run_net\": [\n         \"init_net\",\n         \"predict_net\",\n         \"inputs\",\n         \"debug_arg\"\n      ],\n      \"c2_native_run_op\": [\n         \"op_def\",\n         \"inputs\"\n      ],\n      \"caching_allocator_alloc\": [\n         \"size\",\n         \"device\",\n         \"stream\"\n      ],\n      \"caching_allocator_delete\": [\n         \"mem_ptr\"\n      ],\n      \"caffe2_flaky\": [\n         \"test_method\"\n      ],\n      \"caffe2_img\": [\n         \"img\"\n      ],\n      \"caffe2_to_onnx\": [\n         \"caffe2_model_name\",\n         \"caffe2_model_dir\"\n      ],\n      \"calculate_ap\": [\n         \"predictions\",\n         \"labels\"\n      ],\n      \"calculate_gain\": [\n         \"nonlinearity\",\n         \"param\"\n      ],\n      \"call\": [\n         \"op\",\n         \"inputs\",\n         \"outputs\",\n         \"factor_prefixes\"\n      ],\n      \"call_fork_with_profiling\": [\n         \"handle\"\n      ],\n      \"call_rpc_with_profiling\": [\n         \"handle\",\n         \"dst_worker_name\"\n      ],\n      \"camel_to_snake\": [\n         \"name\"\n      ],\n      \"can_compile_class\": [\n         \"cls\"\n      ],\n      \"canonical\": [\n         \"graph\"\n      ],\n      \"canonical_name\": [\n         \"opname\"\n      ],\n      \"cartesian_prod\": [],\n      \"cat\": [\n         \"g\",\n         \"tensor_list\",\n         \"dim\"\n      ],\n      \"cdist\": [\n         \"x1\",\n         \"x2\",\n         \"p\",\n         \"compute_mode\"\n      ],\n      \"ceil\": [\n         \"g\",\n         \"input\"\n      ],\n      \"celu\": [\n         \"input\",\n         \"alpha\",\n         \"inplace\"\n      ],\n      \"chain_matmul\": [],\n      \"checkBailouts\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"expected\"\n      ],\n      \"checkModule\": [\n         \"self\",\n         \"nn_module\",\n         \"args\"\n      ],\n      \"checkScript\": [\n         \"self\",\n         \"script\",\n         \"inputs\",\n         \"name\",\n         \"optimize\",\n         \"inputs_requires_grad\",\n         \"capture_output\",\n         \"frames_up\",\n         \"profiling\"\n      ],\n      \"checkScriptRaisesRegex\": [\n         \"self\",\n         \"script\",\n         \"inputs\",\n         \"exception\",\n         \"regex\",\n         \"outputs\",\n         \"capture_output\",\n         \"profiling\"\n      ],\n      \"checkTrace\": [\n         \"self\",\n         \"func\",\n         \"reference_tensors\",\n         \"input_tensors\",\n         \"drop\",\n         \"allow_unused\",\n         \"verbose\",\n         \"inputs_require_grads\",\n         \"check_tolerance\",\n         \"export_import\",\n         \"_force_outplace\"\n      ],\n      \"check_against_reference\": [\n         \"self\",\n         \"func\",\n         \"reference_func\",\n         \"args\",\n         \"kwargs\",\n         \"allow_unused\",\n         \"check_types\",\n         \"no_grad\"\n      ],\n      \"check_alias_annotation\": [\n         \"method_name\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"check_backward_validity\": [\n         \"inputs\"\n      ],\n      \"check_bc\": [\n         \"new_schema_dict\"\n      ],\n      \"check_compiler_abi_compatibility\": [\n         \"compiler\"\n      ],\n      \"check_compiler_ok_for_platform\": [\n         \"compiler\"\n      ],\n      \"check_disabled\": [\n         \"test_name\"\n      ],\n      \"check_env_flag\": [\n         \"name\",\n         \"default\"\n      ],\n      \"check_error\": [\n         \"res\"\n      ],\n      \"check_fn\": [\n         \"fn\",\n         \"loc\"\n      ],\n      \"check_gpu_\": [],\n      \"check_methods_do_not_start_with_underscore\": [\n         \"name\",\n         \"is_method\"\n      ],\n      \"check_module_initialized\": [\n         \"mod\"\n      ],\n      \"check_module_version_greater_or_equal\": [\n         \"module\",\n         \"req_version_tuple\",\n         \"error_if_malformed\"\n      ],\n      \"check_negative_env_flag\": [\n         \"name\",\n         \"default\"\n      ],\n      \"check_onnx_broadcast\": [\n         \"dims1\",\n         \"dims2\"\n      ],\n      \"check_onnx_opset_operator\": [\n         \"model\",\n         \"ops\",\n         \"opset_version\"\n      ],\n      \"check_onnx_opsets_operator\": [\n         \"module\",\n         \"x\",\n         \"ops\",\n         \"opset_versions\",\n         \"training\",\n         \"example_outputs\"\n      ],\n      \"check_output_types\": [\n         \"self\",\n         \"func\",\n         \"ref_outputs\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"check_pydep\": [\n         \"importname\",\n         \"module\"\n      ],\n      \"check_quantized_results_close\": [\n         \"outputs\",\n         \"ref\",\n         \"symmetric\",\n         \"atol_scale\"\n      ],\n      \"check_release_file\": [\n         \"run_lambda\"\n      ],\n      \"check_replicas\": [\n         \"self\",\n         \"module\",\n         \"replicas\",\n         \"input_shape\"\n      ],\n      \"check_rref_confirmed\": [\n         \"rref\"\n      ],\n      \"check_serializing_named_tensor\": [\n         \"tensor\"\n      ],\n      \"check_test_defined_in_running_script\": [\n         \"test_case\"\n      ],\n      \"checkpoint\": [\n         \"function\"\n      ],\n      \"checkpoint_sequential\": [\n         \"functions\",\n         \"segments\",\n         \"input\"\n      ],\n      \"choose_quantization_params\": [\n         \"tensor_min\",\n         \"tensor_max\",\n         \"preserve_sparsity\"\n      ],\n      \"chunk_list\": [\n         \"lst\",\n         \"nchunks\"\n      ],\n      \"clamp\": [\n         \"g\",\n         \"self\",\n         \"min\",\n         \"max\"\n      ],\n      \"clamp_max\": [\n         \"g\",\n         \"self\",\n         \"max\"\n      ],\n      \"clamp_min\": [\n         \"g\",\n         \"self\",\n         \"min\"\n      ],\n      \"clamp_probs\": [\n         \"probs\"\n      ],\n      \"clean_worker\": [],\n      \"cleanup\": [],\n      \"clearHooks\": [\n         \"self\"\n      ],\n      \"clear_class_registry\": [],\n      \"clear_global_rref\": [],\n      \"cli\": [],\n      \"clip_grad_norm\": [\n         \"parameters\",\n         \"max_norm\",\n         \"norm_type\"\n      ],\n      \"clip_grad_norm_\": [\n         \"parameters\",\n         \"max_norm\",\n         \"norm_type\"\n      ],\n      \"clip_grad_value_\": [\n         \"parameters\",\n         \"clip_value\"\n      ],\n      \"clip_tiled_boxes\": [\n         \"boxes\",\n         \"im_shape\"\n      ],\n      \"clip_tiled_boxes_rotated\": [\n         \"boxes\",\n         \"im_shape\",\n         \"angle_thresh\"\n      ],\n      \"clone\": [\n         \"g\",\n         \"input\",\n         \"unused_memory_format\"\n      ],\n      \"clone_and_bind_net\": [\n         \"net\",\n         \"name\",\n         \"prefix\",\n         \"blob_remap\",\n         \"inputs\",\n         \"keep_schema\"\n      ],\n      \"close_queue\": [\n         \"step\"\n      ],\n      \"cnn_to_graph_def\": [\n         \"cnn\"\n      ],\n      \"collate_into_packed_sequence\": [\n         \"batch\"\n      ],\n      \"collate_into_packed_sequence_batch_first\": [\n         \"batch\"\n      ],\n      \"collate_wrapper\": [\n         \"batch\"\n      ],\n      \"collect\": [\n         \"inputs\"\n      ],\n      \"collect_and_distribute_fpn_rpn_ref\": [],\n      \"collect_blob_sizes\": [\n         \"net\"\n      ],\n      \"collect_generated_testcases\": [\n         \"root_dir\",\n         \"verbose\",\n         \"fail_dir\",\n         \"expect\"\n      ],\n      \"collect_rpn_ref\": [],\n      \"colonize\": [\n         \"msg\",\n         \"sep\"\n      ],\n      \"commonprefix\": [\n         \"m\"\n      ],\n      \"compare_image_proto\": [\n         \"actual_proto\",\n         \"function_ptr\"\n      ],\n      \"compare_model_outputs\": [\n         \"float_model\",\n         \"q_model\",\n         \"data\",\n         \"Logger\",\n         \"white_list\"\n      ],\n      \"compare_model_stub\": [\n         \"float_model\",\n         \"q_model\",\n         \"module_swap_list\",\n         \"data\",\n         \"Logger\"\n      ],\n      \"compare_proto\": [\n         \"str_to_compare\",\n         \"function_ptr\"\n      ],\n      \"compare_rowwise\": [\n         \"emb_orig\",\n         \"emb_reconstructed\",\n         \"fp16\"\n      ],\n      \"compare_weights\": [\n         \"float_dict\",\n         \"quantized_dict\"\n      ],\n      \"compile_cpp_code_inline\": [\n         \"name\",\n         \"cpp_sources\",\n         \"functions\"\n      ],\n      \"compile_unbound_method\": [\n         \"concrete_type\",\n         \"fn\"\n      ],\n      \"compiled_with_cuda\": [\n         \"sysinfo\"\n      ],\n      \"compiled_with_cxx11_abi\": [],\n      \"complex_resnet\": [],\n      \"compute_arg_dict\": [\n         \"test_params_dict\",\n         \"test_instance\"\n      ],\n      \"compute_assignments\": [\n         \"ranges\",\n         \"static_blobs\",\n         \"algo\"\n      ],\n      \"compute_assignments_dp\": [\n         \"ranges_sorted\",\n         \"init_assignment\",\n         \"counter\"\n      ],\n      \"compute_assignments_greedy\": [\n         \"ranges_sorted\",\n         \"init_assignments\"\n      ],\n      \"compute_blob_assignments\": [\n         \"assignments\"\n      ],\n      \"compute_coverage_attention_logits\": [\n         \"hidden_t\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"attention_weighted_encoder_context_t_prev\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"attention_v\",\n         \"weighted_encoder_outputs\",\n         \"encoder_outputs_for_dot_product\",\n         \"coverage_prev\",\n         \"coverage_weights\"\n      ],\n      \"compute_cpp_args_construction_stmts_and_forward_arg_symbols\": [\n         \"test_params\"\n      ],\n      \"compute_cpp_function_call\": [\n         \"test_params_dict\",\n         \"arg_dict\",\n         \"functional_name\"\n      ],\n      \"compute_curve\": [\n         \"labels\",\n         \"predictions\",\n         \"num_thresholds\",\n         \"weights\"\n      ],\n      \"compute_dot_attention_logits\": [\n         \"hidden_t\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"attention_weighted_encoder_context_t_prev\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"attention_v\",\n         \"weighted_encoder_outputs\",\n         \"encoder_outputs_for_dot_product\",\n         \"coverage_prev\",\n         \"coverage_weights\"\n      ],\n      \"compute_file_sha1\": [\n         \"path\"\n      ],\n      \"compute_functional_name\": [\n         \"test_params_dict\"\n      ],\n      \"compute_interference_graph\": [\n         \"ops\"\n      ],\n      \"compute_module_name\": [\n         \"test_params_dict\"\n      ],\n      \"compute_ranges\": [\n         \"linearized_ops\",\n         \"blob_sizes\"\n      ],\n      \"compute_recurrent_attention_logits\": [\n         \"hidden_t\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"attention_weighted_encoder_context_t_prev\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"attention_v\",\n         \"weighted_encoder_outputs\",\n         \"encoder_outputs_for_dot_product\",\n         \"coverage_prev\",\n         \"coverage_weights\"\n      ],\n      \"compute_regular_attention_logits\": [\n         \"hidden_t\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"attention_weighted_encoder_context_t_prev\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"attention_v\",\n         \"weighted_encoder_outputs\",\n         \"encoder_outputs_for_dot_product\",\n         \"coverage_prev\",\n         \"coverage_weights\"\n      ],\n      \"compute_statistics\": [\n         \"assignments\"\n      ],\n      \"compute_stats\": [\n         \"stats\"\n      ],\n      \"compute_temp_file_path\": [\n         \"cpp_tmp_folder\",\n         \"variant_name\",\n         \"file_suffix\"\n      ],\n      \"concat\": [\n         \"model\",\n         \"blobs_in\",\n         \"blob_out\"\n      ],\n      \"cond\": [\n         \"model\",\n         \"cond_blob\",\n         \"external_blobs\",\n         \"then_model\",\n         \"else_model\"\n      ],\n      \"config_list\": [],\n      \"configure_extension_build\": [],\n      \"conjugate\": [\n         \"A\"\n      ],\n      \"constant_\": [\n         \"tensor\",\n         \"val\"\n      ],\n      \"constant_pad_nd\": [\n         \"g\",\n         \"input\",\n         \"padding\",\n         \"value\"\n      ],\n      \"constructTrainerClass\": [\n         \"myTrainerClass\",\n         \"opts\"\n      ],\n      \"construct_my_script_module\": [\n         \"rank\"\n      ],\n      \"construct_rpc_backend_options\": [\n         \"backend\",\n         \"rpc_timeout\",\n         \"init_method\"\n      ],\n      \"contiguous\": [\n         \"g\",\n         \"input\",\n         \"memory_format\"\n      ],\n      \"control_op_remap\": [\n         \"op\",\n         \"prefix\",\n         \"blob_remap\"\n      ],\n      \"conv\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"WeightInitializer\",\n         \"BiasInitializer\",\n         \"group\",\n         \"transform_inputs\"\n      ],\n      \"conv1d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv1d_input\": [\n         \"input_size\",\n         \"weight\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv1d_weight\": [\n         \"input\",\n         \"weight_size\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv2d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv2d_input\": [\n         \"input_size\",\n         \"weight\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv2d_relu\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"conv2d_weight\": [\n         \"input\",\n         \"weight_size\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv3d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv3d_input\": [\n         \"input_size\",\n         \"weight\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv3d_weight\": [\n         \"input\",\n         \"weight_size\",\n         \"grad_output\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv_model_generators\": [],\n      \"conv_nd\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"WeightInitializer\",\n         \"BiasInitializer\",\n         \"group\",\n         \"transform_inputs\",\n         \"order\"\n      ],\n      \"conv_prepack\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"groups\"\n      ],\n      \"conv_tbc\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"pad\"\n      ],\n      \"conv_transpose\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"use_cudnn\",\n         \"order\",\n         \"cudnn_exhaustive_search\",\n         \"ws_nbytes_limit\"\n      ],\n      \"conv_transpose1d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"dilation\"\n      ],\n      \"conv_transpose2d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"dilation\"\n      ],\n      \"conv_transpose3d\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"stride\",\n         \"padding\",\n         \"output_padding\",\n         \"groups\",\n         \"dilation\"\n      ],\n      \"convert\": [\n         \"module\",\n         \"mapping\",\n         \"inplace\"\n      ],\n      \"convertAttributeProto\": [\n         \"onnx_arg\"\n      ],\n      \"convert_cmake_value_to_python_value\": [\n         \"cmake_value\",\n         \"cmake_type\"\n      ],\n      \"convert_conv2d_weight_memory_format\": [\n         \"module\",\n         \"memory_format\"\n      ],\n      \"convert_dynamic\": [\n         \"module\"\n      ],\n      \"convert_dynamic_script\": [\n         \"model\",\n         \"debug\"\n      ],\n      \"convert_onnx_model_to_trt_op\": [\n         \"onnx_model\",\n         \"max_batch_size\",\n         \"max_workspace_size\",\n         \"verbosity\",\n         \"debug_builder\"\n      ],\n      \"convert_script\": [\n         \"model\",\n         \"inplace\",\n         \"debug\"\n      ],\n      \"convert_tests\": [\n         \"testcases\",\n         \"sets\"\n      ],\n      \"convert_to_HWC\": [\n         \"tensor\",\n         \"input_format\"\n      ],\n      \"convert_to_list\": [\n         \"python_input\"\n      ],\n      \"copy_func_between_devices\": [\n         \"src\",\n         \"dst\"\n      ],\n      \"copy_torchscript_modifier\": [\n         \"orig\",\n         \"new\"\n      ],\n      \"cos\": [\n         \"g\",\n         \"self\"\n      ],\n      \"cosine_embedding_loss\": [\n         \"input1\",\n         \"input2\",\n         \"target\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"cosine_similarity\": [\n         \"g\",\n         \"x1\",\n         \"x2\",\n         \"dim\",\n         \"eps\"\n      ],\n      \"cosineembeddingloss_reference\": [\n         \"input1\",\n         \"input2\",\n         \"target\",\n         \"margin\",\n         \"reduction\"\n      ],\n      \"count_blobs\": [\n         \"proto\"\n      ],\n      \"count_shared_blobs\": [\n         \"proto\"\n      ],\n      \"cpu_only\": [\n         \"inner\"\n      ],\n      \"cpu_time_total\": [\n         \"autograd_prof\"\n      ],\n      \"create\": [\n         \"namedshape\",\n         \"factory\"\n      ],\n      \"createFunctionFromGraph\": [\n         \"self\",\n         \"trace\"\n      ],\n      \"createResolutionCallbackForClassMethods\": [\n         \"cls\"\n      ],\n      \"createResolutionCallbackFromClosure\": [\n         \"fn\"\n      ],\n      \"createResolutionCallbackFromEnv\": [\n         \"lookup_base\"\n      ],\n      \"createResolutionCallbackFromFrame\": [\n         \"frames_up\"\n      ],\n      \"createTrainerClass\": [\n         \"opts\"\n      ],\n      \"create_autograd_function\": [\n         \"name\",\n         \"derivatives\",\n         \"args_with_derivatives\",\n         \"declaration\"\n      ],\n      \"create_bbox_transform_inputs\": [\n         \"roi_counts\",\n         \"num_classes\",\n         \"rotated\"\n      ],\n      \"create_caffe2_op_test_case\": [\n         \"op_bench\",\n         \"test_config\"\n      ],\n      \"create_db\": [\n         \"output_file\"\n      ],\n      \"create_derivative\": [\n         \"arguments\",\n         \"returns\",\n         \"name\",\n         \"formula\",\n         \"var_names\"\n      ],\n      \"create_derived\": [\n         \"backend_type_env\",\n         \"declarations\"\n      ],\n      \"create_differentiability_info\": [\n         \"signature\",\n         \"non_differentiable_arg_names\",\n         \"output_differentiability\",\n         \"autograd_fn\"\n      ],\n      \"create_generic\": [\n         \"top_env\",\n         \"declarations\"\n      ],\n      \"create_hierarchy\": [\n         \"tree_proto\"\n      ],\n      \"create_input\": [\n         \"call_args\",\n         \"requires_grad\",\n         \"non_contiguous\",\n         \"call_kwargs\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"create_int8_bias_tensor_fill\": [\n         \"tensor\",\n         \"out_blob_name\",\n         \"x_q_param\",\n         \"w_q_param\"\n      ],\n      \"create_int8_given_tensor_fill\": [\n         \"tensor\",\n         \"out_blob_name\",\n         \"preserve_sparsity\"\n      ],\n      \"create_layer\": [\n         \"layer_name\"\n      ],\n      \"create_methods_from_stubs\": [\n         \"concrete_type\",\n         \"stubs\"\n      ],\n      \"create_model\": [\n         \"args\",\n         \"queue\",\n         \"label_queue\",\n         \"input_shape\"\n      ],\n      \"create_node_with_nodes\": [\n         \"nodes\",\n         \"name\"\n      ],\n      \"create_node_with_words\": [\n         \"words\",\n         \"name\"\n      ],\n      \"create_predict_init_net\": [\n         \"ws\",\n         \"predictor_export_meta\"\n      ],\n      \"create_predict_net\": [\n         \"predictor_export_meta\"\n      ],\n      \"create_python_bindings\": [\n         \"python_functions\",\n         \"is_python_method\",\n         \"module\"\n      ],\n      \"create_pytorch_op_test_case\": [\n         \"op_bench\",\n         \"test_config\"\n      ],\n      \"create_queue\": [],\n      \"create_resnet50\": [\n         \"model\",\n         \"data\",\n         \"num_input_channels\",\n         \"num_labels\",\n         \"label\",\n         \"is_test\",\n         \"no_loss\",\n         \"no_bias\",\n         \"conv1_kernel\",\n         \"conv1_stride\",\n         \"final_avg_kernel\"\n      ],\n      \"create_resnet_32x32\": [\n         \"model\",\n         \"data\",\n         \"num_input_channels\",\n         \"num_groups\",\n         \"num_labels\",\n         \"is_test\"\n      ],\n      \"create_resnext\": [\n         \"model\",\n         \"data\",\n         \"num_input_channels\",\n         \"num_labels\",\n         \"num_layers\",\n         \"num_groups\",\n         \"num_width_per_group\",\n         \"label\",\n         \"is_test\",\n         \"no_loss\",\n         \"no_bias\",\n         \"conv1_kernel\",\n         \"conv1_stride\",\n         \"final_avg_kernel\",\n         \"log\",\n         \"bn_epsilon\",\n         \"bn_momentum\"\n      ],\n      \"create_script_fn\": [\n         \"self\",\n         \"method_name\",\n         \"func_type\",\n         \"output_process_fn\"\n      ],\n      \"create_script_module\": [\n         \"self\",\n         \"nn_module\",\n         \"constructor_args\"\n      ],\n      \"create_script_module_impl\": [\n         \"nn_module\",\n         \"concrete_type\",\n         \"stubs_fn\"\n      ],\n      \"create_shufflenet\": [\n         \"model\",\n         \"data\",\n         \"num_input_channels\",\n         \"num_labels\",\n         \"label\",\n         \"is_test\",\n         \"no_loss\"\n      ],\n      \"create_tcp_store\": [\n         \"addr\"\n      ],\n      \"create_tensor\": [],\n      \"create_test\": [\n         \"output_dir\",\n         \"width\",\n         \"height\",\n         \"default_bound\",\n         \"minsize\",\n         \"crop\",\n         \"means\",\n         \"stds\",\n         \"count\",\n         \"label_type\",\n         \"num_labels\",\n         \"output1\",\n         \"output2_size\"\n      ],\n      \"create_torchscript_tensor\": [],\n      \"create_traced_fn\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"create_worker\": [\n         \"queue\",\n         \"get_blob_data\"\n      ],\n      \"crf_update_predictions\": [\n         \"model\",\n         \"crf_with_loss\",\n         \"classes\"\n      ],\n      \"cross_entropy\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"size_average\",\n         \"ignore_index\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"cross_product\": [],\n      \"cross_product_configs\": [],\n      \"ctc_loss\": [\n         \"log_probs\",\n         \"targets\",\n         \"input_lengths\",\n         \"target_lengths\",\n         \"blank\",\n         \"reduction\",\n         \"zero_infinity\"\n      ],\n      \"ctcloss_reference\": [\n         \"log_probs\",\n         \"targets\",\n         \"input_lengths\",\n         \"target_lengths\",\n         \"blank\",\n         \"reduction\"\n      ],\n      \"cuda_multiply_two\": [\n         \"queue\",\n         \"ready\",\n         \"done\"\n      ],\n      \"cuda_only\": [\n         \"inner\"\n      ],\n      \"cuda_pointwise_context\": [\n         \"loop_levels\",\n         \"block_count\",\n         \"block_size\"\n      ],\n      \"cudart\": [],\n      \"cudnn_LSTM\": [\n         \"model\",\n         \"input_blob\",\n         \"initial_states\",\n         \"dim_in\",\n         \"dim_out\",\n         \"scope\",\n         \"recurrent_params\",\n         \"input_params\",\n         \"num_layers\",\n         \"return_params\"\n      ],\n      \"cumsum\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"dtype\"\n      ],\n      \"current_blas_handle\": [],\n      \"current_device\": [],\n      \"current_stream\": [\n         \"device\"\n      ],\n      \"custom_bwd\": [\n         \"bwd\"\n      ],\n      \"custom_from_mask\": [\n         \"module\",\n         \"name\",\n         \"mask\"\n      ],\n      \"custom_fwd\": [\n         \"fwd\"\n      ],\n      \"custom_scalars\": [\n         \"layout\"\n      ],\n      \"data_parallel\": [\n         \"module\",\n         \"inputs\",\n         \"device_ids\",\n         \"output_device\",\n         \"dim\",\n         \"module_kwargs\"\n      ],\n      \"data_type_for_dtype\": [\n         \"dtype\"\n      ],\n      \"db_input\": [\n         \"model\",\n         \"blobs_out\",\n         \"batch_size\",\n         \"db\",\n         \"db_type\"\n      ],\n      \"db_name\": [\n         \"epoch\",\n         \"node_name\",\n         \"db_prefix\",\n         \"path_prefix\"\n      ],\n      \"debug\": [\n         \"f\"\n      ],\n      \"debug_net\": [\n         \"net\"\n      ],\n      \"declare_outputs\": [],\n      \"decorate_test_fn\": [\n         \"test_fn\",\n         \"test_cuda\",\n         \"has_impl_parity\",\n         \"device\"\n      ],\n      \"dedupe_g_output\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"default_collate\": [\n         \"batch\"\n      ],\n      \"default_convert\": [\n         \"data\"\n      ],\n      \"default_eval_fn\": [\n         \"model\",\n         \"calib_data\"\n      ],\n      \"default_restore_location\": [\n         \"storage\",\n         \"location\"\n      ],\n      \"default_stream\": [\n         \"device\"\n      ],\n      \"delayed_add\": [\n         \"a\",\n         \"b\",\n         \"seconds\"\n      ],\n      \"deleteDirectory\": [\n         \"top_dir\"\n      ],\n      \"dense_vector_to_id_list_ref\": [],\n      \"depth_concat\": [\n         \"model\",\n         \"blobs_in\",\n         \"blob_out\"\n      ],\n      \"dequantize\": [\n         \"g\",\n         \"input\"\n      ],\n      \"dequeue\": [\n         \"net\",\n         \"queue\",\n         \"num_blobs\",\n         \"status\",\n         \"field_names\",\n         \"num_records\"\n      ],\n      \"dequeue_value\": [\n         \"queue\"\n      ],\n      \"describe_sizes\": [],\n      \"deserialize\": [\n         \"binary_data\",\n         \"tensor_table\"\n      ],\n      \"deserialize_protobuf_struct\": [\n         \"serialized_protobuf\",\n         \"struct_type\"\n      ],\n      \"destroy_process_group\": [\n         \"group\"\n      ],\n      \"det\": [\n         \"g\",\n         \"self\"\n      ],\n      \"detach\": [\n         \"g\",\n         \"input\"\n      ],\n      \"detach_variable\": [\n         \"inputs\"\n      ],\n      \"determine_target\": [\n         \"test\",\n         \"touched_files\",\n         \"options\"\n      ],\n      \"deterministic_io\": [\n         \"model\"\n      ],\n      \"device_\": [],\n      \"device_checker_device_options\": [],\n      \"device_count\": [],\n      \"device_equal\": [\n         \"src\",\n         \"dst\"\n      ],\n      \"device_guard\": [\n         \"option\",\n         \"dispatch_options\",\n         \"dispatch_tensor\"\n      ],\n      \"device_option_equal\": [\n         \"opt1\",\n         \"opt2\",\n         \"ignore_node_name\",\n         \"ignore_random_seed\"\n      ],\n      \"diagonal_bar\": [\n         \"a\"\n      ],\n      \"diagonal_div\": [\n         \"input\",\n         \"other\",\n         \"out\"\n      ],\n      \"diagonal_foo\": [\n         \"a\",\n         \"b\",\n         \"c\"\n      ],\n      \"diagonal_mm\": [\n         \"mat1\",\n         \"mat2\"\n      ],\n      \"diagonal_quux\": [\n         \"a\"\n      ],\n      \"dict_representer\": [\n         \"dumper\",\n         \"data\"\n      ],\n      \"dim\": [\n         \"g\",\n         \"self\"\n      ],\n      \"dims\": [\n         \"min_value\",\n         \"max_value\"\n      ],\n      \"dirac_\": [\n         \"tensor\",\n         \"groups\"\n      ],\n      \"disable_autodiff_subgraph_inlining\": [\n         \"enabled\"\n      ],\n      \"disable_fake_quant\": [\n         \"mod\"\n      ],\n      \"disable_global_flags\": [],\n      \"disable_observer\": [\n         \"mod\"\n      ],\n      \"disable_stderr\": [\n         \"worker_id\"\n      ],\n      \"disambiguate_grad_if_op_output\": [\n         \"grad_op\",\n         \"idx\",\n         \"new_grad_output\"\n      ],\n      \"discover_test_cases_recursively\": [\n         \"suite_or_case\"\n      ],\n      \"dispatch_scalar_type\": [\n         \"option\",\n         \"dispatch_options\",\n         \"dispatch_tensor\"\n      ],\n      \"dispatch_strategy\": [\n         \"declaration\"\n      ],\n      \"dist_init\": [\n         \"old_test_method\",\n         \"setup_rpc\",\n         \"clean_shutdown\",\n         \"faulty_messages\",\n         \"messages_to_delay\"\n      ],\n      \"distribute\": [\n         \"rois\",\n         \"_\",\n         \"outputs\"\n      ],\n      \"distribute_fpn_ref\": [],\n      \"div\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"div_float_future\": [],\n      \"div_float_nofuture\": [],\n      \"div_int_future\": [],\n      \"div_int_nofuture\": [],\n      \"divide_by_square_root\": [\n         \"data\",\n         \"scale\"\n      ],\n      \"dl_open_guard\": [],\n      \"doAutodiffCheck\": [\n         \"testname\"\n      ],\n      \"do_export\": [\n         \"model\",\n         \"inputs\"\n      ],\n      \"do_input_map\": [\n         \"fn\",\n         \"input\"\n      ],\n      \"do_test_dtypes\": [\n         \"self\",\n         \"dtypes\",\n         \"layout\",\n         \"device\"\n      ],\n      \"do_test_empty_full\": [\n         \"self\",\n         \"dtypes\",\n         \"layout\",\n         \"device\"\n      ],\n      \"dont_parse\": [\n         \"schema_line\"\n      ],\n      \"dont_wipe_extensions_build_folder\": [\n         \"func\"\n      ],\n      \"double_equivalent_of_long_tensor\": [\n         \"size\"\n      ],\n      \"double_flatten_states\": [\n         \"states\"\n      ],\n      \"double_matmul\": [],\n      \"download\": [\n         \"destination_path\",\n         \"resource\",\n         \"quiet\"\n      ],\n      \"downloadFromURLToFile\": [\n         \"url\",\n         \"filename\",\n         \"show_progress\"\n      ],\n      \"downloadModel\": [\n         \"model\",\n         \"args\"\n      ],\n      \"download_caffe2_model\": [\n         \"model_name\",\n         \"zoo_dir\",\n         \"use_cache\"\n      ],\n      \"download_clang_format\": [\n         \"path\"\n      ],\n      \"download_file\": [\n         \"url\",\n         \"binary\"\n      ],\n      \"download_models\": [],\n      \"download_onnx_model\": [\n         \"model_name\",\n         \"zoo_dir\",\n         \"use_cache\",\n         \"only_local\"\n      ],\n      \"download_url_to_file\": [\n         \"url\",\n         \"dst\",\n         \"hash_prefix\",\n         \"progress\"\n      ],\n      \"draw_boxes\": [\n         \"disp_image\",\n         \"boxes\",\n         \"labels\"\n      ],\n      \"dropout\": [\n         \"g\",\n         \"input\",\n         \"p\",\n         \"train\"\n      ],\n      \"dropout2d\": [\n         \"input\",\n         \"p\",\n         \"training\",\n         \"inplace\"\n      ],\n      \"dropout3d\": [\n         \"input\",\n         \"p\",\n         \"training\",\n         \"inplace\"\n      ],\n      \"dropoutlstm_creator\": [\n         \"script\"\n      ],\n      \"drosenbrock\": [\n         \"tensor\"\n      ],\n      \"dtype_default_type_hack\": [\n         \"name\"\n      ],\n      \"dtype_for_core_type\": [\n         \"core_type\"\n      ],\n      \"dummy_fetcher\": [\n         \"fetcher_id\",\n         \"batch_size\"\n      ],\n      \"dummy_fetcher_rnn\": [\n         \"fetcher_id\",\n         \"batch_size\"\n      ],\n      \"dump\": [\n         \"filename\"\n      ],\n      \"dump_tensorboard_summary\": [\n         \"graph_executor\",\n         \"logdir\"\n      ],\n      \"einsum\": [\n         \"g\",\n         \"equation\",\n         \"tensor_list\"\n      ],\n      \"elements_of_type\": [\n         \"dtype\",\n         \"filter_\"\n      ],\n      \"elementwise_linear\": [\n         \"model\"\n      ],\n      \"elu\": [\n         \"g\",\n         \"input\",\n         \"alpha\",\n         \"scale\",\n         \"input_scale\"\n      ],\n      \"embedding\": [\n         \"g\",\n         \"weight\",\n         \"indices\",\n         \"padding_idx\",\n         \"scale_grad_by_freq\",\n         \"sparse\"\n      ],\n      \"embedding_bag\": [\n         \"g\",\n         \"embedding_matrix\",\n         \"indices\",\n         \"offsets\",\n         \"scale_grad_by_freq\",\n         \"mode\",\n         \"sparse\",\n         \"per_sample_weights\",\n         \"include_last_offset\"\n      ],\n      \"emit\": [\n         \"optimizer_parameter_map\"\n      ],\n      \"emitFunctionHook\": [\n         \"self\",\n         \"func\"\n      ],\n      \"emitModuleHook\": [\n         \"self\",\n         \"module\"\n      ],\n      \"emit_assignments\": [\n         \"o\",\n         \"env\"\n      ],\n      \"emit_body\": [\n         \"declaration\"\n      ],\n      \"emit_dispatch_case\": [\n         \"i\",\n         \"dictionary\",\n         \"is_python_method\"\n      ],\n      \"emit_namedtuple_typedefs\": [\n         \"declarations\"\n      ],\n      \"emit_profiled_body\": [\n         \"declaration\"\n      ],\n      \"emit_single_dispatch\": [\n         \"declaration\",\n         \"is_python_method\",\n         \"output_gap\"\n      ],\n      \"empty\": [\n         \"g\",\n         \"sizes\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"empty_cache\": [],\n      \"empty_like\": [\n         \"g\",\n         \"input\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"enableScriptTest\": [],\n      \"enable_cpu_fuser\": [\n         \"fn\"\n      ],\n      \"enable_cpu_fuser_if\": [\n         \"cond\"\n      ],\n      \"enable_fake_quant\": [\n         \"mod\"\n      ],\n      \"enable_observer\": [\n         \"mod\"\n      ],\n      \"enable_profiling_mode\": [],\n      \"enable_profiling_mode_for_profiling_tests\": [],\n      \"enqueue\": [\n         \"net\",\n         \"queue\",\n         \"data_blobs\",\n         \"status\"\n      ],\n      \"enqueuer\": [\n         \"coordinator\",\n         \"batch_feeder\"\n      ],\n      \"ensure_unique_names\": [\n         \"autograd_functions\"\n      ],\n      \"entropy\": [\n         \"p\"\n      ],\n      \"epoch_limiter\": [\n         \"job\",\n         \"num_epochs\"\n      ],\n      \"eq\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"equal_schemas\": [\n         \"schema\",\n         \"original_schema\",\n         \"check_field_names\",\n         \"check_field_types\",\n         \"check_field_metas\"\n      ],\n      \"erf\": [\n         \"g\",\n         \"input\"\n      ],\n      \"error_worker_init_fn\": [\n         \"_\"\n      ],\n      \"escape_trailing_quote\": [\n         \"s\",\n         \"quote\"\n      ],\n      \"estimate_memory_usage\": [\n         \"protos\",\n         \"shapes\",\n         \"types\",\n         \"devicescope\"\n      ],\n      \"example_job\": [],\n      \"example_loop\": [],\n      \"example_task\": [],\n      \"exclude\": [\n         \"declaration\"\n      ],\n      \"exclude_tensor_method\": [\n         \"name\",\n         \"test_name\"\n      ],\n      \"exclude_tests\": [\n         \"exclude_list\",\n         \"selected_tests\",\n         \"exclude_message\"\n      ],\n      \"execWrapper\": [\n         \"code\",\n         \"glob\",\n         \"loc\"\n      ],\n      \"exec_\": [\n         \"_code_\",\n         \"_globs_\",\n         \"_locs_\"\n      ],\n      \"execution_step\": [\n         \"default_name\",\n         \"steps_or_nets\",\n         \"num_iter\",\n         \"report_net\",\n         \"report_interval\",\n         \"concurrent_substeps\",\n         \"should_stop_blob\",\n         \"only_once\",\n         \"num_concurrent_instances\",\n         \"create_workspace\",\n         \"run_every_ms\"\n      ],\n      \"execution_step_with_progress\": [\n         \"name\",\n         \"init_net\",\n         \"substeps\",\n         \"rows_read\"\n      ],\n      \"executor_test_model_names\": [],\n      \"executor_test_settings\": [\n         \"func\"\n      ],\n      \"exp\": [\n         \"g\",\n         \"self\"\n      ],\n      \"expand\": [\n         \"g\",\n         \"self\",\n         \"size\",\n         \"implicit\"\n      ],\n      \"expand_as\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"expand_single_ellipsis\": [\n         \"numel_pre_glob\",\n         \"numel_post_glob\",\n         \"names\"\n      ],\n      \"expectedFailureCUDA\": [\n         \"fn\"\n      ],\n      \"export\": [\n         \"fn\"\n      ],\n      \"exportTest\": [\n         \"self\",\n         \"model\",\n         \"inputs\",\n         \"rtol\",\n         \"atol\",\n         \"opset_versions\"\n      ],\n      \"export_opnames\": [\n         \"m\"\n      ],\n      \"export_to_pb\": [\n         \"model\",\n         \"inputs\"\n      ],\n      \"export_to_pbtxt\": [\n         \"model\",\n         \"inputs\"\n      ],\n      \"export_to_pretty_string\": [],\n      \"extract_arguments\": [\n         \"start\",\n         \"string\"\n      ],\n      \"eye_\": [\n         \"tensor\"\n      ],\n      \"factor_prefix\": [\n         \"vals\",\n         \"do_it\"\n      ],\n      \"fake_range\": [],\n      \"fc\": [\n         \"model\"\n      ],\n      \"fc_decomp\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"rank_approx\",\n         \"weight_init\",\n         \"bias_init\",\n         \"WeightInitializer\",\n         \"BiasInitializer\"\n      ],\n      \"fc_net_to_tt_net\": [\n         \"net\"\n      ],\n      \"fc_prune\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"weight_init\",\n         \"bias_init\",\n         \"mask_init\",\n         \"threshold\",\n         \"need_compress_rate\",\n         \"comp_lb\"\n      ],\n      \"fc_sparse\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"w_csr\",\n         \"iw\",\n         \"jw\",\n         \"bias\"\n      ],\n      \"fd_id\": [\n         \"fd\"\n      ],\n      \"feature_alpha_dropout\": [\n         \"input\",\n         \"p\",\n         \"training\",\n         \"inplace\"\n      ],\n      \"figure_to_image\": [\n         \"figures\",\n         \"close\"\n      ],\n      \"file_add_header\": [\n         \"filepath\",\n         \"header\"\n      ],\n      \"file_specific_replacement\": [\n         \"filepath\",\n         \"search_string\",\n         \"replace_string\",\n         \"strict\"\n      ],\n      \"filter_by_extension\": [\n         \"files\"\n      ],\n      \"filter_files\": [\n         \"files\",\n         \"file_patterns\"\n      ],\n      \"filter_requires_grad\": [\n         \"tensors\"\n      ],\n      \"filter_unique_options\": [\n         \"options\",\n         \"allow_kwarg\",\n         \"type_to_signature\",\n         \"remove_self\"\n      ],\n      \"final_output\": [\n         \"blob_or_record\"\n      ],\n      \"find_before\": [\n         \"ctx\",\n         \"pos\",\n         \"substr\",\n         \"offsets\"\n      ],\n      \"find_bracket_group\": [\n         \"input_string\",\n         \"start\"\n      ],\n      \"find_closure_group\": [\n         \"input_string\",\n         \"start\",\n         \"group\"\n      ],\n      \"find_dispatch_tensor\": [\n         \"formals\"\n      ],\n      \"find_factory_functions\": [\n         \"declarations\"\n      ],\n      \"find_factory_methods\": [\n         \"decls\"\n      ],\n      \"find_formal_by_type\": [\n         \"formal_name\",\n         \"formals\"\n      ],\n      \"find_free_port\": [],\n      \"find_multidispatch_formals\": [\n         \"formals\"\n      ],\n      \"find_parentheses_group\": [\n         \"input_string\",\n         \"start\"\n      ],\n      \"find_subclasses_recursively\": [\n         \"base_cls\",\n         \"sub_cls\"\n      ],\n      \"find_tensorlists\": [\n         \"formals\"\n      ],\n      \"find_tensors\": [\n         \"formals\"\n      ],\n      \"find_test_index\": [\n         \"test\",\n         \"selected_tests\",\n         \"find_last_index\"\n      ],\n      \"fit_str\": [\n         \"string\",\n         \"colwidth\"\n      ],\n      \"fix_BoxWithNMSLimit\": [\n         \"net\"\n      ],\n      \"fix_static_global_kernels\": [\n         \"in_txt\"\n      ],\n      \"flags\": [\n         \"enabled\"\n      ],\n      \"flags_frozen\": [],\n      \"flat_lstm_cell\": [\n         \"input\",\n         \"hx\",\n         \"cx\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"flatten\": [\n         \"g\",\n         \"input\",\n         \"start_dim\",\n         \"end_dim\"\n      ],\n      \"flatten_list\": [\n         \"lst\"\n      ],\n      \"flatten_states\": [\n         \"states\"\n      ],\n      \"flip\": [\n         \"g\",\n         \"input\",\n         \"dims\"\n      ],\n      \"float_double_default_dtype\": [\n         \"fn\"\n      ],\n      \"floats\": [],\n      \"floats_to_bytes\": [\n         \"floats\"\n      ],\n      \"floor\": [\n         \"g\",\n         \"input\"\n      ],\n      \"floor_divide\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"fmod\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"fn\": [\n         \"x\",\n         \"scale\",\n         \"shift\"\n      ],\n      \"fold\": [\n         \"input\",\n         \"output_size\",\n         \"kernel_size\",\n         \"dilation\",\n         \"padding\",\n         \"stride\"\n      ],\n      \"foo\": [\n         \"opt\"\n      ],\n      \"foo_add\": [],\n      \"force_unicode\": [\n         \"s\"\n      ],\n      \"fork_add\": [\n         \"t1\",\n         \"t2\",\n         \"dst\"\n      ],\n      \"fork_rng\": [\n         \"devices\",\n         \"enabled\",\n         \"_caller\",\n         \"_devices_kw\"\n      ],\n      \"formal_with_default\": [\n         \"f\"\n      ],\n      \"format_code\": [\n         \"self\",\n         \"code\",\n         \"pair\"\n      ],\n      \"format_device_option\": [\n         \"dev_opt\"\n      ],\n      \"format_formal\": [\n         \"f\"\n      ],\n      \"format_postrecord_trace\": [\n         \"declaration\"\n      ],\n      \"format_prerecord_trace\": [\n         \"declaration\"\n      ],\n      \"format_return_type\": [\n         \"returns\"\n      ],\n      \"format_time\": [\n         \"time_us\",\n         \"time_ms\",\n         \"time_s\"\n      ],\n      \"format_time_share\": [\n         \"time_us\",\n         \"total_time_us\"\n      ],\n      \"format_trace\": [\n         \"declaration\"\n      ],\n      \"format_trace_inputs\": [\n         \"declaration\"\n      ],\n      \"format_trace_op_name\": [\n         \"declaration\"\n      ],\n      \"format_value\": [\n         \"val\"\n      ],\n      \"format_yaml\": [\n         \"data\"\n      ],\n      \"forward\": [\n         \"self\",\n         \"x\"\n      ],\n      \"forward_declaration\": [\n         \"base\",\n         \"thnn_function\",\n         \"backend_types\",\n         \"inplace\"\n      ],\n      \"forward_decls\": [\n         \"name\",\n         \"declarations\",\n         \"is_python_method\",\n         \"module\"\n      ],\n      \"fractional_max_pool2d_test\": [\n         \"test_case\"\n      ],\n      \"fractional_max_pool2d_with_indices\": [\n         \"input\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"fractional_max_pool3d_test\": [\n         \"test_case\"\n      ],\n      \"fractional_max_pool3d_with_indices\": [\n         \"input\",\n         \"kernel_size\",\n         \"output_size\",\n         \"output_ratio\",\n         \"return_indices\",\n         \"_random_samples\"\n      ],\n      \"freeze_bn_stats\": [\n         \"mod\"\n      ],\n      \"freeze_rng_state\": [],\n      \"frobenius_norm\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"keepdim\"\n      ],\n      \"from_blob_list\": [\n         \"schema\",\n         \"values\",\n         \"throw_on_type_mismatch\"\n      ],\n      \"from_column_list\": [\n         \"col_names\",\n         \"col_types\",\n         \"col_blobs\",\n         \"col_metadata\"\n      ],\n      \"from_dtype\": [\n         \"dtype\",\n         \"_outer_shape\"\n      ],\n      \"from_ivalue\": [\n         \"arg\",\n         \"value\"\n      ],\n      \"fs_sharing\": [],\n      \"full\": [\n         \"g\",\n         \"sizes\",\n         \"value\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\"\n      ],\n      \"full_like\": [\n         \"g\",\n         \"input\",\n         \"fill_value\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"full_profile\": [\n         \"rnns\"\n      ],\n      \"fully_qualified_type\": [\n         \"argument_type\"\n      ],\n      \"fun_conclude_operator\": [\n         \"self\"\n      ],\n      \"fun_per_epoch_b4RunNet\": [\n         \"self\",\n         \"epoch\"\n      ],\n      \"fun_per_iter_b4RunNet\": [\n         \"self\",\n         \"epoch\",\n         \"epoch_iter\"\n      ],\n      \"function_info\": [\n         \"name\",\n         \"arguments\",\n         \"cimpls\",\n         \"buffers\",\n         \"backends\",\n         \"inplace\",\n         \"backend_types\"\n      ],\n      \"function_namespace\": [\n         \"declaration\"\n      ],\n      \"fuseConvBN\": [\n         \"net\"\n      ],\n      \"fuseNNPACKConvRelu\": [\n         \"net\"\n      ],\n      \"fuse_bn\": [\n         \"net\",\n         \"params\",\n         \"ignore_failure\"\n      ],\n      \"fuse_conv_bn\": [\n         \"conv\",\n         \"bn\"\n      ],\n      \"fuse_conv_bn_eval\": [\n         \"conv\",\n         \"bn\"\n      ],\n      \"fuse_conv_bn_relu\": [\n         \"conv\",\n         \"bn\",\n         \"relu\"\n      ],\n      \"fuse_conv_bn_weights\": [\n         \"conv_w\",\n         \"conv_b\",\n         \"bn_rm\",\n         \"bn_rv\",\n         \"bn_eps\",\n         \"bn_w\",\n         \"bn_b\"\n      ],\n      \"fuse_conv_relu\": [\n         \"net\"\n      ],\n      \"fuse_first_bn\": [\n         \"net\",\n         \"params\",\n         \"removed_tensors\",\n         \"begin_op_index\"\n      ],\n      \"fuse_first_mul_add\": [\n         \"net\",\n         \"params\",\n         \"removed_tensors\"\n      ],\n      \"fuse_first_relu\": [\n         \"net\",\n         \"begin_op_index\",\n         \"ignore_op_with_output\"\n      ],\n      \"fuse_first_scale\": [\n         \"net\",\n         \"params\",\n         \"removed_tensors\"\n      ],\n      \"fuse_known_modules\": [\n         \"mod_list\"\n      ],\n      \"fuse_modules\": [\n         \"model\",\n         \"modules_to_fuse\",\n         \"inplace\",\n         \"fuser_func\"\n      ],\n      \"fuse_mul_add\": [\n         \"net\",\n         \"params\"\n      ],\n      \"fuse_relu\": [\n         \"net\",\n         \"ignore_failure\",\n         \"ignore_op_with_output\"\n      ],\n      \"fuse_scale\": [\n         \"net\",\n         \"params\",\n         \"ignore_failure\"\n      ],\n      \"fused_rowwise_8bit_quantize_dequantize_reference\": [\n         \"data\"\n      ],\n      \"fused_rowwise_8bit_quantize_reference\": [\n         \"data\"\n      ],\n      \"fused_rowwise_nbit_quantize_dequantize_reference\": [\n         \"data\",\n         \"bit\"\n      ],\n      \"fused_rowwise_nbit_quantize_reference\": [\n         \"data\",\n         \"bit\"\n      ],\n      \"gather\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"sparse_grad\"\n      ],\n      \"gather_paths\": [\n         \"env_vars\"\n      ],\n      \"gather_ranges\": [\n         \"data\",\n         \"ranges\"\n      ],\n      \"gather_ranges_to_dense\": [\n         \"data\",\n         \"ranges\",\n         \"lengths\"\n      ],\n      \"gather_ranges_to_dense_with_key\": [\n         \"data\",\n         \"ranges\",\n         \"key\",\n         \"lengths\"\n      ],\n      \"gather_variable\": [\n         \"shape\",\n         \"index_dim\",\n         \"max_indices\",\n         \"duplicate\"\n      ],\n      \"ge\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"gelu\": [\n         \"g\",\n         \"self\"\n      ],\n      \"gen_autograd\": [\n         \"aten_path\",\n         \"out\",\n         \"autograd_dir\",\n         \"disable_autograd\"\n      ],\n      \"gen_autograd_functions\": [\n         \"out\",\n         \"autograd_functions\",\n         \"template_path\",\n         \"file_basename\"\n      ],\n      \"gen_autograd_functions_lib\": [\n         \"out\",\n         \"autograd_functions\",\n         \"template_path\"\n      ],\n      \"gen_autograd_functions_python\": [\n         \"out\",\n         \"autograd_functions\",\n         \"template_path\"\n      ],\n      \"gen_autograd_python\": [\n         \"aten_path\",\n         \"out\",\n         \"autograd_dir\"\n      ],\n      \"gen_batches\": [\n         \"source_corpus\",\n         \"target_corpus\",\n         \"source_vocab\",\n         \"target_vocab\",\n         \"batch_size\",\n         \"max_length\"\n      ],\n      \"gen_boxes\": [\n         \"count\",\n         \"center\"\n      ],\n      \"gen_class\": [\n         \"op\",\n         \"op_def\"\n      ],\n      \"gen_classes\": [\n         \"ops\",\n         \"op_list\"\n      ],\n      \"gen_coverage_sets\": [\n         \"source_dir\"\n      ],\n      \"gen_covered_ops\": [\n         \"source_dir\"\n      ],\n      \"gen_device_init\": [\n         \"option\",\n         \"backend_type_env\"\n      ],\n      \"gen_dispatch_key_init\": [\n         \"var_name\",\n         \"formals\"\n      ],\n      \"gen_do_gradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"gen_enum\": [\n         \"op_list\"\n      ],\n      \"gen_eval_constructor\": [\n         \"constructor\"\n      ],\n      \"gen_forward_pass_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_if_gradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"gen_init_net_from_blobs\": [\n         \"blobs\"\n      ],\n      \"gen_input\": [\n         \"testcase\"\n      ],\n      \"gen_input_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_long_tensor_constructor\": [\n         \"constructor\"\n      ],\n      \"gen_long_tensor_input\": [\n         \"input_size\"\n      ],\n      \"gen_module\": [\n         \"testcase\"\n      ],\n      \"gen_multiple_boxes\": [\n         \"centers\",\n         \"scores\",\n         \"count\",\n         \"num_classes\"\n      ],\n      \"gen_names\": [\n         \"op_list\"\n      ],\n      \"gen_nn_functional\": [\n         \"out\"\n      ],\n      \"gen_nn_modules\": [\n         \"out\"\n      ],\n      \"gen_nn_pyi\": [\n         \"out\"\n      ],\n      \"gen_param_update_builder_fun\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_per_op_registration_filename\": [\n         \"opname\"\n      ],\n      \"gen_py_nn_functions\": [\n         \"out\",\n         \"declarations\",\n         \"template_path\"\n      ],\n      \"gen_py_torch_functions\": [\n         \"out\",\n         \"declarations\",\n         \"template_path\"\n      ],\n      \"gen_py_variable_methods\": [\n         \"out\",\n         \"declarations\",\n         \"template_path\"\n      ],\n      \"gen_pyi\": [\n         \"declarations_path\",\n         \"out\"\n      ],\n      \"gen_rendezvous_ctx\": [\n         \"self\",\n         \"model\",\n         \"dataset\",\n         \"is_train\"\n      ],\n      \"gen_script_fn_and_args\": [\n         \"method_name\",\n         \"func_type\"\n      ],\n      \"gen_serialized_test_coverage\": [\n         \"source_dir\",\n         \"output_dir\"\n      ],\n      \"gen_sum_reduction_constructor\": [\n         \"constructor\"\n      ],\n      \"gen_test_resnet50\": [\n         \"_order\",\n         \"_cudnn_ws\"\n      ],\n      \"gen_transitive_closure\": [\n         \"dep_graph\",\n         \"root_ops\"\n      ],\n      \"gen_unboxing_wrappers\": [\n         \"declarations\",\n         \"out\",\n         \"template_path\",\n         \"disable_autograd\",\n         \"selected_op_list_path\",\n         \"selected_op_list\",\n         \"force_schema_registration\"\n      ],\n      \"gen_variable_factories\": [\n         \"out\",\n         \"declarations\",\n         \"template_path\",\n         \"disable_autograd\"\n      ],\n      \"gen_variable_type\": [\n         \"out\",\n         \"aten_declarations\",\n         \"template_path\"\n      ],\n      \"gen_variable_type_shard\": [\n         \"out\",\n         \"aten_declarations\",\n         \"template_path\",\n         \"suffix\",\n         \"header\"\n      ],\n      \"gen_vocab\": [\n         \"corpus\",\n         \"unk_threshold\"\n      ],\n      \"gen_while_gradient\": [\n         \"op\",\n         \"g_output\"\n      ],\n      \"generate_c2_gradient_test\": [\n         \"configs\",\n         \"c2_bench_op\"\n      ],\n      \"generate_c2_test\": [\n         \"configs\",\n         \"c2_bench_op\"\n      ],\n      \"generate_c2_test_from_ops\": [\n         \"ops_metadata\",\n         \"bench_op\",\n         \"tags\"\n      ],\n      \"generate_code\": [\n         \"ninja_global\",\n         \"declarations_path\",\n         \"nn_path\",\n         \"install_dir\",\n         \"subset\",\n         \"disable_autograd\",\n         \"selected_op_list_path\",\n         \"selected_op_list\",\n         \"force_schema_registration\"\n      ],\n      \"generate_configs\": [],\n      \"generate_conv_inputs\": [\n         \"stride\",\n         \"pad\",\n         \"kernel\",\n         \"dilation\",\n         \"size\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"groupwise_quantization\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\"\n      ],\n      \"generate_convnd_inputs\": [\n         \"strides\",\n         \"pads\",\n         \"kernels\",\n         \"dilations\",\n         \"sizes\",\n         \"group\",\n         \"input_channels_per_group\",\n         \"output_channels_per_group\",\n         \"batch_size\",\n         \"order\",\n         \"groupwise_quantization\",\n         \"preserve_activation_sparsity\",\n         \"preserve_weight_sparsity\"\n      ],\n      \"generate_data\": [\n         \"T\",\n         \"shape\",\n         \"num_labels\",\n         \"fixed_shape\"\n      ],\n      \"generate_data_for_repeat\": [],\n      \"generate_embedding_table\": [\n         \"vocab_size\",\n         \"embedding_size\"\n      ],\n      \"generate_error_msg\": [\n         \"name\",\n         \"cpp_value\",\n         \"python_value\"\n      ],\n      \"generate_eval_net\": [\n         \"model\",\n         \"include_tags\"\n      ],\n      \"generate_mobile_module_lints\": [\n         \"script_module\"\n      ],\n      \"generate_models\": [],\n      \"generate_not_implemented_tests\": [\n         \"cls\"\n      ],\n      \"generate_outputs\": [],\n      \"generate_per_op_registration\": [\n         \"per_op_registrations\"\n      ],\n      \"generate_predict_net\": [\n         \"model\",\n         \"include_tags\"\n      ],\n      \"generate_pt_gradient_test\": [\n         \"configs\",\n         \"pt_bench_op\"\n      ],\n      \"generate_pt_test\": [\n         \"configs\",\n         \"pt_bench_op\"\n      ],\n      \"generate_pt_tests_from_op_list\": [\n         \"ops_list\",\n         \"configs\",\n         \"pt_bench_op\"\n      ],\n      \"generate_rois\": [\n         \"roi_counts\",\n         \"im_dims\"\n      ],\n      \"generate_rois_rotated\": [\n         \"roi_counts\",\n         \"im_dims\"\n      ],\n      \"generate_schema_registration\": [\n         \"schema_registrations\"\n      ],\n      \"generate_storage_type_and_tensor\": [\n         \"backend\",\n         \"density\",\n         \"declarations\",\n         \"per_op_registrations\",\n         \"schema_registrations\"\n      ],\n      \"generate_tensor_like_override_tests\": [\n         \"cls\"\n      ],\n      \"generate_tensor_like_torch_implementations\": [],\n      \"generate_tensor_op_tests\": [\n         \"cls\"\n      ],\n      \"generate_test_cpp_sources\": [\n         \"test_params\",\n         \"template\"\n      ],\n      \"generate_test_function\": [\n         \"cls\",\n         \"op_str\",\n         \"subtest_str\",\n         \"tensor_ctor\",\n         \"arg_ctor\",\n         \"half_precision\",\n         \"bfloat16_precision\",\n         \"float_precision\",\n         \"dtype_list\",\n         \"dtype_cpu_list\",\n         \"decorators\"\n      ],\n      \"generate_test_input_data\": [\n         \"onnx_model\",\n         \"scale\"\n      ],\n      \"generate_test_output_data\": [\n         \"caffe2_init_net\",\n         \"caffe2_predict_net\",\n         \"inputs\"\n      ],\n      \"generate_torch_op_tests\": [\n         \"cls\"\n      ],\n      \"generate_torch_test_functions\": [\n         \"cls\",\n         \"testmeta\",\n         \"inplace\"\n      ],\n      \"generate_training_nets\": [\n         \"model\",\n         \"include_tags\"\n      ],\n      \"generate_training_nets_forward_only\": [\n         \"model\",\n         \"include_tags\"\n      ],\n      \"generate_type_hints\": [\n         \"fname\",\n         \"decls\",\n         \"namedtuples\",\n         \"is_tensor\"\n      ],\n      \"generic\": [\n         \"IndexType\",\n         \"InType\",\n         \"OutType\",\n         \"use_weights\",\n         \"isa\",\n         \"fused\",\n         \"use_offsets\"\n      ],\n      \"getClassFromModule\": [\n         \"moduleName\",\n         \"className\"\n      ],\n      \"getCodeLink\": [\n         \"formatter\",\n         \"schema\"\n      ],\n      \"getExportImportCopy\": [\n         \"self\",\n         \"m\",\n         \"also_test_file\",\n         \"map_location\"\n      ],\n      \"getExportImportCopyWithPacking\": [\n         \"self\",\n         \"m\",\n         \"also_test_file\",\n         \"map_location\"\n      ],\n      \"getGradientForOp\": [\n         \"op\"\n      ],\n      \"getModule\": [\n         \"moduleName\"\n      ],\n      \"getNetArgument\": [\n         \"op\",\n         \"net_name\"\n      ],\n      \"getNorm\": [\n         \"p\"\n      ],\n      \"getURLFromName\": [\n         \"name\",\n         \"filename\"\n      ],\n      \"get_a_var\": [\n         \"obj\"\n      ],\n      \"get_all_complex_dtypes\": [],\n      \"get_all_device_types\": [],\n      \"get_all_dtypes\": [],\n      \"get_all_examples\": [],\n      \"get_all_files\": [\n         \"paths\"\n      ],\n      \"get_all_math_dtypes\": [\n         \"device\"\n      ],\n      \"get_all_nn_module_tests\": [],\n      \"get_all_sharing_strategies\": [],\n      \"get_analytical_jacobian\": [\n         \"input\",\n         \"output\",\n         \"nondet_tol\"\n      ],\n      \"get_and_check_clang_format\": [\n         \"verbose\"\n      ],\n      \"get_approximate_basis\": [\n         \"A\",\n         \"q\",\n         \"niter\",\n         \"M\"\n      ],\n      \"get_avg_length\": [\n         \"record\"\n      ],\n      \"get_backend\": [\n         \"group\"\n      ],\n      \"get_call\": [\n         \"method_name\",\n         \"func_type\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"get_categorical_limit\": [\n         \"record\"\n      ],\n      \"get_changed_files\": [\n         \"revision\",\n         \"paths\"\n      ],\n      \"get_changed_lines\": [\n         \"revision\",\n         \"filename\"\n      ],\n      \"get_ckpt_filename\": [\n         \"node_name\",\n         \"epoch\"\n      ],\n      \"get_class_name_lineno\": [\n         \"method\"\n      ],\n      \"get_closure\": [\n         \"fn\"\n      ],\n      \"get_cmake_cache_variables_from_file\": [\n         \"cmake_cache_file\"\n      ],\n      \"get_cmake_version\": [\n         \"run_lambda\"\n      ],\n      \"get_comp_name\": [\n         \"string\",\n         \"name\"\n      ],\n      \"get_concatenated_feature_to_index\": [\n         \"blobs_to_concat\"\n      ],\n      \"get_conda_packages\": [\n         \"run_lambda\"\n      ],\n      \"get_constant\": [\n         \"x\"\n      ],\n      \"get_cpp_decl_type\": [\n         \"typename\",\n         \"ensure_temp_safe\"\n      ],\n      \"get_cpp_formal\": [\n         \"arg\",\n         \"ensure_temp_safe\"\n      ],\n      \"get_cpu_type\": [\n         \"type_name\"\n      ],\n      \"get_cudnn_mode\": [\n         \"mode\"\n      ],\n      \"get_cudnn_version\": [\n         \"run_lambda\"\n      ],\n      \"get_current_scope\": [],\n      \"get_custom_class_library_path\": [],\n      \"get_custom_op_library_path\": [],\n      \"get_cycles_per_ms\": [],\n      \"get_default_args\": [\n         \"fn\"\n      ],\n      \"get_default_build_root\": [],\n      \"get_default_qat_qconfig\": [\n         \"backend\"\n      ],\n      \"get_default_qconfig\": [\n         \"backend\"\n      ],\n      \"get_default_test_flags\": [],\n      \"get_dep_modules\": [\n         \"test\"\n      ],\n      \"get_device_capability\": [\n         \"device\"\n      ],\n      \"get_device_name\": [\n         \"device\"\n      ],\n      \"get_device_option\": [\n         \"device\"\n      ],\n      \"get_device_properties\": [\n         \"device\"\n      ],\n      \"get_device_states\": [],\n      \"get_dispatch_callee\": [\n         \"declaration\"\n      ],\n      \"get_embedding_info\": [\n         \"metadata\",\n         \"label_img\",\n         \"filesys\",\n         \"subdir\",\n         \"global_step\",\n         \"tag\"\n      ],\n      \"get_engine\": [],\n      \"get_enum\": [\n         \"reduction\"\n      ],\n      \"get_env_info\": [],\n      \"get_examples_from_docstring\": [\n         \"docstr\"\n      ],\n      \"get_executable_command\": [\n         \"options\"\n      ],\n      \"get_execution_plan\": [\n         \"graph_executor_state\"\n      ],\n      \"get_expected_file\": [\n         \"function_ptr\"\n      ],\n      \"get_external_blob_names\": [\n         \"net\",\n         \"lexical_scope\"\n      ],\n      \"get_fc_predictor_version\": [\n         \"fc_version\"\n      ],\n      \"get_file_path\": [],\n      \"get_file_path_2\": [],\n      \"get_file_patterns\": [\n         \"globs\",\n         \"regexes\"\n      ],\n      \"get_floating_dtype\": [\n         \"A\"\n      ],\n      \"get_fn\": [\n         \"file_name\",\n         \"script_path\"\n      ],\n      \"get_forward\": [\n         \"c\"\n      ],\n      \"get_forward_graph\": [\n         \"c\"\n      ],\n      \"get_frame_vars\": [\n         \"self\",\n         \"frames_up\"\n      ],\n      \"get_function_arglist\": [\n         \"func\"\n      ],\n      \"get_function_event\": [\n         \"function_events\",\n         \"partial_event_name\"\n      ],\n      \"get_function_from_type\": [\n         \"cls\",\n         \"name\"\n      ],\n      \"get_gcc_version\": [\n         \"run_lambda\"\n      ],\n      \"get_gpu_info\": [\n         \"run_lambda\"\n      ],\n      \"get_gpu_type\": [\n         \"type_name\"\n      ],\n      \"get_grad_executor\": [\n         \"plan_state\",\n         \"diff_graph_idx\",\n         \"skip_check\"\n      ],\n      \"get_hip_file_path\": [\n         \"filepath\"\n      ],\n      \"get_ignored_functions\": [],\n      \"get_input_dataset\": [\n         \"opts\"\n      ],\n      \"get_input_tensors\": [],\n      \"get_jit_class_def\": [\n         \"cls\",\n         \"self_name\"\n      ],\n      \"get_jit_def\": [\n         \"fn\",\n         \"self_name\"\n      ],\n      \"get_key\": [\n         \"record\"\n      ],\n      \"get_layer_class\": [\n         \"name\"\n      ],\n      \"get_layer_scope\": [\n         \"scope\",\n         \"layer_type\",\n         \"i\"\n      ],\n      \"get_logger_dict\": [\n         \"mod\",\n         \"Logger\",\n         \"prefix\"\n      ],\n      \"get_lr_injection\": [],\n      \"get_lsb_version\": [\n         \"run_lambda\"\n      ],\n      \"get_lstm_inputs\": [\n         \"device\",\n         \"training\",\n         \"seq_length\"\n      ],\n      \"get_mac_version\": [\n         \"run_lambda\"\n      ],\n      \"get_matching_activations\": [\n         \"float_module\",\n         \"q_module\",\n         \"Logger\"\n      ],\n      \"get_memory_usage\": [\n         \"assignments\"\n      ],\n      \"get_meta_net_def\": [\n         \"predictor_export_meta\",\n         \"ws\",\n         \"db_type\"\n      ],\n      \"get_milstm_inputs\": [\n         \"device\",\n         \"training\"\n      ],\n      \"get_model_input_fun\": [\n         \"self\"\n      ],\n      \"get_module_method\": [\n         \"m\",\n         \"module\",\n         \"method\"\n      ],\n      \"get_n_rand_nums\": [\n         \"min_val\",\n         \"max_val\",\n         \"n\"\n      ],\n      \"get_net_name\": [\n         \"netlike\"\n      ],\n      \"get_nn_functional_compiled_fn_and_inputs\": [\n         \"name\",\n         \"self_size\",\n         \"args\",\n         \"variant_name\"\n      ],\n      \"get_nn_mod_test_name\": [],\n      \"get_nn_module_class_from_kwargs\": [],\n      \"get_nn_module_name_from_kwargs\": [],\n      \"get_nn_runners\": [],\n      \"get_num_inputs\": [\n         \"o\"\n      ],\n      \"get_numberized_sentence\": [\n         \"sentence\",\n         \"vocab\"\n      ],\n      \"get_numerical_jacobian\": [\n         \"fn\",\n         \"input\",\n         \"target\",\n         \"eps\"\n      ],\n      \"get_nvidia_driver_version\": [\n         \"run_lambda\"\n      ],\n      \"get_nvidia_smi\": [],\n      \"get_observer_dict\": [\n         \"mod\",\n         \"target_dict\",\n         \"prefix\"\n      ],\n      \"get_op\": [\n         \"input_len\",\n         \"output_len\",\n         \"args\"\n      ],\n      \"get_op_args\": [\n         \"declaration\",\n         \"argmap\"\n      ],\n      \"get_op_ids_in_path\": [\n         \"ssa\",\n         \"blob_versions\",\n         \"inputs\",\n         \"outputs\"\n      ],\n      \"get_op_supported_version\": [\n         \"opname\",\n         \"domain\",\n         \"version\"\n      ],\n      \"get_operator_range\": [\n         \"chars_range\"\n      ],\n      \"get_ops_in_version\": [\n         \"version\"\n      ],\n      \"get_os\": [\n         \"run_lambda\"\n      ],\n      \"get_output\": [\n         \"o\",\n         \"i\"\n      ],\n      \"get_output_producers\": [\n         \"ssa\"\n      ],\n      \"get_overload_annotations\": [\n         \"mod\"\n      ],\n      \"get_overload_name_mapping\": [\n         \"overload_info\"\n      ],\n      \"get_overridable_functions\": [],\n      \"get_overwrite_module_params_on_conversion\": [],\n      \"get_param_device\": [\n         \"param_name\",\n         \"grad\",\n         \"param_to_device\",\n         \"default_device\"\n      ],\n      \"get_param_names\": [\n         \"fn\",\n         \"n_args\"\n      ],\n      \"get_pickle_values\": [\n         \"self\"\n      ],\n      \"get_pip_packages\": [\n         \"run_lambda\"\n      ],\n      \"get_platform\": [],\n      \"get_pool_ceil_padding\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\"\n      ],\n      \"get_predictor_exporter_helper\": [\n         \"submodelNetName\"\n      ],\n      \"get_pretty_env_info\": [],\n      \"get_py_nn_functions\": [\n         \"declarations\"\n      ],\n      \"get_py_torch_functions\": [\n         \"declarations\"\n      ],\n      \"get_py_variable_methods\": [\n         \"declarations\"\n      ],\n      \"get_pycname\": [\n         \"name\"\n      ],\n      \"get_python_argc\": [\n         \"decl\"\n      ],\n      \"get_python_args\": [\n         \"decl\"\n      ],\n      \"get_python_output_index\": [\n         \"decl\"\n      ],\n      \"get_python_signature\": [\n         \"declaration\",\n         \"is_python_method\",\n         \"skip_outputs\"\n      ],\n      \"get_rank\": [\n         \"group\"\n      ],\n      \"get_reduction\": [\n         \"m\"\n      ],\n      \"get_registered_op\": [\n         \"opname\",\n         \"domain\",\n         \"version\"\n      ],\n      \"get_return\": [\n         \"args\"\n      ],\n      \"get_rng_state\": [],\n      \"get_rng_state_all\": [],\n      \"get_rref_debug_info\": [],\n      \"get_rref_list\": [\n         \"values\"\n      ],\n      \"get_running_cuda_version\": [\n         \"run_lambda\"\n      ],\n      \"get_schema_formal\": [\n         \"arg\",\n         \"is_python_method\"\n      ],\n      \"get_script_args\": [\n         \"args\"\n      ],\n      \"get_scripted_qconfig_dict\": [\n         \"qconfig_dict\"\n      ],\n      \"get_selected_tests\": [\n         \"options\"\n      ],\n      \"get_setup_nets\": [\n         \"key\",\n         \"steps_or_nets\",\n         \"target\"\n      ],\n      \"get_sharing_strategy\": [],\n      \"get_shutdown_error_regex\": [\n         \"rpc_backend\"\n      ],\n      \"get_signature\": [\n         \"fn\",\n         \"rcb\",\n         \"loc\",\n         \"is_method\"\n      ],\n      \"get_simple_return_type\": [\n         \"declaration\"\n      ],\n      \"get_simple_type\": [\n         \"arg\"\n      ],\n      \"get_source_lines_and_file\": [\n         \"obj\",\n         \"error_msg\"\n      ],\n      \"get_sparse_lookup_predictor_version\": [\n         \"version\",\n         \"blob_size\",\n         \"min_blob_size_4bits\",\n         \"embedding_dim\",\n         \"sparse_feature_name\"\n      ],\n      \"get_sparse_lookup_trainer_version\": [\n         \"version\"\n      ],\n      \"get_ssa\": [\n         \"net\",\n         \"blob_versions\"\n      ],\n      \"get_sum_list_fn\": [\n         \"self\"\n      ],\n      \"get_summarized_data\": [\n         \"self\"\n      ],\n      \"get_supported_device_types\": [],\n      \"get_tensor_options\": [\n         \"declaration\"\n      ],\n      \"get_test_name\": [\n         \"testcase\"\n      ],\n      \"get_test_names\": [\n         \"test_cases\"\n      ],\n      \"get_testing_overrides\": [],\n      \"get_thnn_args\": [\n         \"thnn_function\",\n         \"params\",\n         \"inplace\"\n      ],\n      \"get_timeout\": [\n         \"test_id\"\n      ],\n      \"get_timeout_error_regex\": [\n         \"rpc_backend_name\"\n      ],\n      \"get_torchscript_modifier\": [\n         \"fn\"\n      ],\n      \"get_trainer_version_based_on_optim\": [\n         \"optim_def\"\n      ],\n      \"get_type_line\": [\n         \"source\"\n      ],\n      \"get_undefined_blobs\": [\n         \"ssa\"\n      ],\n      \"get_updated_ranges\": [\n         \"ranges\",\n         \"max_live\"\n      ],\n      \"get_weight\": [\n         \"m\"\n      ],\n      \"get_whitelisted_files\": [],\n      \"get_windows_version\": [\n         \"run_lambda\"\n      ],\n      \"get_worker_ids\": [\n         \"num_workers\"\n      ],\n      \"get_worker_info\": [],\n      \"get_world_size\": [\n         \"group\"\n      ],\n      \"get_writable_path\": [\n         \"path\"\n      ],\n      \"given\": [],\n      \"global_unstructured\": [\n         \"parameters\",\n         \"pruning_method\"\n      ],\n      \"glu\": [\n         \"g\",\n         \"input\",\n         \"dim\"\n      ],\n      \"gpu_device\": [\n         \"i\"\n      ],\n      \"gpus_for_rank\": [\n         \"world_size\"\n      ],\n      \"grad\": [\n         \"outputs\",\n         \"inputs\",\n         \"grad_outputs\",\n         \"retain_graph\",\n         \"create_graph\",\n         \"only_inputs\",\n         \"allow_unused\"\n      ],\n      \"gradcheck\": [\n         \"func\",\n         \"inputs\",\n         \"eps\",\n         \"atol\",\n         \"rtol\",\n         \"raise_exception\",\n         \"check_sparse_nnz\",\n         \"nondet_tol\"\n      ],\n      \"gradgradcheck\": [\n         \"func\",\n         \"inputs\",\n         \"grad_outputs\",\n         \"eps\",\n         \"atol\",\n         \"rtol\",\n         \"gen_non_contig_grad_outputs\",\n         \"raise_exception\",\n         \"nondet_tol\"\n      ],\n      \"gradgradcheck_method_precision_override\": [\n         \"test_name\"\n      ],\n      \"gradient_checker_device_option\": [],\n      \"graph\": [\n         \"model\",\n         \"args\",\n         \"verbose\"\n      ],\n      \"graph_def_to_event\": [\n         \"step\",\n         \"graph_def\"\n      ],\n      \"graph_desc\": [\n         \"fn\"\n      ],\n      \"grid_sample\": [\n         \"input\",\n         \"grid\",\n         \"mode\",\n         \"padding_mode\",\n         \"align_corners\"\n      ],\n      \"group_conv\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"group\"\n      ],\n      \"group_conv_deprecated\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"dim_out\",\n         \"kernel\",\n         \"weight_init\",\n         \"bias_init\",\n         \"group\",\n         \"use_cudnn\",\n         \"order\",\n         \"cudnn_exhaustive_search\",\n         \"ws_nbytes_limit\"\n      ],\n      \"group_declarations_by_op_name\": [\n         \"declarations\"\n      ],\n      \"group_norm\": [\n         \"g\",\n         \"input\",\n         \"num_groups\",\n         \"weight\",\n         \"bias\",\n         \"eps\",\n         \"cudnn_enabled\"\n      ],\n      \"group_overloads\": [\n         \"declarations\",\n         \"is_python_method\"\n      ],\n      \"gru_cell\": [\n         \"input\",\n         \"hidden\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"gru_input\": [],\n      \"gru_reference\": [\n         \"input\",\n         \"hidden_input\",\n         \"reset_gate_w\",\n         \"reset_gate_b\",\n         \"update_gate_w\",\n         \"update_gate_b\",\n         \"output_gate_w\",\n         \"output_gate_b\",\n         \"seq_lengths\",\n         \"drop_states\",\n         \"linear_before_reset\"\n      ],\n      \"gru_unit\": [],\n      \"gru_unit_op_input\": [],\n      \"gt\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"gt_impl\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"gumbel_softmax\": [\n         \"logits\",\n         \"tau\",\n         \"hard\",\n         \"eps\",\n         \"dim\"\n      ],\n      \"half_floats_to_bytes\": [\n         \"floats\"\n      ],\n      \"handle_outputs_taken_as_arguments\": [\n         \"options\"\n      ],\n      \"handle_python_binding_args\": [\n         \"declaration\",\n         \"output_gap\"\n      ],\n      \"handle_torch_function\": [\n         \"public_api\",\n         \"relevant_args\"\n      ],\n      \"hardshrink\": [\n         \"input\",\n         \"lambd\"\n      ],\n      \"hardsigmoid\": [\n         \"input\"\n      ],\n      \"hardswish\": [\n         \"input\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"hardtanh\": [\n         \"g\",\n         \"self\",\n         \"min_val\",\n         \"max_val\"\n      ],\n      \"has_avx2\": [],\n      \"has_blob\": [\n         \"proto\",\n         \"needle\"\n      ],\n      \"has_outputs\": [\n         \"declaration\"\n      ],\n      \"has_tensor_options\": [\n         \"declaration\"\n      ],\n      \"has_test\": [\n         \"unit_test_class\",\n         \"test_name\"\n      ],\n      \"has_torch_function\": [\n         \"relevant_args\"\n      ],\n      \"hash_build_arguments\": [\n         \"hash_value\",\n         \"build_arguments\"\n      ],\n      \"hash_source_files\": [\n         \"hash_value\",\n         \"source_files\"\n      ],\n      \"heatmap_FAIR_keypoint_ref\": [\n         \"maps\",\n         \"rois\"\n      ],\n      \"heatmap_approx_keypoint_ref\": [\n         \"maps\",\n         \"rois\"\n      ],\n      \"heatmaps_to_keypoints\": [\n         \"maps\",\n         \"rois\"\n      ],\n      \"heavy_rpc\": [\n         \"tensor\"\n      ],\n      \"heavy_rpc_torchscript\": [\n         \"tensor\"\n      ],\n      \"help\": [\n         \"github\",\n         \"model\",\n         \"force_reload\"\n      ],\n      \"hessian\": [\n         \"func\",\n         \"inputs\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"hinge_embedding_loss\": [\n         \"input\",\n         \"target\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"hingeembeddingloss_margin_no_reduce_test\": [],\n      \"hingeembeddingloss_no_reduce_test\": [],\n      \"hingeembeddingloss_reference\": [\n         \"input\",\n         \"target\",\n         \"margin\",\n         \"reduction\"\n      ],\n      \"hip_header_magic\": [\n         \"input_string\"\n      ],\n      \"hipify\": [\n         \"project_directory\",\n         \"show_detailed\",\n         \"extensions\",\n         \"output_directory\",\n         \"includes\",\n         \"extra_files\",\n         \"out_of_place_only\",\n         \"ignores\",\n         \"show_progress\",\n         \"hip_clang_launch\",\n         \"is_pytorch_extension\",\n         \"clean_ctx\"\n      ],\n      \"histogram\": [\n         \"name\",\n         \"values\",\n         \"bins\",\n         \"max_bins\"\n      ],\n      \"histogram_raw\": [\n         \"name\",\n         \"min\",\n         \"max\",\n         \"num\",\n         \"sum\",\n         \"sum_squares\",\n         \"bucket_limits\",\n         \"bucket_counts\"\n      ],\n      \"hparams\": [\n         \"hparam_dict\",\n         \"metric_dict\"\n      ],\n      \"hvp\": [\n         \"func\",\n         \"inputs\",\n         \"v\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"id_list_batch\": [\n         \"draw\"\n      ],\n      \"ident\": [\n         \"x\"\n      ],\n      \"identity\": [\n         \"module\",\n         \"name\"\n      ],\n      \"idx_tensor\": [\n         \"size\",\n         \"max_val\"\n      ],\n      \"ignore\": [\n         \"drop\"\n      ],\n      \"im2col\": [\n         \"g\",\n         \"input\",\n         \"kernel_size\",\n         \"dilation\",\n         \"padding\",\n         \"stride\"\n      ],\n      \"image\": [\n         \"tag\",\n         \"tensor\",\n         \"rescale\",\n         \"dataformats\"\n      ],\n      \"image_boxes\": [\n         \"tag\",\n         \"tensor_image\",\n         \"tensor_boxes\",\n         \"rescale\",\n         \"dataformats\",\n         \"labels\"\n      ],\n      \"image_input\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"order\",\n         \"use_gpu_transform\"\n      ],\n      \"imagenet_cnn_creator\": [\n         \"arch\",\n         \"jit\"\n      ],\n      \"implements_diagonal\": [\n         \"torch_function\"\n      ],\n      \"implements_sub\": [\n         \"torch_function\"\n      ],\n      \"implements_sub_diagonal\": [\n         \"torch_function\"\n      ],\n      \"implements_tensor_like\": [\n         \"torch_function\"\n      ],\n      \"import_module\": [\n         \"name\",\n         \"path\"\n      ],\n      \"import_recursive\": [\n         \"package\"\n      ],\n      \"include_paths\": [\n         \"cuda\"\n      ],\n      \"indent\": [\n         \"s\"\n      ],\n      \"index\": [\n         \"g\",\n         \"self\",\n         \"index\"\n      ],\n      \"index_copy\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"source\"\n      ],\n      \"index_fill\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"value\"\n      ],\n      \"index_perm_variable\": [\n         \"shape\",\n         \"max_indices\"\n      ],\n      \"index_put\": [\n         \"g\",\n         \"self\",\n         \"indices_list_value\",\n         \"values\",\n         \"accumulate\"\n      ],\n      \"index_select\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\"\n      ],\n      \"index_variable\": [\n         \"shape\",\n         \"max_indices\"\n      ],\n      \"infer_concrete_type_builder\": [\n         \"nn_module\"\n      ],\n      \"infer_methods_to_compile\": [\n         \"nn_module\"\n      ],\n      \"init\": [],\n      \"initDefaultModuleMap\": [],\n      \"initOpts\": [\n         \"opts\"\n      ],\n      \"init_backend\": [\n         \"backend\"\n      ],\n      \"init_data_input_workers\": [\n         \"net\",\n         \"input_blob_names\",\n         \"fetch_fun\",\n         \"batch_size\",\n         \"num_worker_threads\",\n         \"input_source_name\",\n         \"max_buffered_batches\",\n         \"init_fun\",\n         \"external_loggers\",\n         \"dont_rebatch\",\n         \"batch_columns\",\n         \"timeout\"\n      ],\n      \"init_dropout_state\": [\n         \"dropout\",\n         \"train\",\n         \"dropout_seed\",\n         \"dropout_state\"\n      ],\n      \"init_fn\": [\n         \"worker_id\"\n      ],\n      \"init_model\": [\n         \"self\"\n      ],\n      \"init_process_group\": [\n         \"backend\",\n         \"init_method\",\n         \"timeout\",\n         \"world_size\",\n         \"rank\",\n         \"store\",\n         \"group_name\"\n      ],\n      \"init_rank\": [\n         \"num_ranks\",\n         \"uid\",\n         \"rank\"\n      ],\n      \"init_reductions\": [],\n      \"init_rpc\": [\n         \"name\",\n         \"backend\",\n         \"rank\",\n         \"world_size\",\n         \"rpc_backend_options\"\n      ],\n      \"init_stacked_lstm\": [\n         \"num_layers\",\n         \"layer\",\n         \"first_layer_args\",\n         \"other_layer_args\"\n      ],\n      \"init_tt_cores\": [\n         \"inp_sizes\",\n         \"out_sizes\",\n         \"tt_ranks\",\n         \"seed\"\n      ],\n      \"init_workers\": [\n         \"worker_fun\",\n         \"num_worker_threads\",\n         \"worker_name\",\n         \"init_fun\",\n         \"external_loggers\",\n         \"shutdown_fun\"\n      ],\n      \"initial_seed\": [],\n      \"initialize_cuda_context_rng\": [],\n      \"initialize_master_xpu_model_params\": [\n         \"model\",\n         \"weights_file\",\n         \"opts\",\n         \"reset_epoch\"\n      ],\n      \"initialize_params_from_file\": [\n         \"model\",\n         \"weights_file\",\n         \"num_xpus\",\n         \"opts\",\n         \"broadcast_computed_param\",\n         \"reset_epoch\"\n      ],\n      \"initialize_pg\": [\n         \"init_method\",\n         \"rank\",\n         \"world_size\"\n      ],\n      \"inline_everything_mode\": [\n         \"should_inline\"\n      ],\n      \"input_size2d_\": [],\n      \"input_size2dsq_\": [],\n      \"input_size3d_\": [],\n      \"input_size3dsq_\": [],\n      \"insert\": [\n         \"g\",\n         \"self\",\n         \"pos\",\n         \"tensor\"\n      ],\n      \"instance_norm\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"running_mean\",\n         \"running_var\",\n         \"use_input_stats\",\n         \"momentum\",\n         \"eps\",\n         \"cudnn_enabled\"\n      ],\n      \"instantiate_device_type_tests\": [\n         \"generic_test_class\",\n         \"scope\",\n         \"except_for\",\n         \"only_for\"\n      ],\n      \"int8_to_bytes\": [\n         \"int8s\"\n      ],\n      \"integer_parameter_serialization\": [\n         \"iparam\"\n      ],\n      \"interface\": [\n         \"obj\"\n      ],\n      \"interface_script\": [\n         \"mod_interface\",\n         \"nn_module\"\n      ],\n      \"interpolate\": [\n         \"input\",\n         \"size\",\n         \"scale_factor\",\n         \"mode\",\n         \"align_corners\"\n      ],\n      \"invert_permutation\": [\n         \"permutation\"\n      ],\n      \"ipc_collect\": [],\n      \"irecv\": [\n         \"tensor\",\n         \"src\",\n         \"group\",\n         \"tag\"\n      ],\n      \"is_acceptable\": [\n         \"tensor\"\n      ],\n      \"is_all_nan\": [\n         \"tensor\"\n      ],\n      \"is_any_tensor_type\": [\n         \"formal\"\n      ],\n      \"is_available\": [],\n      \"is_backward_op\": [\n         \"decl\"\n      ],\n      \"is_built\": [],\n      \"is_caffe2_enabled\": [\n         \"framework_arg\"\n      ],\n      \"is_caffe2_gpu_file\": [\n         \"filepath\"\n      ],\n      \"is_compatible\": [\n         \"candidate_range\",\n         \"assignment\",\n         \"static_blobs\"\n      ],\n      \"is_cpu_only\": [\n         \"name\"\n      ],\n      \"is_criterion_test\": [\n         \"test_instance\"\n      ],\n      \"is_cuda_backend\": [\n         \"backend\"\n      ],\n      \"is_dependent\": [\n         \"constraint\"\n      ],\n      \"is_dict\": [\n         \"ann\"\n      ],\n      \"is_ellipsis\": [\n         \"item\"\n      ],\n      \"is_extended_method\": [\n         \"option\"\n      ],\n      \"is_factory\": [\n         \"option\"\n      ],\n      \"is_final\": [\n         \"ann\"\n      ],\n      \"is_flaky_test_mode\": [],\n      \"is_function_or_method\": [\n         \"the_callable\"\n      ],\n      \"is_future\": [\n         \"ann\"\n      ],\n      \"is_gloo_available\": [],\n      \"is_hip_clang\": [],\n      \"is_ignored_fn\": [\n         \"fn\"\n      ],\n      \"is_ignored_only\": [\n         \"output\"\n      ],\n      \"is_in_onnx_export\": [],\n      \"is_initialized\": [],\n      \"is_iterable\": [\n         \"obj\"\n      ],\n      \"is_jit_arg\": [\n         \"i\",\n         \"arg\"\n      ],\n      \"is_jit_op\": [\n         \"decl\"\n      ],\n      \"is_kwarg_only\": [\n         \"a\"\n      ],\n      \"is_list\": [\n         \"ann\"\n      ],\n      \"is_mpi_available\": [],\n      \"is_multidispatch_formal\": [\n         \"formal\"\n      ],\n      \"is_mutable_formal_argument\": [\n         \"argument\",\n         \"option\"\n      ],\n      \"is_named_tensor_only\": [\n         \"declaration\"\n      ],\n      \"is_nccl_available\": [],\n      \"is_nn_module_function\": [\n         \"declaration\"\n      ],\n      \"is_noarg_binding\": [\n         \"overloads\"\n      ],\n      \"is_optional\": [\n         \"ann\"\n      ],\n      \"is_out_of_place\": [\n         \"filepath\"\n      ],\n      \"is_out_overload\": [\n         \"declaration\"\n      ],\n      \"is_out_variant\": [\n         \"decl\"\n      ],\n      \"is_output\": [\n         \"arg\"\n      ],\n      \"is_pruned\": [\n         \"module\"\n      ],\n      \"is_pytorch_enabled\": [\n         \"framework_arg\"\n      ],\n      \"is_pytorch_file\": [\n         \"filepath\"\n      ],\n      \"is_real_argument_to_wrapper\": [\n         \"argument\"\n      ],\n      \"is_registered_op\": [\n         \"opname\",\n         \"domain\",\n         \"version\"\n      ],\n      \"is_registered_version\": [\n         \"domain\",\n         \"version\"\n      ],\n      \"is_request_only_scalar\": [\n         \"scalar\"\n      ],\n      \"is_reserved_name\": [\n         \"name\"\n      ],\n      \"is_rref\": [\n         \"ann\"\n      ],\n      \"is_sandcastle\": [],\n      \"is_scatter\": [\n         \"arg\"\n      ],\n      \"is_schema_subset\": [\n         \"schema\",\n         \"original_schema\"\n      ],\n      \"is_scripting\": [],\n      \"is_sized_intlist_arg\": [\n         \"arg\"\n      ],\n      \"is_sparse\": [\n         \"A\"\n      ],\n      \"is_storage\": [\n         \"obj\"\n      ],\n      \"is_supported\": [\n         \"method\"\n      ],\n      \"is_tensor\": [\n         \"obj\"\n      ],\n      \"is_tensor_arg\": [\n         \"arg\"\n      ],\n      \"is_tensor_method\": [\n         \"declaration\"\n      ],\n      \"is_tensor_options\": [\n         \"arg\"\n      ],\n      \"is_tensor_self\": [\n         \"arg\"\n      ],\n      \"is_torch_function\": [\n         \"declaration\"\n      ],\n      \"is_torch_nn_functional_test\": [\n         \"test_params_dict\"\n      ],\n      \"is_tracing\": [],\n      \"is_travis\": [],\n      \"is_tuple\": [\n         \"ann\"\n      ],\n      \"is_vararg\": [\n         \"the_callable\"\n      ],\n      \"is_view\": [\n         \"decl\"\n      ],\n      \"is_whitelisted_backend\": [\n         \"backend\"\n      ],\n      \"isend\": [\n         \"tensor\",\n         \"dst\",\n         \"group\",\n         \"tag\"\n      ],\n      \"isnan\": [\n         \"g\",\n         \"input\"\n      ],\n      \"istft\": [\n         \"input\",\n         \"n_fft\",\n         \"hop_length\",\n         \"win_length\",\n         \"window\",\n         \"center\",\n         \"normalized\",\n         \"onesided\",\n         \"length\"\n      ],\n      \"istuple\": [\n         \"obj\"\n      ],\n      \"iter\": [\n         \"model\",\n         \"blob_out\"\n      ],\n      \"iter_indices\": [\n         \"tensor\"\n      ],\n      \"iter_tensors\": [\n         \"x\",\n         \"only_requiring_grad\"\n      ],\n      \"iterate_types\": [],\n      \"jacobian\": [\n         \"func\",\n         \"inputs\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"jit_type_of\": [\n         \"arg\"\n      ],\n      \"jsd\": [\n         \"p\",\n         \"q\"\n      ],\n      \"jsd_grad\": [\n         \"go\",\n         \"o\",\n         \"pq_list\"\n      ],\n      \"jsonify_nvd3\": [\n         \"chart\"\n      ],\n      \"jvp\": [\n         \"func\",\n         \"inputs\",\n         \"v\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"kaiming_normal_\": [\n         \"tensor\",\n         \"a\",\n         \"mode\",\n         \"nonlinearity\"\n      ],\n      \"kaiming_uniform_\": [\n         \"tensor\",\n         \"a\",\n         \"mode\",\n         \"nonlinearity\"\n      ],\n      \"kl_div\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\",\n         \"log_target\"\n      ],\n      \"kl_divergence\": [\n         \"p\",\n         \"q\"\n      ],\n      \"kldivloss_log_target_reference\": [\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"kldivloss_no_reduce_log_target_test\": [],\n      \"kldivloss_no_reduce_scalar_log_target_test\": [],\n      \"kldivloss_no_reduce_scalar_test\": [],\n      \"kldivloss_no_reduce_test\": [],\n      \"kldivloss_reference\": [\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"kldivloss_with_log_target_no_reduce_test\": [],\n      \"kldivloss_with_target_no_reduce_test\": [],\n      \"l1_loss\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"l1_unstructured\": [\n         \"module\",\n         \"name\",\n         \"amount\"\n      ],\n      \"l1loss_no_reduce_scalar_test\": [],\n      \"l1loss_no_reduce_test\": [],\n      \"largeCUDATensorTest\": [\n         \"size\"\n      ],\n      \"last_producer\": [\n         \"ops\",\n         \"blob\"\n      ],\n      \"layer_exists\": [\n         \"name\"\n      ],\n      \"layer_norm\": [\n         \"g\",\n         \"input\",\n         \"normalized_shape\",\n         \"weight\",\n         \"bias\",\n         \"eps\",\n         \"cudnn_enable\"\n      ],\n      \"layer_norm_lstm_reference\": [\n         \"input\",\n         \"hidden_input\",\n         \"cell_input\",\n         \"gates_w\",\n         \"gates_b\",\n         \"gates_t_norm_scale\",\n         \"gates_t_norm_bias\",\n         \"seq_lengths\",\n         \"forget_bias\",\n         \"drop_states\"\n      ],\n      \"layer_norm_milstm_reference\": [\n         \"input\",\n         \"hidden_input\",\n         \"cell_input\",\n         \"gates_w\",\n         \"gates_b\",\n         \"alpha\",\n         \"beta1\",\n         \"beta2\",\n         \"b\",\n         \"gates_t_norm_scale\",\n         \"gates_t_norm_bias\",\n         \"seq_lengths\",\n         \"forget_bias\",\n         \"drop_states\"\n      ],\n      \"layer_norm_with_scale_and_bias_ref\": [\n         \"X\",\n         \"scale\",\n         \"bias\",\n         \"axis\",\n         \"epsilon\"\n      ],\n      \"layernorm_pytorch_lstm_creator\": [],\n      \"lazy_bind\": [\n         \"concrete_type\",\n         \"unbound_method\"\n      ],\n      \"le\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"leaky_relu\": [\n         \"g\",\n         \"input\",\n         \"negative_slope\",\n         \"inplace\"\n      ],\n      \"legacy_get_enum\": [\n         \"size_average\",\n         \"reduce\",\n         \"emit_warning\"\n      ],\n      \"legacy_get_string\": [\n         \"size_average\",\n         \"reduce\",\n         \"emit_warning\"\n      ],\n      \"lengths\": [\n         \"size\",\n         \"min_segments\",\n         \"max_segments\"\n      ],\n      \"lengths_tensor\": [\n         \"min_segments\",\n         \"max_segments\"\n      ],\n      \"lib_paths_from_base\": [\n         \"base_path\"\n      ],\n      \"library_paths\": [\n         \"cuda\"\n      ],\n      \"light_rpc\": [],\n      \"linear\": [\n         \"g\",\n         \"input\",\n         \"weight\",\n         \"bias\",\n         \"scale\",\n         \"zero_point\"\n      ],\n      \"linear_prepack\": [\n         \"g\",\n         \"weight\",\n         \"bias\"\n      ],\n      \"list\": [\n         \"github\",\n         \"force_reload\"\n      ],\n      \"ln_structured\": [\n         \"module\",\n         \"name\",\n         \"amount\",\n         \"n\",\n         \"dim\"\n      ],\n      \"lnlstm_creator\": [\n         \"script\",\n         \"decompose_layernorm\"\n      ],\n      \"load\": [\n         \"name\",\n         \"sources\",\n         \"extra_cflags\",\n         \"extra_cuda_cflags\",\n         \"extra_ldflags\",\n         \"extra_include_paths\",\n         \"build_directory\",\n         \"verbose\",\n         \"with_cuda\",\n         \"is_python_module\",\n         \"keep_intermediates\"\n      ],\n      \"load_aten_declarations\": [\n         \"path\"\n      ],\n      \"load_caffe2_net\": [\n         \"file\"\n      ],\n      \"load_deprecated_signatures\": [\n         \"aten_decls\",\n         \"deprecated_path\"\n      ],\n      \"load_derivatives\": [\n         \"path\",\n         \"declarations\"\n      ],\n      \"load_events\": [\n         \"filename\"\n      ],\n      \"load_from_db\": [\n         \"filename\",\n         \"db_type\",\n         \"device_option\"\n      ],\n      \"load_inline\": [\n         \"name\",\n         \"cpp_sources\",\n         \"cuda_sources\",\n         \"functions\",\n         \"extra_cflags\",\n         \"extra_cuda_cflags\",\n         \"extra_ldflags\",\n         \"extra_include_paths\",\n         \"build_directory\",\n         \"verbose\",\n         \"with_cuda\",\n         \"is_python_module\",\n         \"with_pytorch_error_handling\",\n         \"keep_intermediates\"\n      ],\n      \"load_normalized_test_case\": [\n         \"input_shape\",\n         \"test_image\",\n         \"pagelocked_buffer\",\n         \"normalization_hint\"\n      ],\n      \"load_nvprof\": [\n         \"path\"\n      ],\n      \"load_onnx_graph\": [\n         \"fname\"\n      ],\n      \"load_op_dep_graph\": [\n         \"fname\"\n      ],\n      \"load_op_deps\": [\n         \"fname\"\n      ],\n      \"load_op_list\": [\n         \"path\"\n      ],\n      \"load_root_ops\": [\n         \"fname\"\n      ],\n      \"load_state_dict_from_url\": [\n         \"url\",\n         \"model_dir\",\n         \"map_location\",\n         \"progress\",\n         \"check_hash\"\n      ],\n      \"load_tensor_as_numpy_array\": [\n         \"f\"\n      ],\n      \"load_tests\": [\n         \"loader\",\n         \"tests\",\n         \"pattern\"\n      ],\n      \"lobpcg\": [\n         \"A\",\n         \"k\",\n         \"B\",\n         \"X\",\n         \"n\",\n         \"iK\",\n         \"niter\",\n         \"tol\",\n         \"largest\",\n         \"method\",\n         \"tracker\",\n         \"ortho_iparams\",\n         \"ortho_fparams\",\n         \"ortho_bparams\"\n      ],\n      \"local_add\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"local_copy_op\": [\n         \"src\",\n         \"dest\"\n      ],\n      \"local_response_norm\": [\n         \"input\",\n         \"size\",\n         \"alpha\",\n         \"beta\",\n         \"k\"\n      ],\n      \"location_tag\": [\n         \"storage\"\n      ],\n      \"log\": [\n         \"g\",\n         \"self\"\n      ],\n      \"log1p\": [\n         \"g\",\n         \"self\"\n      ],\n      \"log2\": [\n         \"g\",\n         \"self\"\n      ],\n      \"log_sigmoid\": [\n         \"g\",\n         \"input\"\n      ],\n      \"log_softmax\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"dtype\"\n      ],\n      \"log_test_reason\": [\n         \"file_type\",\n         \"filename\",\n         \"test\",\n         \"options\"\n      ],\n      \"logdet\": [\n         \"g\",\n         \"input\"\n      ],\n      \"logits_to_probs\": [\n         \"logits\",\n         \"is_binary\"\n      ],\n      \"logmeanexp\": [\n         \"x\"\n      ],\n      \"logsumexp\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"keepdim\"\n      ],\n      \"logsumexp_grad\": [\n         \"grad_out\",\n         \"outputs\",\n         \"inputs\"\n      ],\n      \"loop\": [\n         \"model\",\n         \"cond_blob\",\n         \"external_blobs\",\n         \"loop_model\",\n         \"cond_model\"\n      ],\n      \"lp_pool1d\": [\n         \"input\",\n         \"norm_type\",\n         \"kernel_size\",\n         \"stride\",\n         \"ceil_mode\"\n      ],\n      \"lp_pool2d\": [\n         \"input\",\n         \"norm_type\",\n         \"kernel_size\",\n         \"stride\",\n         \"ceil_mode\"\n      ],\n      \"lrn\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"order\",\n         \"use_cudnn\"\n      ],\n      \"lstm\": [\n         \"g\"\n      ],\n      \"lstm_backward_setup\": [\n         \"lstm_outputs\",\n         \"seed\"\n      ],\n      \"lstm_cell\": [\n         \"input\",\n         \"hidden\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"lstm_creator\": [\n         \"script\"\n      ],\n      \"lstm_factory\": [\n         \"cell\",\n         \"script\"\n      ],\n      \"lstm_factory_multilayer\": [\n         \"cell\",\n         \"script\"\n      ],\n      \"lstm_factory_premul\": [\n         \"premul_cell\",\n         \"script\"\n      ],\n      \"lstm_factory_premul_bias\": [\n         \"premul_cell\",\n         \"script\"\n      ],\n      \"lstm_factory_simple\": [\n         \"cell\",\n         \"script\"\n      ],\n      \"lstm_input\": [],\n      \"lstm_inputs\": [\n         \"seqLength\",\n         \"numLayers\",\n         \"inputSize\",\n         \"hiddenSize\",\n         \"miniBatch\",\n         \"dropout\",\n         \"return_module\",\n         \"device\",\n         \"seed\"\n      ],\n      \"lstm_multilayer_creator\": [\n         \"script\"\n      ],\n      \"lstm_premul_bias_creator\": [\n         \"script\"\n      ],\n      \"lstm_premul_creator\": [\n         \"script\"\n      ],\n      \"lstm_reference\": [\n         \"input\",\n         \"hidden_input\",\n         \"cell_input\",\n         \"gates_w\",\n         \"gates_b\",\n         \"seq_lengths\",\n         \"forget_bias\",\n         \"drop_states\"\n      ],\n      \"lstm_simple_creator\": [\n         \"script\"\n      ],\n      \"lstm_unit\": [],\n      \"lstm_with_attention_reference\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"encoder_outputs_transposed\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"weighted_encoder_outputs\",\n         \"coverage_weights\",\n         \"attention_v\",\n         \"attention_zeros\",\n         \"compute_attention_logits\"\n      ],\n      \"lstm_with_coverage_attention_reference\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"initial_coverage\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"weighted_encoder_outputs\",\n         \"coverage_weights\",\n         \"attention_v\",\n         \"attention_zeros\",\n         \"encoder_outputs_transposed\"\n      ],\n      \"lstm_with_dot_attention_reference\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"encoder_outputs_transposed\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\"\n      ],\n      \"lstm_with_dot_attention_reference_different_dim\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"encoder_outputs_transposed\"\n      ],\n      \"lstm_with_dot_attention_reference_same_dim\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"encoder_outputs_transposed\"\n      ],\n      \"lstm_with_recurrent_attention_reference\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"weighted_prev_attention_context_w\",\n         \"weighted_prev_attention_context_b\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"weighted_encoder_outputs\",\n         \"attention_v\",\n         \"attention_zeros\",\n         \"encoder_outputs_transposed\"\n      ],\n      \"lstm_with_regular_attention_reference\": [\n         \"input\",\n         \"initial_hidden_state\",\n         \"initial_cell_state\",\n         \"initial_attention_weighted_encoder_context\",\n         \"gates_w\",\n         \"gates_b\",\n         \"decoder_input_lengths\",\n         \"weighted_decoder_hidden_state_t_w\",\n         \"weighted_decoder_hidden_state_t_b\",\n         \"weighted_encoder_outputs\",\n         \"attention_v\",\n         \"attention_zeros\",\n         \"encoder_outputs_transposed\"\n      ],\n      \"lt\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"lt_impl\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"lu_unpack\": [\n         \"LU_data\",\n         \"LU_pivots\",\n         \"unpack_data\",\n         \"unpack_pivots\"\n      ],\n      \"main\": [\n         \"argv\",\n         \"output_stream\"\n      ],\n      \"make_destination_dataset\": [\n         \"ws\",\n         \"schema\",\n         \"name\"\n      ],\n      \"make_grid\": [\n         \"I\",\n         \"ncols\"\n      ],\n      \"make_histogram\": [\n         \"values\",\n         \"bins\",\n         \"max_bins\"\n      ],\n      \"make_image\": [\n         \"tensor\",\n         \"rescale\",\n         \"rois\",\n         \"labels\"\n      ],\n      \"make_jacobian\": [\n         \"input\",\n         \"num_out\"\n      ],\n      \"make_mat\": [\n         \"matlist\",\n         \"save_path\"\n      ],\n      \"make_module\": [\n         \"mod\",\n         \"_module_class\",\n         \"_compilation_unit\"\n      ],\n      \"make_neg_dim_test\": [\n         \"name\",\n         \"tensor_arg\",\n         \"arg_constr\",\n         \"types\",\n         \"extra_dim\"\n      ],\n      \"make_non_contiguous\": [\n         \"tensor\"\n      ],\n      \"make_nonzero_det\": [\n         \"A\",\n         \"sign\",\n         \"min_singular_value\"\n      ],\n      \"make_np\": [\n         \"x\"\n      ],\n      \"make_processor\": [\n         \"processor\",\n         \"reader\"\n      ],\n      \"make_python_arglists\": [\n         \"declaration\",\n         \"is_python_method\"\n      ],\n      \"make_python_binding_args\": [\n         \"declaration\"\n      ],\n      \"make_source_dataset\": [\n         \"ws\",\n         \"size\",\n         \"offset\",\n         \"name\"\n      ],\n      \"make_sparse_tensor\": [\n         \"t\",\n         \"n\"\n      ],\n      \"make_sprite\": [\n         \"label_img\",\n         \"save_path\"\n      ],\n      \"make_stub\": [\n         \"func\"\n      ],\n      \"make_stub_from_method\": [\n         \"nn_module\",\n         \"method\"\n      ],\n      \"make_stubs_for_overloads\": [\n         \"overload_info\"\n      ],\n      \"make_test\": [\n         \"name\",\n         \"base\",\n         \"layer\",\n         \"bidirectional\",\n         \"initial_state\",\n         \"variable_length\",\n         \"dropout\"\n      ],\n      \"make_tsv\": [\n         \"metadata\",\n         \"save_path\",\n         \"metadata_header\"\n      ],\n      \"make_tuple\": [\n         \"example_inputs\"\n      ],\n      \"make_video\": [\n         \"tensor\",\n         \"fps\"\n      ],\n      \"manager_path\": [],\n      \"manual_seed\": [\n         \"seed\"\n      ],\n      \"manual_seed_all\": [\n         \"seed\"\n      ],\n      \"map_rois_to_fpn_levels\": [\n         \"rois\",\n         \"k_min\",\n         \"k_max\",\n         \"roi_canonical_scale\",\n         \"roi_canonical_level\"\n      ],\n      \"margin_ranking_loss\": [\n         \"input1\",\n         \"input2\",\n         \"target\",\n         \"margin\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"marginrankingloss_reference\": [\n         \"input1\",\n         \"input2\",\n         \"target\",\n         \"margin\",\n         \"reduction\"\n      ],\n      \"mark\": [\n         \"msg\"\n      ],\n      \"maskNallocate\": [\n         \"weight_name\"\n      ],\n      \"mask_not_all_zeros\": [\n         \"shape\"\n      ],\n      \"masked_fill\": [\n         \"g\",\n         \"self\",\n         \"mask\",\n         \"value\"\n      ],\n      \"masked_scatter\": [\n         \"g\",\n         \"self\",\n         \"mask\",\n         \"source\"\n      ],\n      \"masked_select\": [\n         \"g\",\n         \"self\",\n         \"mask\"\n      ],\n      \"match_declarations_with_differentiability_info\": [\n         \"declarations\",\n         \"differentiability_infos\"\n      ],\n      \"matched_files_iter\": [\n         \"root_path\",\n         \"includes\",\n         \"ignores\",\n         \"extensions\",\n         \"out_of_place_only\"\n      ],\n      \"matmul\": [\n         \"A\",\n         \"B\"\n      ],\n      \"matrix_to_tt\": [\n         \"W\",\n         \"inp_sizes\",\n         \"out_sizes\",\n         \"tt_ranks\"\n      ],\n      \"max\": [\n         \"g\",\n         \"self\",\n         \"dim_or_y\",\n         \"keepdim\"\n      ],\n      \"max_fwd\": [\n         \"x\"\n      ],\n      \"max_grad\": [\n         \"grad_out\",\n         \"outputs\",\n         \"inputs\"\n      ],\n      \"max_memory_allocated\": [\n         \"device\"\n      ],\n      \"max_memory_cached\": [\n         \"device\"\n      ],\n      \"max_memory_reserved\": [\n         \"device\"\n      ],\n      \"max_pool\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"use_cudnn\",\n         \"order\"\n      ],\n      \"max_pool1d_with_indices\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"max_pool2d\": [\n         \"g\",\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\"\n      ],\n      \"max_pool2d_with_indices\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"max_pool3d_with_indices\": [\n         \"input\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"dilation\",\n         \"ceil_mode\",\n         \"return_indices\"\n      ],\n      \"max_pool_with_index\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"order\"\n      ],\n      \"max_unpool1d\": [\n         \"input\",\n         \"indices\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_size\"\n      ],\n      \"max_unpool2d\": [\n         \"input\",\n         \"indices\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_size\"\n      ],\n      \"max_unpool3d\": [\n         \"input\",\n         \"indices\",\n         \"kernel_size\",\n         \"stride\",\n         \"padding\",\n         \"output_size\"\n      ],\n      \"maybe_unexpand\": [\n         \"tensor\",\n         \"old_size\",\n         \"check_same_size\"\n      ],\n      \"maybe_view\": [\n         \"tensor\",\n         \"size\",\n         \"check_same_size\"\n      ],\n      \"mean\": [\n         \"mat\"\n      ],\n      \"mean_grad\": [\n         \"grad_out\",\n         \"outputs\",\n         \"inputs\"\n      ],\n      \"memory_allocated\": [\n         \"device\"\n      ],\n      \"memory_cached\": [\n         \"device\"\n      ],\n      \"memory_reserved\": [\n         \"device\"\n      ],\n      \"memory_snapshot\": [],\n      \"memory_stats\": [\n         \"device\"\n      ],\n      \"memory_stats_as_nested_dict\": [\n         \"device\"\n      ],\n      \"memory_summary\": [\n         \"device\",\n         \"abbreviated\"\n      ],\n      \"merge_dicts\": [],\n      \"merge_id_lists_ref\": [],\n      \"mesh\": [\n         \"tag\",\n         \"vertices\",\n         \"colors\",\n         \"faces\",\n         \"config_dict\",\n         \"display_name\",\n         \"description\"\n      ],\n      \"meshgrid\": [\n         \"g\",\n         \"tensor_list\"\n      ],\n      \"method_def\": [\n         \"name\",\n         \"declarations\",\n         \"is_python_method\",\n         \"module\"\n      ],\n      \"method_impl\": [\n         \"name\",\n         \"declarations\",\n         \"is_python_method\",\n         \"module\"\n      ],\n      \"method_tests\": [],\n      \"milstm_cell\": [\n         \"x\",\n         \"hx\",\n         \"cx\",\n         \"w_ih\",\n         \"w_hh\",\n         \"alpha\",\n         \"beta_i\",\n         \"beta_h\",\n         \"bias\"\n      ],\n      \"milstm_reference\": [\n         \"input\",\n         \"hidden_input\",\n         \"cell_input\",\n         \"gates_w\",\n         \"gates_b\",\n         \"alpha\",\n         \"beta1\",\n         \"beta2\",\n         \"b\",\n         \"seq_lengths\",\n         \"forget_bias\",\n         \"drop_states\"\n      ],\n      \"min\": [\n         \"g\",\n         \"self\",\n         \"dim_or_y\",\n         \"keepdim\"\n      ],\n      \"mixed_type_producer\": [\n         \"queue\",\n         \"event\"\n      ],\n      \"mkdtemp\": [],\n      \"mm\": [\n         \"mat1\",\n         \"mat2\"\n      ],\n      \"model_size\": [\n         \"sm\"\n      ],\n      \"model_to_graph_def\": [\n         \"model\"\n      ],\n      \"module_has_exports\": [\n         \"mod\"\n      ],\n      \"moments_with_running_stats\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"RunningMeanInitializer\",\n         \"RunningVarianceInitializer\",\n         \"order\"\n      ],\n      \"move_cpp_tensors_to_device\": [\n         \"cpp_tensor_stmts\",\n         \"device\"\n      ],\n      \"move_python_tensors_to_device\": [\n         \"python_tensors\",\n         \"device\"\n      ],\n      \"ms_to_us\": [\n         \"time_ms\"\n      ],\n      \"mse\": [\n         \"x\",\n         \"xh\"\n      ],\n      \"mse_loss\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"mseloss_no_reduce_scalar_test\": [],\n      \"mseloss_no_reduce_test\": [],\n      \"mul\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"multi_head_attention_forward\": [\n         \"query\",\n         \"key\",\n         \"value\",\n         \"embed_dim_to_check\",\n         \"num_heads\",\n         \"in_proj_weight\",\n         \"in_proj_bias\",\n         \"bias_k\",\n         \"bias_v\",\n         \"add_zero_attn\",\n         \"dropout_p\",\n         \"out_proj_weight\",\n         \"out_proj_bias\",\n         \"training\",\n         \"key_padding_mask\",\n         \"need_weights\",\n         \"attn_mask\",\n         \"use_separate_proj_weight\",\n         \"q_proj_weight\",\n         \"k_proj_weight\",\n         \"v_proj_weight\",\n         \"static_k\",\n         \"static_v\"\n      ],\n      \"multi_layer_nested_async_rpc\": [\n         \"dst\",\n         \"world_size\",\n         \"ttl\"\n      ],\n      \"multi_lstm_reference\": [\n         \"input\",\n         \"hidden_input_list\",\n         \"cell_input_list\",\n         \"i2h_w_list\",\n         \"i2h_b_list\",\n         \"gates_w_list\",\n         \"gates_b_list\",\n         \"seq_lengths\",\n         \"forget_bias\",\n         \"drop_states\"\n      ],\n      \"multi_margin_loss\": [\n         \"input\",\n         \"target\",\n         \"p\",\n         \"margin\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"multilabel_margin_loss\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"multilabel_soft_margin_loss\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"multilabelmarginloss_0d_no_reduce_test\": [],\n      \"multilabelmarginloss_1d_no_reduce_test\": [],\n      \"multilabelmarginloss_index_neg_test\": [],\n      \"multilabelmarginloss_no_reduce_test\": [],\n      \"multilabelmarginloss_reference\": [\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"multilabelsoftmarginloss_no_reduce_test\": [],\n      \"multilabelsoftmarginloss_weights_no_reduce_test\": [],\n      \"multimarginloss_1d_input_0d_target_no_reduce_test\": [],\n      \"multimarginloss_1d_no_reduce_test\": [],\n      \"multimarginloss_margin_no_reduce_test\": [],\n      \"multimarginloss_no_reduce_test\": [],\n      \"multimarginloss_p_no_reduce_test\": [],\n      \"multimarginloss_reference\": [\n         \"input\",\n         \"target\",\n         \"p\",\n         \"margin\",\n         \"weight\",\n         \"reduction\"\n      ],\n      \"multimarginloss_weights_no_reduce_test\": [],\n      \"multinomial\": [\n         \"g\",\n         \"input\",\n         \"num_samples\",\n         \"replacement\",\n         \"generator\"\n      ],\n      \"mux\": [\n         \"select\",\n         \"left\",\n         \"right\"\n      ],\n      \"my_complex_tensor_function\": [\n         \"list_input\",\n         \"tensor_class_input\",\n         \"dict_input\"\n      ],\n      \"my_function\": [\n         \"a\",\n         \"b\",\n         \"c\"\n      ],\n      \"my_nested_rref_add\": [\n         \"dst\",\n         \"rref_t1\",\n         \"t2\"\n      ],\n      \"my_py_add\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"my_py_nested_call\": [\n         \"t1\",\n         \"t2\",\n         \"dst\",\n         \"world_size\",\n         \"hops\"\n      ],\n      \"my_rref_add\": [\n         \"rref_t1\",\n         \"t2\"\n      ],\n      \"my_rref_function\": [\n         \"rref_a\",\n         \"rref_b\"\n      ],\n      \"my_scalar_add\": [\n         \"a\",\n         \"b\"\n      ],\n      \"my_script_add\": [\n         \"t1\",\n         \"t2\"\n      ],\n      \"my_script_func\": [\n         \"tensor\"\n      ],\n      \"my_script_module_init\": [\n         \"rank\"\n      ],\n      \"my_script_ref_add\": [\n         \"ref_t1\",\n         \"t2\"\n      ],\n      \"my_sleep_func\": [\n         \"seconds\"\n      ],\n      \"my_tensor_function\": [\n         \"a\",\n         \"b\"\n      ],\n      \"named_guard\": [\n         \"option\",\n         \"tensors\",\n         \"tensorlists\"\n      ],\n      \"namedtuple_fieldnames\": [\n         \"declaration\"\n      ],\n      \"namedtupledict\": [\n         \"typename\",\n         \"field_names\"\n      ],\n      \"namer_api_name\": [\n         \"inplace\"\n      ],\n      \"narrow\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"start\",\n         \"length\"\n      ],\n      \"nchw2nhwc\": [\n         \"g\",\n         \"input\"\n      ],\n      \"ne\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"needs_backend_select\": [\n         \"declaration_option\"\n      ],\n      \"neg\": [\n         \"g\",\n         \"self\"\n      ],\n      \"nested_remote\": [\n         \"dst\"\n      ],\n      \"nested_rpc\": [\n         \"dst\"\n      ],\n      \"nested_rref\": [\n         \"dst\"\n      ],\n      \"net2list\": [\n         \"net_root\"\n      ],\n      \"net_DAG_Builder\": [\n         \"model\"\n      ],\n      \"netbuilder\": [\n         \"model\"\n      ],\n      \"nets_to_graph_def\": [\n         \"nets\",\n         \"shapes\"\n      ],\n      \"new_group\": [\n         \"ranks\",\n         \"timeout\",\n         \"backend\"\n      ],\n      \"new_zeros\": [\n         \"g\",\n         \"self\",\n         \"sizes\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\"\n      ],\n      \"nhwc2nchw\": [\n         \"g\",\n         \"input\"\n      ],\n      \"nll_loss\": [\n         \"g\",\n         \"self\",\n         \"target\",\n         \"weight\",\n         \"reduction\",\n         \"ignore_index\"\n      ],\n      \"nll_loss2d\": [\n         \"g\",\n         \"self\",\n         \"target\",\n         \"weight\",\n         \"reduction\",\n         \"ignore_index\"\n      ],\n      \"nllloss2d_no_reduce_ignore_index_test\": [],\n      \"nllloss2d_no_reduce_test\": [],\n      \"nllloss2d_no_reduce_weights_test\": [],\n      \"nlllossNd_no_reduce_ignore_index_test\": [],\n      \"nlllossNd_no_reduce_test\": [],\n      \"nlllossNd_no_reduce_weights_test\": [],\n      \"nlllossNd_reference\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"ignore_index\",\n         \"reduction\"\n      ],\n      \"nllloss_no_reduce_ignore_index_test\": [],\n      \"nllloss_no_reduce_test\": [],\n      \"nllloss_no_reduce_weights_ignore_index_neg_test\": [],\n      \"nllloss_no_reduce_weights_ignore_index_test\": [],\n      \"nllloss_no_reduce_weights_test\": [],\n      \"nllloss_reference\": [\n         \"input\",\n         \"target\",\n         \"weight\",\n         \"ignore_index\",\n         \"reduction\"\n      ],\n      \"no_arg\": [],\n      \"no_result\": [],\n      \"node_proto\": [\n         \"name\",\n         \"op\",\n         \"input\",\n         \"dtype\",\n         \"shape\",\n         \"outputsize\",\n         \"attributes\"\n      ],\n      \"non_cont_test\": [\n         \"t_view\",\n         \"t_cont\"\n      ],\n      \"nonzero\": [\n         \"g\",\n         \"input\"\n      ],\n      \"noop\": [],\n      \"norm\": [\n         \"g\",\n         \"self\",\n         \"p\",\n         \"dim\",\n         \"keepdim\"\n      ],\n      \"normal_\": [\n         \"tensor\",\n         \"mean\",\n         \"std\"\n      ],\n      \"normal_scalar_clamp\": [\n         \"amin\",\n         \"amax\",\n         \"requires_grad\"\n      ],\n      \"normalize\": [\n         \"input\",\n         \"p\",\n         \"dim\",\n         \"eps\",\n         \"out\"\n      ],\n      \"normalize_check_ad\": [\n         \"check_ad\",\n         \"name\"\n      ],\n      \"normalize_nl\": [\n         \"t\"\n      ],\n      \"normalize_processor_output\": [\n         \"output\"\n      ],\n      \"normalize_storage_type\": [\n         \"storage_type\"\n      ],\n      \"nth_eol\": [\n         \"src\",\n         \"lineno\"\n      ],\n      \"nth_line\": [\n         \"src\",\n         \"lineno\"\n      ],\n      \"numOps\": [\n         \"net\"\n      ],\n      \"num_ifs_loops\": [\n         \"graph\"\n      ],\n      \"num_non_tensor_nodes\": [\n         \"block\"\n      ],\n      \"num_profiled_runs\": [\n         \"num_runs\"\n      ],\n      \"numel\": [\n         \"g\",\n         \"self\"\n      ],\n      \"numpy_random\": [\n         \"dtype\"\n      ],\n      \"nvprof\": [\n         \"cmd\",\n         \"outpath\"\n      ],\n      \"nvprof_output_filename\": [\n         \"rnns\"\n      ],\n      \"ok_for_raw_triple_quoted_string\": [\n         \"s\",\n         \"quote\"\n      ],\n      \"once_differentiable\": [\n         \"fn\"\n      ],\n      \"one_arg\": [\n         \"value\"\n      ],\n      \"one_hot\": [\n         \"g\",\n         \"self\",\n         \"num_classes\"\n      ],\n      \"ones\": [\n         \"g\",\n         \"sizes\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\"\n      ],\n      \"ones_\": [\n         \"tensor\"\n      ],\n      \"ones_like\": [\n         \"g\",\n         \"input\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"onlyCPU\": [\n         \"fn\"\n      ],\n      \"onlyCUDA\": [\n         \"fn\"\n      ],\n      \"onlyOnCPUAndCUDA\": [\n         \"fn\"\n      ],\n      \"onnx_to_caffe2\": [\n         \"onnx_model\",\n         \"output\",\n         \"init_net_output\"\n      ],\n      \"onnx_verify\": [\n         \"onnx_model\",\n         \"inputs\",\n         \"ref_outputs\"\n      ],\n      \"onnxifi_caffe2_net\": [\n         \"pred_net\",\n         \"input_shapes\",\n         \"max_batch_size\",\n         \"max_seq_size\",\n         \"debug\",\n         \"use_onnx\",\n         \"merge_fp32_inputs_into_fp16\",\n         \"adjust_batch\",\n         \"black_list\",\n         \"weight_names\"\n      ],\n      \"op_builder\": [\n         \"name\",\n         \"index\",\n         \"extra\"\n      ],\n      \"op_list\": [],\n      \"op_name\": [\n         \"declaration\"\n      ],\n      \"openf\": [\n         \"filename\",\n         \"mode\"\n      ],\n      \"ops_to_graph_def\": [\n         \"ops\",\n         \"shapes\"\n      ],\n      \"optimizeForMKLDNN\": [\n         \"net\",\n         \"training_mode\"\n      ],\n      \"optimize_for_mobile\": [\n         \"script_module\"\n      ],\n      \"optimize_inference_fast\": [\n         \"net\",\n         \"static_blobs\"\n      ],\n      \"optimize_inference_for_dag\": [\n         \"net\",\n         \"input_blobs\",\n         \"namescope\"\n      ],\n      \"optimize_interference\": [\n         \"net\",\n         \"static_blobs\",\n         \"ordering_function\",\n         \"blob_sizes\",\n         \"algo\"\n      ],\n      \"optimized_execution\": [\n         \"should_optimize\"\n      ],\n      \"optional_type_of\": [\n         \"arg\",\n         \"typ\"\n      ],\n      \"ort_test_with_input\": [\n         \"ort_sess\",\n         \"input\",\n         \"output\",\n         \"rtol\",\n         \"atol\"\n      ],\n      \"orthogonal_\": [\n         \"tensor\",\n         \"gain\"\n      ],\n      \"out_fn\": [\n         \"operator\"\n      ],\n      \"output_arguments\": [\n         \"thnn_function\"\n      ],\n      \"output_projection\": [\n         \"model\",\n         \"decoder_outputs\",\n         \"decoder_output_size\",\n         \"target_vocab_size\",\n         \"decoder_softmax_size\"\n      ],\n      \"output_size2d_\": [],\n      \"output_size2dsq_\": [],\n      \"output_size3d_\": [],\n      \"output_size3dsq_\": [],\n      \"output_to_list\": [\n         \"op_output\"\n      ],\n      \"overload_by_arg_count\": [\n         \"fn\"\n      ],\n      \"overrideAdditionalMethods\": [\n         \"myTrainerClass\",\n         \"opts\"\n      ],\n      \"override_qengines\": [\n         \"qfunction\"\n      ],\n      \"override_quantized_engine\": [\n         \"qengine\"\n      ],\n      \"owner_create_rref_my_script_class\": [\n         \"a\"\n      ],\n      \"owner_create_rref_my_script_module\": [\n         \"a\"\n      ],\n      \"pack_padded_sequence\": [\n         \"input\",\n         \"lengths\",\n         \"batch_first\",\n         \"enforce_sorted\"\n      ],\n      \"pack_sequence\": [\n         \"sequences\",\n         \"enforce_sorted\"\n      ],\n      \"packed_fc\": [\n         \"model\"\n      ],\n      \"pad_packed_sequence\": [\n         \"sequence\",\n         \"batch_first\",\n         \"padding_value\",\n         \"total_length\"\n      ],\n      \"pad_sequence\": [\n         \"sequences\",\n         \"batch_first\",\n         \"padding_value\"\n      ],\n      \"padding1d_circular\": [\n         \"input\",\n         \"pad\"\n      ],\n      \"padding2d_circular\": [\n         \"input\",\n         \"pad\"\n      ],\n      \"padding3d_circular\": [\n         \"input\",\n         \"pad\"\n      ],\n      \"pairwise\": [\n         \"Dist\"\n      ],\n      \"pairwise_distance\": [\n         \"x1\",\n         \"x2\",\n         \"p\",\n         \"eps\",\n         \"keepdim\"\n      ],\n      \"parallel_apply\": [\n         \"modules\",\n         \"inputs\",\n         \"kwargs_tup\",\n         \"devices\"\n      ],\n      \"parallel_info\": [],\n      \"param_search_greedy\": [\n         \"x\",\n         \"bit_rate\",\n         \"n_bins\",\n         \"ratio\"\n      ],\n      \"parameters_to_vector\": [\n         \"parameters\"\n      ],\n      \"parse\": [\n         \"graph\",\n         \"trace\",\n         \"args\",\n         \"omit_useless_nodes\"\n      ],\n      \"parse_arg\": [\n         \"arg\",\n         \"arg_index\",\n         \"unpack_to_local\"\n      ],\n      \"parse_args\": [],\n      \"parse_arguments\": [\n         \"args\",\n         \"func_variants\",\n         \"declaration\",\n         \"func_return\"\n      ],\n      \"parse_compressed_namedshape\": [\n         \"string\"\n      ],\n      \"parse_cpu_trace\": [\n         \"thread_records\"\n      ],\n      \"parse_header\": [\n         \"path\"\n      ],\n      \"parse_kwarg\": [\n         \"kwarg_str\"\n      ],\n      \"parse_kwargs\": [\n         \"desc\"\n      ],\n      \"parse_lines\": [\n         \"lines\"\n      ],\n      \"parse_native_yaml\": [\n         \"path\"\n      ],\n      \"parse_nn_yaml\": [\n         \"filename\"\n      ],\n      \"parse_nvprof_trace\": [\n         \"path\"\n      ],\n      \"parse_op_args\": [\n         \"op\"\n      ],\n      \"parse_options\": [],\n      \"parse_parity_tracker_table\": [\n         \"file_path\"\n      ],\n      \"parse_report\": [\n         \"path\"\n      ],\n      \"parse_reports\": [\n         \"folder\"\n      ],\n      \"parse_return_arguments\": [\n         \"return_decl\",\n         \"inplace\",\n         \"func_decl\"\n      ],\n      \"parse_test_module\": [\n         \"test\"\n      ],\n      \"parse_type_line\": [\n         \"type_line\",\n         \"rcb\",\n         \"loc\"\n      ],\n      \"parsed_arg_expr\": [\n         \"arg\",\n         \"arg_index\"\n      ],\n      \"partial_apply_nontensors\": [\n         \"fn\",\n         \"args\"\n      ],\n      \"pass_name_to_python_arg_parser\": [\n         \"name\"\n      ],\n      \"patched_make_field\": [\n         \"self\",\n         \"types\",\n         \"domain\",\n         \"items\"\n      ],\n      \"pca_lowrank\": [\n         \"A\",\n         \"q\",\n         \"center\",\n         \"niter\"\n      ],\n      \"per_channel_tensor\": [\n         \"draw\",\n         \"shapes\",\n         \"elements\",\n         \"qparams\"\n      ],\n      \"permute\": [\n         \"g\",\n         \"self\",\n         \"dims\"\n      ],\n      \"pin_memory\": [\n         \"data\"\n      ],\n      \"pipe\": [\n         \"input\",\n         \"output\",\n         \"num_threads\",\n         \"processor\",\n         \"name\",\n         \"capacity\",\n         \"group\",\n         \"num_runtime_threads\"\n      ],\n      \"pipe_and_output\": [\n         \"input\",\n         \"output\",\n         \"num_threads\",\n         \"processor\",\n         \"name\",\n         \"capacity\",\n         \"group\",\n         \"num_runtime_threads\",\n         \"final_outputs\"\n      ],\n      \"pixel_shuffle\": [\n         \"g\",\n         \"self\",\n         \"upscale_factor\"\n      ],\n      \"plot_function\": [\n         \"function\"\n      ],\n      \"poisson_nll_loss\": [\n         \"input\",\n         \"target\",\n         \"log_input\",\n         \"full\",\n         \"size_average\",\n         \"eps\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"poissonnllloss_no_reduce_test\": [],\n      \"pool_output_shape\": [\n         \"input_size\",\n         \"kernel_size\",\n         \"padding\",\n         \"stride\",\n         \"dilation\",\n         \"ceiling_mode\"\n      ],\n      \"pop\": [\n         \"g\",\n         \"tensor_list\",\n         \"dim\"\n      ],\n      \"post_add_test\": [\n         \"test_name\",\n         \"skipTestIf\",\n         \"do_test\",\n         \"test_class\"\n      ],\n      \"postprocess_output_declarations\": [\n         \"output_declarations\"\n      ],\n      \"pow\": [\n         \"g\",\n         \"self\",\n         \"exponent\"\n      ],\n      \"pr_curve\": [\n         \"tag\",\n         \"labels\",\n         \"predictions\",\n         \"num_thresholds\",\n         \"weights\"\n      ],\n      \"pr_curve_raw\": [\n         \"tag\",\n         \"tp\",\n         \"fp\",\n         \"tn\",\n         \"fn\",\n         \"precision\",\n         \"recall\",\n         \"num_thresholds\",\n         \"weights\"\n      ],\n      \"prelu\": [\n         \"g\",\n         \"self\",\n         \"weight\"\n      ],\n      \"premul_lstm_cell\": [\n         \"igates\",\n         \"hidden\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"premul_lstm_cell_no_bias\": [\n         \"igates\",\n         \"hidden\",\n         \"w_hh\",\n         \"b_hh\"\n      ],\n      \"prep_data_parallel_models\": [\n         \"self\"\n      ],\n      \"prepare\": [\n         \"model\",\n         \"inplace\",\n         \"white_list\"\n      ],\n      \"prepare_batch\": [\n         \"batch\"\n      ],\n      \"prepare_dynamic\": [\n         \"model\",\n         \"qconfig_dict\"\n      ],\n      \"prepare_dynamic_script\": [\n         \"model\",\n         \"qconfig_dict\"\n      ],\n      \"prepare_model_outputs\": [\n         \"float_module\",\n         \"q_module\",\n         \"Logger\",\n         \"white_list\"\n      ],\n      \"prepare_model_with_stubs\": [\n         \"float_module\",\n         \"q_module\",\n         \"module_swap_list\",\n         \"Logger\"\n      ],\n      \"prepare_mul_rnn\": [\n         \"model\",\n         \"input_blob\",\n         \"shape\",\n         \"T\",\n         \"outputs_with_grad\",\n         \"num_layers\"\n      ],\n      \"prepare_multiprocessing_environment\": [\n         \"path\"\n      ],\n      \"prepare_prediction_net\": [\n         \"filename\",\n         \"db_type\",\n         \"device_option\"\n      ],\n      \"prepare_qat\": [\n         \"model\",\n         \"mapping\",\n         \"inplace\"\n      ],\n      \"prepare_script\": [\n         \"model\",\n         \"qconfig_dict\",\n         \"inplace\"\n      ],\n      \"preprocess\": [\n         \"output_directory\",\n         \"all_files\",\n         \"show_detailed\",\n         \"show_progress\",\n         \"hip_clang_launch\",\n         \"is_pytorch_extension\",\n         \"clean_ctx\"\n      ],\n      \"preprocessor\": [\n         \"output_directory\",\n         \"filepath\",\n         \"stats\",\n         \"hip_clang_launch\",\n         \"is_pytorch_extension\",\n         \"clean_ctx\"\n      ],\n      \"pretty_print\": [\n         \"benchresult\",\n         \"colwidth\",\n         \"sep\"\n      ],\n      \"pretty_str\": [\n         \"envinfo\"\n      ],\n      \"prim_ConstantChunk\": [\n         \"g\",\n         \"self\",\n         \"chunks\",\n         \"dim\"\n      ],\n      \"prim_ConstantSplit\": [\n         \"g\",\n         \"self\",\n         \"split_size\",\n         \"dim\"\n      ],\n      \"prim_shape\": [\n         \"g\",\n         \"self\"\n      ],\n      \"primefac\": [\n         \"n\"\n      ],\n      \"print_autograd_prof_summary\": [\n         \"prof\",\n         \"mode\",\n         \"sortby\",\n         \"topk\"\n      ],\n      \"print_box\": [\n         \"msg\"\n      ],\n      \"print_cprofile_summary\": [\n         \"prof\",\n         \"sortby\",\n         \"topk\"\n      ],\n      \"print_header\": [\n         \"colwidth\",\n         \"sep\"\n      ],\n      \"print_job\": [\n         \"text\",\n         \"job\"\n      ],\n      \"print_json_oss_format\": [\n         \"results\"\n      ],\n      \"print_json_pep_format\": [\n         \"results\"\n      ],\n      \"print_net\": [\n         \"text\",\n         \"net\"\n      ],\n      \"print_net_def\": [\n         \"text\",\n         \"net_def\"\n      ],\n      \"print_op\": [\n         \"text\",\n         \"op\"\n      ],\n      \"print_results\": [\n         \"result\"\n      ],\n      \"print_stats\": [\n         \"FunctionalModule_nums\",\n         \"nn_module\"\n      ],\n      \"print_stderr\": [],\n      \"print_step\": [\n         \"text\",\n         \"step\"\n      ],\n      \"print_task\": [\n         \"text\",\n         \"task\"\n      ],\n      \"print_task_group\": [\n         \"text\",\n         \"tg\",\n         \"header\"\n      ],\n      \"print_test_debug_info\": [\n         \"testname\",\n         \"items_dict\"\n      ],\n      \"print_to_stderr\": [\n         \"message\"\n      ],\n      \"print_traces_of_all_threads\": [\n         \"pid\"\n      ],\n      \"probs_to_logits\": [\n         \"probs\",\n         \"is_binary\"\n      ],\n      \"processKernelLaunches\": [\n         \"string\",\n         \"stats\"\n      ],\n      \"process_arg_list\": [\n         \"arg_list\"\n      ],\n      \"process_base_ops\": [\n         \"graph\",\n         \"base_ops\"\n      ],\n      \"process_definition\": [\n         \"defn\",\n         \"declarations_by_signature\",\n         \"declarations_by_schema\"\n      ],\n      \"process_function\": [\n         \"decl\",\n         \"has_tensor_options\",\n         \"disable_autograd\"\n      ],\n      \"process_test_params_for_functional\": [\n         \"test_params_dict\",\n         \"device\",\n         \"test_instance_class\"\n      ],\n      \"process_test_params_for_module\": [\n         \"test_params_dict\",\n         \"device\",\n         \"test_instance_class\"\n      ],\n      \"process_types_and_backends\": [\n         \"option\"\n      ],\n      \"processor_name\": [\n         \"processor\"\n      ],\n      \"prod_single_zero\": [\n         \"dim_size\"\n      ],\n      \"prod_zeros\": [\n         \"dim_size\",\n         \"dim_select\"\n      ],\n      \"prof_callable\": [\n         \"callable\"\n      ],\n      \"prof_func_call\": [],\n      \"prof_meth_call\": [],\n      \"profile\": [],\n      \"progressBar\": [\n         \"percentage\"\n      ],\n      \"propagate_field_names\": [\n         \"output_arguments\",\n         \"return_arguments\"\n      ],\n      \"propagate_qconfig_\": [\n         \"module\",\n         \"qconfig_dict\",\n         \"white_list\"\n      ],\n      \"protos_to_graph_def\": [\n         \"net_defs\",\n         \"shapes\"\n      ],\n      \"pt_repeat\": [\n         \"input_tensor\",\n         \"repeat\"\n      ],\n      \"pt_repeat_n_times\": [\n         \"niters\"\n      ],\n      \"pyfn\": [\n         \"a\",\n         \"b\"\n      ],\n      \"pytest_addoption\": [\n         \"parser\"\n      ],\n      \"pytest_configure\": [\n         \"config\"\n      ],\n      \"python_function\": [],\n      \"python_op_builder\": [],\n      \"pytorch_lstm_creator\": [],\n      \"qform\": [\n         \"A\",\n         \"S\"\n      ],\n      \"qlinear_ref\": [\n         \"X_q\",\n         \"X_scale\",\n         \"X_zp\",\n         \"W_q\",\n         \"W_scale\",\n         \"W_zp\",\n         \"b_q\",\n         \"Y_scale\",\n         \"Y_zp\"\n      ],\n      \"qparams\": [\n         \"draw\",\n         \"dtypes\",\n         \"scale_min\",\n         \"scale_max\",\n         \"zero_point_min\",\n         \"zero_point_max\"\n      ],\n      \"quantize\": [\n         \"model\",\n         \"run_fn\",\n         \"run_args\",\n         \"mapping\",\n         \"inplace\"\n      ],\n      \"quantize_dynamic\": [\n         \"model\",\n         \"qconfig_spec\",\n         \"dtype\",\n         \"mapping\",\n         \"inplace\"\n      ],\n      \"quantize_dynamic_script\": [\n         \"model\",\n         \"qconfig_dict\",\n         \"sample_model_inputs\",\n         \"debug\"\n      ],\n      \"quantize_linear_modules\": [\n         \"module\",\n         \"dtype\"\n      ],\n      \"quantize_per_tensor\": [\n         \"g\",\n         \"input\",\n         \"scale\",\n         \"zero_point\",\n         \"dtype\"\n      ],\n      \"quantize_qat\": [\n         \"model\",\n         \"run_fn\",\n         \"run_args\",\n         \"inplace\"\n      ],\n      \"quantize_rnn_cell_modules\": [\n         \"module\"\n      ],\n      \"quantize_rnn_modules\": [\n         \"module\",\n         \"dtype\"\n      ],\n      \"quantize_script\": [\n         \"model\",\n         \"qconfig_dict\",\n         \"run_fn\",\n         \"run_args\",\n         \"inplace\",\n         \"debug\"\n      ],\n      \"queue_get_exception\": [\n         \"inqueue\",\n         \"outqueue\"\n      ],\n      \"quux\": [\n         \"a\"\n      ],\n      \"raiseIfNotEqual\": [\n         \"a\",\n         \"b\",\n         \"msg\"\n      ],\n      \"raise_from\": [\n         \"value\",\n         \"from_value\"\n      ],\n      \"raise_func\": [],\n      \"raise_or_inc\": [\n         \"value\"\n      ],\n      \"raise_script\": [],\n      \"rand\": [\n         \"g\",\n         \"shapes\",\n         \"dtype\"\n      ],\n      \"randBlob\": [\n         \"name\",\n         \"type\"\n      ],\n      \"randBlobFloat32\": [\n         \"name\"\n      ],\n      \"randBlobsFloat32\": [\n         \"names\"\n      ],\n      \"rand_array\": [],\n      \"rand_like\": [\n         \"g\",\n         \"self\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"randn\": [\n         \"g\",\n         \"shapes\",\n         \"dtype\"\n      ],\n      \"randn_like\": [\n         \"g\",\n         \"self\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ],\n      \"random_fullrank_matrix_distinct_singular_value\": [\n         \"matrix_size\"\n      ],\n      \"random_lowrank_matrix\": [\n         \"rank\",\n         \"rows\",\n         \"columns\"\n      ],\n      \"random_matrix\": [\n         \"rows\",\n         \"columns\"\n      ],\n      \"random_sample_configs\": [],\n      \"random_sparse_matrix\": [\n         \"rows\",\n         \"columns\",\n         \"density\"\n      ],\n      \"random_sparse_pd_matrix\": [\n         \"matrix_size\",\n         \"density\"\n      ],\n      \"random_split\": [\n         \"dataset\",\n         \"lengths\",\n         \"generator\"\n      ],\n      \"random_square_matrix_of_rank\": [\n         \"l\",\n         \"rank\",\n         \"dtype\",\n         \"device\"\n      ],\n      \"random_structured\": [\n         \"module\",\n         \"name\",\n         \"amount\",\n         \"dim\"\n      ],\n      \"random_symmetric_matrix\": [\n         \"l\"\n      ],\n      \"random_symmetric_pd_matrix\": [\n         \"matrix_size\"\n      ],\n      \"random_symmetric_psd_matrix\": [\n         \"l\"\n      ],\n      \"random_unstructured\": [\n         \"module\",\n         \"name\",\n         \"amount\"\n      ],\n      \"range_pop\": [],\n      \"range_push\": [\n         \"msg\"\n      ],\n      \"read\": [\n         \"filename\"\n      ],\n      \"read_db_with_caffe2\": [\n         \"db_file\",\n         \"expected_checksum\"\n      ],\n      \"read_expected_content\": [\n         \"function_ptr\"\n      ],\n      \"rebuild_cuda_tensor\": [\n         \"tensor_cls\",\n         \"tensor_size\",\n         \"tensor_stride\",\n         \"tensor_offset\",\n         \"storage_cls\",\n         \"storage_device\",\n         \"storage_handle\",\n         \"storage_size_bytes\",\n         \"storage_offset_bytes\",\n         \"requires_grad\",\n         \"ref_counter_handle\",\n         \"ref_counter_offset\",\n         \"event_handle\",\n         \"event_sync_required\"\n      ],\n      \"rebuild_event\": [\n         \"device\",\n         \"handle\"\n      ],\n      \"rebuild_storage_empty\": [\n         \"cls\"\n      ],\n      \"rebuild_storage_fd\": [\n         \"cls\",\n         \"df\",\n         \"size\"\n      ],\n      \"rebuild_storage_filename\": [\n         \"cls\",\n         \"manager\",\n         \"handle\",\n         \"size\"\n      ],\n      \"rebuild_tensor\": [\n         \"cls\",\n         \"storage\",\n         \"metadata\"\n      ],\n      \"receive_and_send\": [\n         \"queue\",\n         \"out_queue\",\n         \"event\",\n         \"count\"\n      ],\n      \"receive_and_send_sum\": [\n         \"queue\",\n         \"out_queue\",\n         \"event\",\n         \"tp\",\n         \"count\",\n         \"size\"\n      ],\n      \"reciprocal\": [\n         \"g\",\n         \"self\"\n      ],\n      \"recurrent\": [\n         \"x\",\n         \"scale\",\n         \"shift\"\n      ],\n      \"recurrent_net\": [\n         \"net\",\n         \"cell_net\",\n         \"inputs\",\n         \"initial_cell_inputs\",\n         \"links\",\n         \"timestep\",\n         \"scope\",\n         \"outputs_with_grads\",\n         \"recompute_blobs_on_backward\",\n         \"forward_only\"\n      ],\n      \"recurrent_network_op_remap\": [\n         \"op\",\n         \"prefix\",\n         \"blob_remap\"\n      ],\n      \"recurrent_scaleshift\": [\n         \"x\",\n         \"scale\",\n         \"shift\"\n      ],\n      \"recv\": [\n         \"tensor\",\n         \"src\",\n         \"group\",\n         \"tag\"\n      ],\n      \"redirect_argv\": [\n         \"new_argv\"\n      ],\n      \"reduce\": [\n         \"tensor\",\n         \"dst\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"reduce_add\": [\n         \"inputs\",\n         \"destination\"\n      ],\n      \"reduce_add_coalesced\": [\n         \"inputs\",\n         \"destination\",\n         \"buffer_size\"\n      ],\n      \"reduce_event\": [\n         \"event\"\n      ],\n      \"reduce_multigpu\": [\n         \"tensor_list\",\n         \"dst\",\n         \"op\",\n         \"group\",\n         \"async_op\",\n         \"dst_tensor\"\n      ],\n      \"reduce_scatter\": [\n         \"output\",\n         \"input_list\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"reduce_scatter_multigpu\": [\n         \"output_tensor_list\",\n         \"input_tensor_lists\",\n         \"op\",\n         \"group\",\n         \"async_op\"\n      ],\n      \"reduce_storage\": [\n         \"storage\"\n      ],\n      \"reduce_tensor\": [\n         \"tensor\"\n      ],\n      \"ref_adagrad\": [\n         \"param_in\",\n         \"mom_in\",\n         \"grad\",\n         \"lr\",\n         \"epsilon\",\n         \"using_fp16\",\n         \"output_effective_lr\",\n         \"output_effective_lr_and_update\",\n         \"decay\",\n         \"row_wise\",\n         \"weight_decay\"\n      ],\n      \"ref_gather\": [\n         \"axis\"\n      ],\n      \"ref_gather_axis0\": [],\n      \"ref_gather_match_outer\": [\n         \"axis\"\n      ],\n      \"ref_wngrad\": [\n         \"param_in\",\n         \"seq_b_in\",\n         \"grad\",\n         \"lr\",\n         \"epsilon\",\n         \"output_effective_lr\",\n         \"output_effective_lr_and_update\"\n      ],\n      \"reference_fn\": [\n         \"i\",\n         \"p\",\n         \"m\"\n      ],\n      \"reference_spatialbn_test16\": [\n         \"X\",\n         \"scale\",\n         \"bias\",\n         \"mean\",\n         \"var\",\n         \"epsilon\",\n         \"order\"\n      ],\n      \"reflection_pad\": [\n         \"g\",\n         \"input\",\n         \"padding\"\n      ],\n      \"registerModuleMap\": [\n         \"module_map\"\n      ],\n      \"register_after_fork\": [\n         \"func\"\n      ],\n      \"register_backend\": [\n         \"backend_name\",\n         \"construct_rpc_backend_options_handler\",\n         \"init_backend_handler\"\n      ],\n      \"register_backend_select_methods\": [\n         \"declarations\",\n         \"template_path\",\n         \"file_manager\"\n      ],\n      \"register_benchmark_class\": [\n         \"benchmark_cls\"\n      ],\n      \"register_broadcast_ops\": [],\n      \"register_custom_op_symbolic\": [\n         \"symbolic_name\",\n         \"symbolic_fn\",\n         \"opset_version\"\n      ],\n      \"register_element_ops\": [],\n      \"register_kl\": [\n         \"type_p\",\n         \"type_q\"\n      ],\n      \"register_layer\": [\n         \"name\",\n         \"layer\"\n      ],\n      \"register_op\": [\n         \"opname\",\n         \"op\",\n         \"domain\",\n         \"version\"\n      ],\n      \"register_ops_helper\": [\n         \"domain\",\n         \"version\",\n         \"iter_version\"\n      ],\n      \"register_ops_in_version\": [\n         \"domain\",\n         \"version\"\n      ],\n      \"register_package\": [\n         \"priority\",\n         \"tagger\",\n         \"deserializer\"\n      ],\n      \"register_quantized_ops\": [\n         \"domain\",\n         \"version\"\n      ],\n      \"register_rendezvous_handler\": [\n         \"scheme\",\n         \"handler\"\n      ],\n      \"register_version\": [\n         \"domain\",\n         \"version\"\n      ],\n      \"release_blobs_when_used\": [\n         \"netproto\",\n         \"dont_free_blobs\",\n         \"selector_fun\"\n      ],\n      \"relu\": [\n         \"g\",\n         \"input\"\n      ],\n      \"relu6\": [\n         \"input\",\n         \"inplace\"\n      ],\n      \"remainder\": [\n         \"g\",\n         \"input\",\n         \"other\"\n      ],\n      \"remap_input\": [\n         \"op\",\n         \"blob_name_remapping\"\n      ],\n      \"remap_proto\": [\n         \"argument\",\n         \"blob_remap\"\n      ],\n      \"remote\": [\n         \"to\",\n         \"func\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"remote_add\": [\n         \"t1\",\n         \"t2\",\n         \"dst\"\n      ],\n      \"remote_method\": [\n         \"method\",\n         \"obj_rref\"\n      ],\n      \"remove\": [\n         \"module\",\n         \"name\"\n      ],\n      \"remove_spectral_norm\": [\n         \"module\",\n         \"name\"\n      ],\n      \"remove_unused_args\": [\n         \"args\",\n         \"thnn_args\"\n      ],\n      \"remove_weight_norm\": [\n         \"module\",\n         \"name\"\n      ],\n      \"remove_whitespace\": [\n         \"string\"\n      ],\n      \"render\": [\n         \"s\"\n      ],\n      \"rendezvous\": [\n         \"url\",\n         \"rank\",\n         \"world_size\"\n      ],\n      \"reorder_out_args\": [\n         \"decl\"\n      ],\n      \"repeat\": [\n         \"g\",\n         \"self\",\n         \"repeats\"\n      ],\n      \"repeat_test_for_types\": [\n         \"dtypes\"\n      ],\n      \"replace_ellipsis_by_position\": [\n         \"ellipsis_idx\",\n         \"names\",\n         \"tensor_names\"\n      ],\n      \"replace_extern_shared\": [\n         \"input_string\"\n      ],\n      \"replace_math_functions\": [\n         \"input_string\"\n      ],\n      \"replace_string_literal\": [\n         \"src\",\n         \"lineno\",\n         \"new_string\"\n      ],\n      \"replicate\": [\n         \"network\",\n         \"devices\",\n         \"detach\"\n      ],\n      \"replication_pad\": [\n         \"g\",\n         \"input\",\n         \"padding\"\n      ],\n      \"report\": [],\n      \"report_download_progress\": [\n         \"chunk_number\",\n         \"chunk_size\",\n         \"file_size\"\n      ],\n      \"require_backend\": [\n         \"backends\"\n      ],\n      \"require_backends_available\": [\n         \"backends\"\n      ],\n      \"require_num_gpus\": [\n         \"n\"\n      ],\n      \"require_world_size\": [\n         \"world_size\"\n      ],\n      \"required_attribute_names\": [\n         \"o\"\n      ],\n      \"requires_gloo\": [],\n      \"requires_grad_variable_sharing\": [\n         \"queue\",\n         \"ready\"\n      ],\n      \"requires_mpi\": [],\n      \"requires_nccl\": [],\n      \"requires_nccl_version\": [\n         \"version\",\n         \"msg\"\n      ],\n      \"requires_process_group_agent\": [\n         \"message\"\n      ],\n      \"reset_accumulated_memory_stats\": [\n         \"device\"\n      ],\n      \"reset_max_memory_allocated\": [\n         \"device\"\n      ],\n      \"reset_max_memory_cached\": [\n         \"device\"\n      ],\n      \"reset_peak_memory_stats\": [\n         \"device\"\n      ],\n      \"reshape\": [\n         \"g\",\n         \"self\",\n         \"shape\"\n      ],\n      \"reshape_as\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"reshape_from_tensor_shape\": [\n         \"x\",\n         \"shape\"\n      ],\n      \"resnet_imagenet_create_model\": [\n         \"model\",\n         \"data\",\n         \"labels\",\n         \"split\",\n         \"opts\",\n         \"dataset\"\n      ],\n      \"resolve_ellipsis\": [\n         \"names\",\n         \"tensor_names\",\n         \"fn_name\"\n      ],\n      \"resolve_library_path\": [\n         \"path\"\n      ],\n      \"restore_type_tag\": [\n         \"value\",\n         \"type_str\"\n      ],\n      \"ret_requires_grad\": [],\n      \"retrieve_step_blobs\": [\n         \"net\",\n         \"prefix\"\n      ],\n      \"retry\": [\n         \"ExceptionToCheck\",\n         \"tries\",\n         \"delay\"\n      ],\n      \"retry_on_connect_failures\": [\n         \"func\",\n         \"connect_errors\"\n      ],\n      \"return_rref\": [\n         \"rref_var\"\n      ],\n      \"return_value\": [\n         \"value\"\n      ],\n      \"reverse\": [\n         \"lst\"\n      ],\n      \"rewrite_init_net_simple\": [\n         \"net\"\n      ],\n      \"rewrite_model_helper_simple\": [\n         \"model\"\n      ],\n      \"rewrite_run_net_simple\": [\n         \"net\"\n      ],\n      \"rewrite_run_net_simple_xrayocr_lstm\": [\n         \"net\"\n      ],\n      \"rnn_bidirectional_layer\": [\n         \"model\",\n         \"inputs\",\n         \"input_lengths\",\n         \"input_size\",\n         \"num_units\",\n         \"dropout_keep_prob\",\n         \"forward_only\",\n         \"return_sequence_output\",\n         \"return_final_state\",\n         \"scope\"\n      ],\n      \"rnn_relu_cell\": [\n         \"input\",\n         \"hidden\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"rnn_tanh_cell\": [\n         \"input\",\n         \"hidden\",\n         \"w_ih\",\n         \"w_hh\",\n         \"b_ih\",\n         \"b_hh\"\n      ],\n      \"rnn_unidirectional_layer\": [\n         \"model\",\n         \"inputs\",\n         \"input_lengths\",\n         \"input_size\",\n         \"num_units\",\n         \"dropout_keep_prob\",\n         \"forward_only\",\n         \"return_sequence_output\",\n         \"return_final_state\",\n         \"scope\"\n      ],\n      \"rosenbrock\": [\n         \"tensor\"\n      ],\n      \"round\": [\n         \"g\",\n         \"self\"\n      ],\n      \"rowmux\": [\n         \"select_vec\",\n         \"left\",\n         \"right\"\n      ],\n      \"rpc_async\": [\n         \"to\",\n         \"func\",\n         \"args\",\n         \"kwargs\",\n         \"timeout\"\n      ],\n      \"rpc_async_call_remote_torchscript_in_torchscript\": [\n         \"dst_worker_name\",\n         \"args\",\n         \"kwargs\"\n      ],\n      \"rpc_async_method\": [\n         \"method\",\n         \"obj_rref\"\n      ],\n      \"rpc_return_rref\": [\n         \"dst\"\n      ],\n      \"rpc_sync\": [\n         \"to\",\n         \"func\",\n         \"args\",\n         \"kwargs\",\n         \"timeout\"\n      ],\n      \"rref_forward_chain\": [\n         \"dst\",\n         \"world_size\",\n         \"rref\",\n         \"ttl\"\n      ],\n      \"rref_local_value\": [\n         \"rref\"\n      ],\n      \"rref_python_annotation\": [\n         \"rref_var\"\n      ],\n      \"rref_script_annotation\": [\n         \"rref_var\"\n      ],\n      \"rref_to_here\": [\n         \"rref_var\"\n      ],\n      \"rrelu\": [\n         \"g\",\n         \"input\",\n         \"lower\",\n         \"upper\",\n         \"training\",\n         \"generator\"\n      ],\n      \"rsqrt\": [\n         \"g\",\n         \"self\"\n      ],\n      \"rsub\": [\n         \"g\",\n         \"self\",\n         \"other\",\n         \"alpha\"\n      ],\n      \"run\": [\n         \"command\"\n      ],\n      \"runAndSaveRNG\": [\n         \"self\",\n         \"func\",\n         \"inputs\",\n         \"kwargs\"\n      ],\n      \"runOpBenchmark\": [\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"input_device_options\",\n         \"iterations\"\n      ],\n      \"runOpOnInput\": [\n         \"device_option\",\n         \"op\",\n         \"inputs\",\n         \"input_device_options\"\n      ],\n      \"runShardedTrainLoop\": [\n         \"opts\",\n         \"myTrainFun\"\n      ],\n      \"run_additional_tri_tests\": [\n         \"self\",\n         \"device\"\n      ],\n      \"run_and_parse_first_match\": [\n         \"run_lambda\",\n         \"command\",\n         \"regex\"\n      ],\n      \"run_and_read_all\": [\n         \"run_lambda\",\n         \"command\"\n      ],\n      \"run_autograd_prof\": [\n         \"code\",\n         \"globs\"\n      ],\n      \"run_benchmark\": [\n         \"benchmark\",\n         \"ranks\",\n         \"opts\"\n      ],\n      \"run_clang_tidy\": [\n         \"options\",\n         \"line_filters\",\n         \"files\"\n      ],\n      \"run_conv_or_fc\": [\n         \"test_case\",\n         \"init_net\",\n         \"net\",\n         \"X\",\n         \"W\",\n         \"b\",\n         \"op_type\",\n         \"engine\",\n         \"order\",\n         \"gc\",\n         \"outputs\"\n      ],\n      \"run_cprofile\": [\n         \"code\",\n         \"globs\",\n         \"launch_blocking\"\n      ],\n      \"run_embed_params\": [\n         \"proto\",\n         \"model\",\n         \"input\",\n         \"state_dict\",\n         \"use_gpu\"\n      ],\n      \"run_env_analysis\": [],\n      \"run_forward\": [\n         \"unit_test_class\",\n         \"test_params\"\n      ],\n      \"run_functional_checks\": [\n         \"test_case\",\n         \"test_name\",\n         \"name\",\n         \"apply_fn\",\n         \"run_grad_checks\",\n         \"f_args_variable\",\n         \"f_args_tensor\"\n      ],\n      \"run_generated_test\": [\n         \"model_file\",\n         \"data_dir\",\n         \"device\"\n      ],\n      \"run_grad_and_gradgrad_checks\": [\n         \"test_case\",\n         \"name\",\n         \"test_name\",\n         \"apply_method\",\n         \"output_variable\",\n         \"input_variables\",\n         \"run_gradgradcheck\"\n      ],\n      \"run_in_hip\": [\n         \"gc\",\n         \"dc\"\n      ],\n      \"run_model_test\": [\n         \"self\",\n         \"model\",\n         \"batch_size\",\n         \"state_dict\",\n         \"input\",\n         \"use_gpu\",\n         \"rtol\",\n         \"atol\",\n         \"example_outputs\",\n         \"do_constant_folding\",\n         \"dynamic_axes\",\n         \"test_with_inputs\",\n         \"input_names\",\n         \"output_names\",\n         \"fixed_batch_size\"\n      ],\n      \"run_nested_pickle\": [\n         \"pickle_cls_instance\",\n         \"tensor\"\n      ],\n      \"run_pass\": [\n         \"self\",\n         \"name\",\n         \"trace\"\n      ],\n      \"run_profiler_benchmark\": [],\n      \"run_python_forward_backward\": [\n         \"unit_test_class\",\n         \"test_params\"\n      ],\n      \"run_ref_script_module\": [\n         \"ref_script_module\",\n         \"t\"\n      ],\n      \"run_resnet50_epoch\": [\n         \"train_model\",\n         \"batch_size\",\n         \"epoch_size\",\n         \"skip_first_n_iter\"\n      ],\n      \"run_rnn\": [\n         \"name\",\n         \"rnn_creator\",\n         \"nloops\",\n         \"seqLength\",\n         \"numLayers\",\n         \"inputSize\",\n         \"hiddenSize\",\n         \"miniBatch\",\n         \"device\",\n         \"seed\"\n      ],\n      \"run_seq2seq_beam_decoder\": [\n         \"args\",\n         \"model_params\",\n         \"decoding_params\"\n      ],\n      \"run_seq2seq_model\": [\n         \"args\",\n         \"model_params\"\n      ],\n      \"run_shell_command\": [\n         \"arguments\"\n      ],\n      \"run_shell_commands_in_parallel\": [\n         \"commands\"\n      ],\n      \"run_test\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\"\n      ],\n      \"run_testing_net\": [\n         \"self\"\n      ],\n      \"run_tests\": [\n         \"argv\"\n      ],\n      \"run_training_net\": [\n         \"self\"\n      ],\n      \"run_worker\": [\n         \"coordinator\",\n         \"worker\"\n      ],\n      \"s\": [\n         \"scope\",\n         \"name\"\n      ],\n      \"sample_functional\": [\n         \"x\",\n         \"has_parity\"\n      ],\n      \"sanitize_return\": [\n         \"option\"\n      ],\n      \"save\": [\n         \"obj\",\n         \"f\",\n         \"pickle_module\",\n         \"pickle_protocol\",\n         \"_use_new_zipfile_serialization\"\n      ],\n      \"save_and_load\": [\n         \"sm\"\n      ],\n      \"save_caffe2_net\": [\n         \"net\",\n         \"file\",\n         \"output_txt\"\n      ],\n      \"save_model_params\": [\n         \"is_checkpoint\",\n         \"model\",\n         \"checkpoint_path\",\n         \"epoch\",\n         \"opts\",\n         \"best_metric\"\n      ],\n      \"save_model_params_blob\": [\n         \"model\",\n         \"params_file\",\n         \"epoch\",\n         \"opts\",\n         \"best_metric\"\n      ],\n      \"save_rref\": [\n         \"rref_var\",\n         \"fname\"\n      ],\n      \"save_to_db\": [\n         \"db_type\",\n         \"db_destination\",\n         \"predictor_export_meta\",\n         \"use_ideep\"\n      ],\n      \"saved_variables\": [\n         \"formula\",\n         \"args\"\n      ],\n      \"scalar\": [\n         \"name\",\n         \"scalar\",\n         \"collections\"\n      ],\n      \"scalar_tensor\": [\n         \"g\",\n         \"scalar\",\n         \"dtype\"\n      ],\n      \"scatter\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"src\"\n      ],\n      \"scatter_add\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\",\n         \"src\"\n      ],\n      \"scatter_kwargs\": [\n         \"inputs\",\n         \"kwargs\",\n         \"target_gpus\",\n         \"dim\"\n      ],\n      \"schema_check\": [\n         \"schema\",\n         \"previous\"\n      ],\n      \"scoped_execution_step\": [\n         \"name\"\n      ],\n      \"scoped_name\": [\n         \"blob_name\"\n      ],\n      \"scores_to_probs\": [\n         \"scores\"\n      ],\n      \"script\": [\n         \"obj\",\n         \"optimize\",\n         \"_frames_up\",\n         \"_rcb\"\n      ],\n      \"scriptAndSave\": [\n         \"module\",\n         \"fileName\"\n      ],\n      \"script_add_ones\": [\n         \"x\"\n      ],\n      \"script_check_rref_confirmed\": [\n         \"rref\"\n      ],\n      \"script_fork_wait_throw\": [\n         \"invalue\"\n      ],\n      \"script_fork_wait_udf\": [\n         \"tensor\"\n      ],\n      \"script_lnlstm\": [\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\",\n         \"bias\",\n         \"batch_first\",\n         \"dropout\",\n         \"bidirectional\",\n         \"decompose_layernorm\"\n      ],\n      \"script_lstm\": [\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\",\n         \"bias\",\n         \"batch_first\",\n         \"dropout\",\n         \"bidirectional\"\n      ],\n      \"script_method\": [\n         \"fn\"\n      ],\n      \"script_model_defines_attr\": [\n         \"script_model\",\n         \"attr\"\n      ],\n      \"script_qconfig\": [\n         \"qconfig\"\n      ],\n      \"script_raise_func\": [\n         \"value\"\n      ],\n      \"script_run_forward_rref_my_script_module\": [\n         \"rref\"\n      ],\n      \"script_run_get_value_rref_my_script_class\": [\n         \"rref\"\n      ],\n      \"secs_to_ms\": [\n         \"time_s\"\n      ],\n      \"secs_to_us\": [\n         \"time_s\"\n      ],\n      \"seed\": [],\n      \"seed_all\": [],\n      \"segment_ids\": [\n         \"size\",\n         \"is_sorted\"\n      ],\n      \"segmented_tensor\": [\n         \"min_dim\",\n         \"max_dim\",\n         \"dtype\",\n         \"is_sorted\",\n         \"elements\",\n         \"segment_generator\",\n         \"allow_empty\"\n      ],\n      \"select\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"index\"\n      ],\n      \"select_model_mode_for_export\": [\n         \"model\",\n         \"mode\"\n      ],\n      \"self_as_first_argument\": [\n         \"arguments\"\n      ],\n      \"selu\": [\n         \"g\",\n         \"input\"\n      ],\n      \"send\": [\n         \"tensor\",\n         \"dst\",\n         \"group\",\n         \"tag\"\n      ],\n      \"send_and_delete_tensors\": [\n         \"queue\",\n         \"event\",\n         \"tp\",\n         \"count\",\n         \"size\"\n      ],\n      \"send_tensor\": [\n         \"queue\",\n         \"event\",\n         \"tp\"\n      ],\n      \"serialize\": [\n         \"obj\"\n      ],\n      \"serialize_arg_dict_as_script_module\": [\n         \"arg_dict\"\n      ],\n      \"serialize_protobuf_struct\": [\n         \"protobuf_struct\"\n      ],\n      \"setHooks\": [\n         \"self\"\n      ],\n      \"setThrowIfFpExceptions\": [\n         \"enabled\"\n      ],\n      \"setUp\": [\n         \"self\"\n      ],\n      \"setUpModule\": [],\n      \"set_and_check_done\": [\n         \"value\"\n      ],\n      \"set_cpp_tensors_requires_grad\": [\n         \"cpp_tensor_stmts\",\n         \"python_tensors\"\n      ],\n      \"set_declaration_defaults\": [\n         \"declaration\"\n      ],\n      \"set_default_dtype\": [\n         \"d\"\n      ],\n      \"set_default_tensor_type\": [\n         \"t\"\n      ],\n      \"set_device\": [\n         \"device\"\n      ],\n      \"set_device_states\": [\n         \"devices\",\n         \"states\"\n      ],\n      \"set_dir\": [\n         \"d\"\n      ],\n      \"set_engine_mode\": [\n         \"mode\"\n      ],\n      \"set_faulthander_if_available\": [\n         \"_\"\n      ],\n      \"set_flags\": [\n         \"_enabled\"\n      ],\n      \"set_global_rref\": [\n         \"rref\"\n      ],\n      \"set_lr_injection\": [\n         \"lr_injection_value\"\n      ],\n      \"set_mkl_threads\": [\n         \"num_threads\"\n      ],\n      \"set_mode\": [\n         \"option\"\n      ],\n      \"set_model_info\": [\n         \"meta_net_def\",\n         \"project_str\",\n         \"model_class_str\",\n         \"version\"\n      ],\n      \"set_module\": [\n         \"obj\",\n         \"mod\"\n      ],\n      \"set_omp_threads\": [\n         \"num_threads\"\n      ],\n      \"set_overwrite_module_params_on_conversion\": [\n         \"value\"\n      ],\n      \"set_printoptions\": [\n         \"precision\",\n         \"threshold\",\n         \"edgeitems\",\n         \"linewidth\",\n         \"profile\",\n         \"sci_mode\"\n      ],\n      \"set_python_tensors_requires_grad\": [\n         \"python_tensors\"\n      ],\n      \"set_request_only\": [\n         \"field\"\n      ],\n      \"set_rng_seed\": [\n         \"seed\"\n      ],\n      \"set_rng_state\": [\n         \"new_state\"\n      ],\n      \"set_rng_state_all\": [\n         \"new_states\"\n      ],\n      \"set_rnn_executor_config\": [\n         \"rnn_op\",\n         \"num_threads\",\n         \"max_cuda_streams\"\n      ],\n      \"set_running_script_path\": [],\n      \"set_sharing_strategy\": [\n         \"new_strategy\"\n      ],\n      \"set_value\": [\n         \"value\"\n      ],\n      \"setup\": [],\n      \"setup_rnn_tests\": [],\n      \"shape_as_tensor\": [\n         \"x\"\n      ],\n      \"shape_to_string\": [\n         \"shape\"\n      ],\n      \"share_grad_blobs\": [\n         \"net\",\n         \"losses\",\n         \"param_grads\",\n         \"namescope\",\n         \"dont_share_blobs\",\n         \"share_activations\",\n         \"blob_shapes\"\n      ],\n      \"shell\": [\n         \"command\",\n         \"cwd\",\n         \"env\"\n      ],\n      \"should_drop\": [\n         \"fn\"\n      ],\n      \"should_generate_python_binding\": [\n         \"declaration\"\n      ],\n      \"should_trace\": [\n         \"declaration\"\n      ],\n      \"show\": [],\n      \"shrink_output_schema\": [\n         \"net\",\n         \"out_schema\"\n      ],\n      \"shutdown\": [\n         \"graceful\"\n      ],\n      \"sig_for_ops\": [\n         \"opname\"\n      ],\n      \"sigmoid\": [\n         \"g\",\n         \"self\"\n      ],\n      \"sigmoid_cross_entropy_with_logits\": [\n         \"x\",\n         \"z\"\n      ],\n      \"sigmoid_cross_entropy_with_logits_grad\": [\n         \"x\",\n         \"z\"\n      ],\n      \"sigmoid_cross_entropy_with_logits_with_log_D_trick\": [\n         \"x\",\n         \"z\"\n      ],\n      \"sigmoid_cross_entropy_with_logits_with_log_D_trick_grad\": [\n         \"x\",\n         \"z\"\n      ],\n      \"sign\": [\n         \"g\",\n         \"self\"\n      ],\n      \"signalHandler\": [\n         \"signal\",\n         \"frame\"\n      ],\n      \"signature_without_args\": [\n         \"decl\"\n      ],\n      \"simple_autograd_function\": [\n         \"a\"\n      ],\n      \"simple_backward\": [\n         \"output\",\n         \"grad_output\"\n      ],\n      \"simple_backward_setup\": [\n         \"output\",\n         \"seed\"\n      ],\n      \"simple_cnn\": [],\n      \"simple_coalesced_reduce_tests\": [\n         \"rank\",\n         \"world_size\"\n      ],\n      \"simple_fc\": [],\n      \"simple_fill\": [\n         \"queue\",\n         \"event\"\n      ],\n      \"simple_mlp\": [],\n      \"simple_multi_input_reduce_tests\": [\n         \"rank\",\n         \"world_size\"\n      ],\n      \"simple_pool_fill\": [\n         \"tensor\"\n      ],\n      \"simple_reduce_tests\": [\n         \"rank\",\n         \"world_size\"\n      ],\n      \"simple_relu\": [],\n      \"simple_resnet\": [],\n      \"simple_sparse_reduce_tests\": [\n         \"rank\",\n         \"world_size\",\n         \"num_inputs\"\n      ],\n      \"sin\": [\n         \"g\",\n         \"self\"\n      ],\n      \"single_ellipsis_index\": [\n         \"names\",\n         \"fn_name\"\n      ],\n      \"site_config_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"multipath\"\n      ],\n      \"site_data_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"multipath\"\n      ],\n      \"size\": [\n         \"g\",\n         \"self\",\n         \"dim\"\n      ],\n      \"skipCPUIfNoLapack\": [\n         \"fn\"\n      ],\n      \"skipCPUIfNoMkl\": [\n         \"fn\"\n      ],\n      \"skipCUDAIfCudnnVersionLessThan\": [\n         \"version\"\n      ],\n      \"skipCUDAIfNoCudnn\": [\n         \"fn\"\n      ],\n      \"skipCUDAIfNoMagma\": [\n         \"fn\"\n      ],\n      \"skipCUDAIfNotRocm\": [\n         \"fn\"\n      ],\n      \"skipCUDAIfRocm\": [\n         \"fn\"\n      ],\n      \"skipCUDAMemoryLeakCheckIf\": [\n         \"condition\"\n      ],\n      \"skipCUDANonDefaultStreamIf\": [\n         \"condition\"\n      ],\n      \"skipIfCompiledWithoutNumpy\": [\n         \"fn\"\n      ],\n      \"skipIfEmbed\": [\n         \"func\"\n      ],\n      \"skipIfNoFBGEMM\": [\n         \"fn\"\n      ],\n      \"skipIfNoLapack\": [\n         \"fn\"\n      ],\n      \"skipIfNotRegistered\": [\n         \"op_name\",\n         \"message\"\n      ],\n      \"skipIfRocm\": [\n         \"fn\"\n      ],\n      \"skipIfUnsupportedMinOpsetVersion\": [\n         \"min_opset_version\"\n      ],\n      \"skipIfUnsupportedOpsetVersion\": [\n         \"unsupported_opset_versions\"\n      ],\n      \"skip_for_known_issues\": [\n         \"func\"\n      ],\n      \"skip_if_lt_x_gpu\": [\n         \"x\"\n      ],\n      \"skip_if_no_cuda_distributed\": [\n         \"func\"\n      ],\n      \"skip_if_no_gpu\": [\n         \"func\"\n      ],\n      \"skip_if_no_ninja\": [\n         \"func\"\n      ],\n      \"skip_if_not_multigpu\": [\n         \"func\"\n      ],\n      \"skip_if_rocm\": [\n         \"func\"\n      ],\n      \"skip_if_small_worldsize\": [\n         \"func\"\n      ],\n      \"sleep\": [\n         \"t\"\n      ],\n      \"slice\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"start\",\n         \"end\",\n         \"step\"\n      ],\n      \"slowTest\": [\n         \"fn\"\n      ],\n      \"smooth_l1_loss\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"smoothl1loss_no_reduce_scalar_test\": [],\n      \"smoothl1loss_no_reduce_test\": [],\n      \"smoothl1loss_reference\": [\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"soft_margin_loss\": [\n         \"input\",\n         \"target\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"softmarginloss_no_reduce_test\": [],\n      \"softmarginloss_reference\": [\n         \"input\",\n         \"target\",\n         \"reduction\"\n      ],\n      \"softmax\": [\n         \"g\",\n         \"input\",\n         \"dim\",\n         \"dtype\"\n      ],\n      \"softmin\": [\n         \"input\",\n         \"dim\",\n         \"_stacklevel\",\n         \"dtype\"\n      ],\n      \"softplus\": [\n         \"g\",\n         \"self\",\n         \"beta\",\n         \"threshold\"\n      ],\n      \"softsign\": [\n         \"input\"\n      ],\n      \"sort\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"decending\",\n         \"out\"\n      ],\n      \"sort_by_number_of_args\": [\n         \"declaration\",\n         \"reverse\"\n      ],\n      \"sort_declarations\": [\n         \"grouped_decls\"\n      ],\n      \"sparse_\": [\n         \"tensor\",\n         \"sparsity\",\n         \"std\"\n      ],\n      \"sparse_lengths_tensor\": [],\n      \"sparse_lengths_weighted_sum_grad_ref\": [\n         \"GO\",\n         \"fwd_out\",\n         \"fwd_in\",\n         \"grad_on_weights\"\n      ],\n      \"sparse_lengths_weighted_sum_ref\": [\n         \"D\",\n         \"W\",\n         \"I\",\n         \"L\"\n      ],\n      \"sparse_segmented_tensor\": [\n         \"min_dim\",\n         \"max_dim\",\n         \"dtype\",\n         \"is_sorted\",\n         \"elements\",\n         \"allow_empty\",\n         \"segment_generator\",\n         \"itype\"\n      ],\n      \"spatial_bn\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"init_scale\",\n         \"init_bias\",\n         \"ScaleInitializer\",\n         \"BiasInitializer\",\n         \"RunningMeanInitializer\",\n         \"RunningVarianceInitializer\",\n         \"order\"\n      ],\n      \"spatial_gn\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\",\n         \"dim_in\",\n         \"init_scale\",\n         \"init_bias\",\n         \"ScaleInitializer\",\n         \"BiasInitializer\",\n         \"RunningMeanInitializer\",\n         \"RunningVarianceInitializer\",\n         \"order\"\n      ],\n      \"spawn\": [\n         \"fn\",\n         \"args\",\n         \"nprocs\",\n         \"join\",\n         \"daemon\",\n         \"start_method\"\n      ],\n      \"spectral_norm\": [\n         \"module\",\n         \"name\",\n         \"n_power_iterations\",\n         \"eps\",\n         \"dim\"\n      ],\n      \"split\": [\n         \"g\",\n         \"self\",\n         \"split_size_or_sizes\",\n         \"dim\"\n      ],\n      \"split_name_params\": [\n         \"prototype\"\n      ],\n      \"split_negative_from_positive_patterns\": [\n         \"patterns\"\n      ],\n      \"split_type_line\": [\n         \"type_line\"\n      ],\n      \"split_with_sizes\": [\n         \"g\",\n         \"self\",\n         \"split_sizes\",\n         \"dim\"\n      ],\n      \"sqrt\": [\n         \"g\",\n         \"self\"\n      ],\n      \"squeeze\": [\n         \"g\",\n         \"self\",\n         \"dim\"\n      ],\n      \"stack\": [\n         \"g\",\n         \"tensor_list\",\n         \"dim\"\n      ],\n      \"stack_weights\": [\n         \"weights\"\n      ],\n      \"start\": [],\n      \"start_processes\": [\n         \"fn\",\n         \"args\",\n         \"nprocs\",\n         \"join\",\n         \"daemon\",\n         \"start_method\"\n      ],\n      \"std\": [\n         \"g\",\n         \"input\"\n      ],\n      \"stft\": [\n         \"input\",\n         \"n_fft\",\n         \"hop_length\",\n         \"win_length\",\n         \"window\",\n         \"center\",\n         \"pad_mode\",\n         \"normalized\",\n         \"onesided\"\n      ],\n      \"stop\": [],\n      \"storage_from_cache\": [\n         \"cls\",\n         \"key\"\n      ],\n      \"storage_to_tensor_type\": [\n         \"storage\"\n      ],\n      \"str2bool\": [\n         \"v\"\n      ],\n      \"str_compare\": [\n         \"a\",\n         \"b\",\n         \"encoding\"\n      ],\n      \"stream\": [\n         \"stream\"\n      ],\n      \"stripBlobName\": [\n         \"param\"\n      ],\n      \"strip_profiling_nodes\": [\n         \"nodes\"\n      ],\n      \"sub\": [\n         \"g\",\n         \"self\",\n         \"other\",\n         \"alpha\"\n      ],\n      \"sub_bar\": [\n         \"mat\"\n      ],\n      \"sub_diagonal_bar\": [\n         \"mat\"\n      ],\n      \"sub_diagonal_div\": [\n         \"input\",\n         \"other\",\n         \"out\"\n      ],\n      \"sub_diagonal_foo\": [\n         \"a\",\n         \"b\",\n         \"c\"\n      ],\n      \"sub_diagonal_mean\": [\n         \"mat\"\n      ],\n      \"sub_diagonal_mm\": [\n         \"mat1\",\n         \"mat2\"\n      ],\n      \"sub_div\": [\n         \"input\",\n         \"other\",\n         \"out\"\n      ],\n      \"sub_mean\": [\n         \"mat\"\n      ],\n      \"sub_mm\": [\n         \"mat1\",\n         \"mat2\"\n      ],\n      \"sum\": [\n         \"input\",\n         \"dim\",\n         \"dtype\"\n      ],\n      \"sum_grad\": [\n         \"grad_out\",\n         \"outputs\",\n         \"inputs\"\n      ],\n      \"sum_of_state_dict\": [\n         \"state_dict\"\n      ],\n      \"sum_tensors\": [\n         \"inq\",\n         \"outq\"\n      ],\n      \"supports\": [\n         \"o\",\n         \"factory_methods\"\n      ],\n      \"suppress_warnings\": [\n         \"fn\"\n      ],\n      \"svd_lowrank\": [\n         \"A\",\n         \"q\",\n         \"niter\",\n         \"M\"\n      ],\n      \"swap_concat_relu\": [\n         \"net\",\n         \"ignore_op_with_output\"\n      ],\n      \"swap_first_concat_relu\": [\n         \"net\",\n         \"ignore_op_with_output\"\n      ],\n      \"swap_module\": [\n         \"mod\",\n         \"mapping\"\n      ],\n      \"sweep\": [\n         \"benchmark\"\n      ],\n      \"symeig\": [\n         \"A\",\n         \"largest\",\n         \"eigenvectors\"\n      ],\n      \"synchronize\": [\n         \"device\"\n      ],\n      \"system\": [\n         \"command\"\n      ],\n      \"t\": [\n         \"g\",\n         \"self\"\n      ],\n      \"take\": [\n         \"g\",\n         \"self\",\n         \"index\"\n      ],\n      \"tan\": [\n         \"g\",\n         \"self\"\n      ],\n      \"tanh\": [\n         \"g\",\n         \"self\"\n      ],\n      \"tanhshrink\": [\n         \"input\"\n      ],\n      \"tearDown\": [\n         \"self\"\n      ],\n      \"temp_workspace\": [\n         \"name\"\n      ],\n      \"tensor\": [\n         \"draw\",\n         \"shapes\",\n         \"elements\",\n         \"qparams\"\n      ],\n      \"tensor1d\": [\n         \"min_len\",\n         \"max_len\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"tensor_N\": [\n         \"shape\",\n         \"dtype\"\n      ],\n      \"tensor_conv\": [\n         \"draw\",\n         \"spatial_dim\",\n         \"batch_size_range\",\n         \"input_channels_per_group_range\",\n         \"output_channels_per_group_range\",\n         \"feature_map_range\",\n         \"kernel_range\",\n         \"max_groups\",\n         \"elements\",\n         \"qparams\"\n      ],\n      \"tensor_shape_proto\": [\n         \"outputsize\"\n      ],\n      \"tensorboard_events\": [\n         \"c2_dir\",\n         \"tf_dir\"\n      ],\n      \"tensorboard_graphs\": [\n         \"c2_netdef\",\n         \"tf_dir\"\n      ],\n      \"tensordot\": [\n         \"a\",\n         \"b\",\n         \"dims\"\n      ],\n      \"tensors\": [\n         \"n\",\n         \"min_dim\",\n         \"max_dim\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"tensors1d\": [\n         \"n\",\n         \"min_len\",\n         \"max_len\",\n         \"dtype\",\n         \"elements\"\n      ],\n      \"tensortype_to_ndarray\": [\n         \"tensor_type\"\n      ],\n      \"testWithArgs\": [],\n      \"test_accumulate_grad\": [\n         \"self\"\n      ],\n      \"test_accumulate_grad_tensor_reference\": [\n         \"self\"\n      ],\n      \"test_add_out\": [\n         \"self\"\n      ],\n      \"test_addmm_grad\": [\n         \"self\"\n      ],\n      \"test_annot_ast_mypy_fn\": [\n         \"self\"\n      ],\n      \"test_annot_ast_mypy_method\": [\n         \"self\"\n      ],\n      \"test_annot_ast_py3_fn\": [\n         \"self\"\n      ],\n      \"test_annot_ast_py3_method\": [\n         \"self\"\n      ],\n      \"test_annot_string_mypy_fn\": [\n         \"self\"\n      ],\n      \"test_annot_string_mypy_method\": [\n         \"self\"\n      ],\n      \"test_annot_string_py3_fn\": [\n         \"self\"\n      ],\n      \"test_annot_string_py3_method\": [\n         \"self\"\n      ],\n      \"test_annotated_script_fn\": [\n         \"self\"\n      ],\n      \"test_annotated_script_fn_arg_mismatch\": [\n         \"self\"\n      ],\n      \"test_annotated_script_fn_return_mismatch\": [\n         \"self\"\n      ],\n      \"test_annotated_script_method\": [\n         \"self\"\n      ],\n      \"test_anomaly_detect_nan\": [\n         \"self\"\n      ],\n      \"test_as_strided\": [\n         \"self\"\n      ],\n      \"test_assertions\": [\n         \"self\"\n      ],\n      \"test_async_dist_autograd\": [\n         \"self\"\n      ],\n      \"test_aten_fallback\": [\n         \"self\"\n      ],\n      \"test_attr_module_constants\": [\n         \"self\"\n      ],\n      \"test_attribute_deletion\": [\n         \"self\"\n      ],\n      \"test_attribute_serialization\": [\n         \"self\"\n      ],\n      \"test_attribute_unpickling\": [\n         \"self\"\n      ],\n      \"test_augmented_assign\": [\n         \"self\"\n      ],\n      \"test_autograd_complex_views_python\": [\n         \"self\"\n      ],\n      \"test_autograd_inplace_views_python\": [\n         \"self\"\n      ],\n      \"test_autograd_simple_views_python\": [\n         \"self\"\n      ],\n      \"test_autograd_views_codegen\": [\n         \"self\"\n      ],\n      \"test_backend_cudnn_enabled\": [\n         \"self\"\n      ],\n      \"test_backward\": [\n         \"self\"\n      ],\n      \"test_backward_accumulate_grads\": [\n         \"self\"\n      ],\n      \"test_backward_badcalls\": [\n         \"self\"\n      ],\n      \"test_backward_copy\": [\n         \"self\"\n      ],\n      \"test_backward_no_grad\": [\n         \"self\"\n      ],\n      \"test_backward_twice_retained_graph_with_saved_values\": [\n         \"self\"\n      ],\n      \"test_backward_twice_retained_graph_without_saved_values\": [\n         \"self\"\n      ],\n      \"test_backward_twice_with_saved_values\": [\n         \"self\"\n      ],\n      \"test_backward_twice_without_saved_values\": [\n         \"self\"\n      ],\n      \"test_backward_verify_hooks\": [\n         \"self\"\n      ],\n      \"test_bad_multiline_annotations\": [\n         \"self\"\n      ],\n      \"test_block_diag\": [\n         \"self\"\n      ],\n      \"test_bool_dispatch\": [\n         \"self\"\n      ],\n      \"test_broadcast_tensors\": [\n         \"self\"\n      ],\n      \"test_builtin_args\": [\n         \"self\"\n      ],\n      \"test_builtin_args_fails\": [\n         \"self\"\n      ],\n      \"test_builtin_error_messsage\": [\n         \"self\"\n      ],\n      \"test_builtin_use_as_value\": [\n         \"self\"\n      ],\n      \"test_call_ge\": [\n         \"self\"\n      ],\n      \"test_call_python_fn_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_python_fn_from_script_module\": [\n         \"self\"\n      ],\n      \"test_call_python_fn_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_python_fn_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_python_mod_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_python_mod_from_script_module\": [\n         \"self\"\n      ],\n      \"test_call_python_mod_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_python_mod_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_script_fn_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_script_fn_from_script_module\": [\n         \"self\"\n      ],\n      \"test_call_script_fn_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_script_fn_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_script_mod_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_script_mod_from_script_module\": [\n         \"self\"\n      ],\n      \"test_call_script_mod_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_script_module_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_traced_fn_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_traced_fn_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_traced_fn_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_traced_mod_from_script_fn\": [\n         \"self\"\n      ],\n      \"test_call_traced_mod_from_tracing_fn\": [\n         \"self\"\n      ],\n      \"test_call_traced_module_from_traced_module\": [\n         \"self\"\n      ],\n      \"test_call_tracing_fn_from_script_module\": [\n         \"self\"\n      ],\n      \"test_call_tracing_mod_from_script_module\": [\n         \"self\"\n      ],\n      \"test_cat\": [\n         \"self\"\n      ],\n      \"test_cat_empty\": [\n         \"self\"\n      ],\n      \"test_cat_empty_legacy\": [\n         \"self\"\n      ],\n      \"test_cat_negdim_1\": [\n         \"self\"\n      ],\n      \"test_cat_negdim_2\": [\n         \"self\"\n      ],\n      \"test_chain_matmul\": [\n         \"self\"\n      ],\n      \"test_checkpointing\": [\n         \"self\"\n      ],\n      \"test_cholesky\": [\n         \"self\"\n      ],\n      \"test_cholesky_inverse\": [\n         \"self\"\n      ],\n      \"test_cholesky_solve\": [\n         \"self\"\n      ],\n      \"test_chr\": [\n         \"self\"\n      ],\n      \"test_clean_context_during_backward\": [\n         \"self\"\n      ],\n      \"test_compile_module_with_constant\": [\n         \"self\"\n      ],\n      \"test_compressed_zipfile\": [\n         \"self\"\n      ],\n      \"test_constant_as_attr\": [\n         \"self\"\n      ],\n      \"test_conv_error\": [\n         \"self\"\n      ],\n      \"test_convert_base\": [\n         \"self\"\n      ],\n      \"test_cpp_extensions_aot_ninja\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\"\n      ],\n      \"test_cpp_extensions_aot_no_ninja\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\"\n      ],\n      \"test_cpp_function_tensor_str\": [\n         \"self\"\n      ],\n      \"test_cuda_primary_ctx\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\"\n      ],\n      \"test_custom_autograd_no_early_free\": [\n         \"self\"\n      ],\n      \"test_custom_autograd_repeated_grad_grad\": [\n         \"self\"\n      ],\n      \"test_custom_function_error\": [\n         \"self\"\n      ],\n      \"test_custom_function_exception\": [\n         \"self\"\n      ],\n      \"test_custom_function_local_inplace\": [\n         \"self\"\n      ],\n      \"test_custom_function_return_view_in_nograd\": [\n         \"self\"\n      ],\n      \"test_debug_info\": [\n         \"self\"\n      ],\n      \"test_deep_reentrant\": [\n         \"self\"\n      ],\n      \"test_dep_nograd\": [\n         \"self\"\n      ],\n      \"test_dependent_backward\": [\n         \"self\"\n      ],\n      \"test_detach\": [\n         \"self\"\n      ],\n      \"test_detach_base\": [\n         \"self\"\n      ],\n      \"test_diagonal_derivative_requires_grad\": [\n         \"self\"\n      ],\n      \"test_dict_in_not_in\": [\n         \"self\"\n      ],\n      \"test_dict_types\": [\n         \"self\"\n      ],\n      \"test_dir\": [\n         \"self\"\n      ],\n      \"test_directory\": [\n         \"self\"\n      ],\n      \"test_distributed\": [\n         \"executable\",\n         \"test_module\",\n         \"test_directory\",\n         \"options\"\n      ],\n      \"test_dtype_attr\": [\n         \"self\"\n      ],\n      \"test_duplicate_backward_root\": [\n         \"self\"\n      ],\n      \"test_early_return_closure\": [\n         \"self\"\n      ],\n      \"test_early_return_fork_join\": [\n         \"self\"\n      ],\n      \"test_early_return_type_refinement\": [\n         \"self\"\n      ],\n      \"test_early_returns_loops\": [\n         \"self\"\n      ],\n      \"test_eig\": [\n         \"self\"\n      ],\n      \"test_eig_complex_eigenvalues\": [\n         \"self\"\n      ],\n      \"test_eig_no_eigenvectors\": [\n         \"self\"\n      ],\n      \"test_ellipsis_end\": [\n         \"self\"\n      ],\n      \"test_ellipsis_mid\": [\n         \"self\"\n      ],\n      \"test_ellipsis_mid_select\": [\n         \"self\"\n      ],\n      \"test_ellipsis_start\": [\n         \"self\"\n      ],\n      \"test_embedding_bag_with_no_grad_tensors\": [\n         \"self\"\n      ],\n      \"test_embedding_renorm_grad_error\": [\n         \"self\"\n      ],\n      \"test_enumerate_modlist_range\": [\n         \"self\"\n      ],\n      \"test_equality\": [\n         \"f\",\n         \"cmp_key\"\n      ],\n      \"test_erase_class_tensor_shapes\": [\n         \"self\"\n      ],\n      \"test_erase_number_types\": [\n         \"self\"\n      ],\n      \"test_exception_all_func\": [\n         \"i\"\n      ],\n      \"test_exception_exits_closure\": [\n         \"self\"\n      ],\n      \"test_exception_single_func\": [\n         \"i\",\n         \"arg\"\n      ],\n      \"test_exceptions\": [\n         \"self\"\n      ],\n      \"test_exceptions_with_control_flow\": [\n         \"self\"\n      ],\n      \"test_export_dynamic_slice\": [\n         \"self\"\n      ],\n      \"test_fft_ifft_rfft_irfft\": [\n         \"self\"\n      ],\n      \"test_file_format_serialization\": [\n         \"self\"\n      ],\n      \"test_fill\": [\n         \"self\"\n      ],\n      \"test_floordiv\": [\n         \"self\"\n      ],\n      \"test_for_in_dict\": [\n         \"self\"\n      ],\n      \"test_for_in_enumerate\": [\n         \"self\"\n      ],\n      \"test_for_in_range\": [\n         \"self\"\n      ],\n      \"test_for_in_range_ast\": [\n         \"self\"\n      ],\n      \"test_for_in_range_dynamic\": [\n         \"self\"\n      ],\n      \"test_for_in_range_if_ast\": [\n         \"self\"\n      ],\n      \"test_for_in_range_start_end\": [\n         \"self\"\n      ],\n      \"test_for_in_range_start_end_step\": [\n         \"self\"\n      ],\n      \"test_for_in_range_zero_step\": [\n         \"self\"\n      ],\n      \"test_for_in_string\": [\n         \"self\"\n      ],\n      \"test_for_in_tensors\": [\n         \"self\"\n      ],\n      \"test_for_in_tensors_fail_scalar\": [\n         \"self\"\n      ],\n      \"test_for_in_tensors_nested\": [\n         \"self\"\n      ],\n      \"test_for_in_tensors_rank0\": [\n         \"self\"\n      ],\n      \"test_for_in_zip\": [\n         \"self\"\n      ],\n      \"test_for_in_zip_enumerate\": [\n         \"self\"\n      ],\n      \"test_for_tuple_assign\": [\n         \"self\"\n      ],\n      \"test_for_tuple_unpack\": [\n         \"self\"\n      ],\n      \"test_forward\": [\n         \"unit_test_class\",\n         \"test_params\"\n      ],\n      \"test_forward_backward\": [\n         \"unit_test_class\",\n         \"test_params\"\n      ],\n      \"test_forward_only\": [\n         \"create_model\",\n         \"last_out_blob\",\n         \"data_blob\",\n         \"num_labels\"\n      ],\n      \"test_forward_only_fast_simplenet\": [\n         \"create_model\",\n         \"last_out_blob\",\n         \"data_blob\",\n         \"num_labels\"\n      ],\n      \"test_free_deep_graph\": [\n         \"self\"\n      ],\n      \"test_free_deep_graph_complicated\": [\n         \"self\"\n      ],\n      \"test_free_deep_graph_pyfunction\": [\n         \"self\"\n      ],\n      \"test_function_overloading_isinstance\": [\n         \"self\"\n      ],\n      \"test_function_overloads\": [\n         \"self\"\n      ],\n      \"test_gather_dynamic_index\": [\n         \"self\"\n      ],\n      \"test_gc_in_destructor\": [\n         \"self\"\n      ],\n      \"test_get_set_state\": [\n         \"self\"\n      ],\n      \"test_get_set_state_with_tensors\": [\n         \"self\"\n      ],\n      \"test_grad\": [\n         \"self\"\n      ],\n      \"test_grad_badcalls\": [\n         \"self\"\n      ],\n      \"test_grad_copy_sparse_indices_extra_ref\": [\n         \"self\"\n      ],\n      \"test_grad_fn_badcalls\": [\n         \"self\"\n      ],\n      \"test_grad_mode_restored_reentrant\": [\n         \"self\"\n      ],\n      \"test_grad_nonleaf\": [\n         \"self\"\n      ],\n      \"test_grad_nonleaf_many_outputs\": [\n         \"self\"\n      ],\n      \"test_grad_nonleaf_register_hook\": [\n         \"self\"\n      ],\n      \"test_grad_unreachable\": [\n         \"self\"\n      ],\n      \"test_gradcheck_fail_when_no_differentiable_outputs_and_num_grad_not_zero\": [\n         \"self\"\n      ],\n      \"test_gradcheck_nondeterministic\": [\n         \"self\"\n      ],\n      \"test_gradcheck_single_input\": [\n         \"self\"\n      ],\n      \"test_gradcheck_sparse_input\": [\n         \"self\"\n      ],\n      \"test_hash\": [\n         \"self\"\n      ],\n      \"test_hessian_vector\": [\n         \"self\"\n      ],\n      \"test_hook_none\": [\n         \"self\"\n      ],\n      \"test_hook_with_no_name\": [\n         \"self\"\n      ],\n      \"test_hooks\": [\n         \"self\"\n      ],\n      \"test_hooks_cpp\": [\n         \"self\"\n      ],\n      \"test_id\": [\n         \"self\"\n      ],\n      \"test_if_define\": [\n         \"self\"\n      ],\n      \"test_if_different_type\": [\n         \"self\"\n      ],\n      \"test_if_list_cat\": [\n         \"self\"\n      ],\n      \"test_if_not_defined_error\": [\n         \"self\"\n      ],\n      \"test_if_supertype\": [\n         \"self\"\n      ],\n      \"test_if_tuple_sizes\": [\n         \"self\"\n      ],\n      \"test_ignore_decorator\": [\n         \"self\"\n      ],\n      \"test_ignored_as_value\": [\n         \"self\"\n      ],\n      \"test_impact_of_file\": [\n         \"filename\"\n      ],\n      \"test_import_constants_not_specialized\": [\n         \"self\"\n      ],\n      \"test_in_for_and_comp_expr\": [\n         \"self\"\n      ],\n      \"test_index_backward_does_not_save_tensor\": [\n         \"self\"\n      ],\n      \"test_index_put_trace_with_view\": [\n         \"self\"\n      ],\n      \"test_index_put_trace_without_view\": [\n         \"self\"\n      ],\n      \"test_index_select_shape_prop\": [\n         \"self\"\n      ],\n      \"test_indexing\": [\n         \"self\"\n      ],\n      \"test_indexing_duplicates\": [\n         \"self\"\n      ],\n      \"test_indexing_error\": [\n         \"self\"\n      ],\n      \"test_infer_size\": [\n         \"self\"\n      ],\n      \"test_inferred_error_msg\": [\n         \"self\"\n      ],\n      \"test_inline_and_run_annotated_script_fn\": [\n         \"self\"\n      ],\n      \"test_inlining_cleanup\": [\n         \"self\"\n      ],\n      \"test_inplace\": [\n         \"self\"\n      ],\n      \"test_inplace_add\": [\n         \"self\"\n      ],\n      \"test_inplace_copy_script\": [\n         \"self\"\n      ],\n      \"test_inplace_view_backward\": [\n         \"self\"\n      ],\n      \"test_inplace_view_saved_output\": [\n         \"self\"\n      ],\n      \"test_inplace_view_weak_grad_fn\": [\n         \"self\"\n      ],\n      \"test_inplace_warn\": [\n         \"self\"\n      ],\n      \"test_interpolate_trace\": [\n         \"self\"\n      ],\n      \"test_intlist_args\": [\n         \"self\"\n      ],\n      \"test_invalid_call_arguments\": [\n         \"self\"\n      ],\n      \"test_invalid_gradients\": [\n         \"self\"\n      ],\n      \"test_invalid_lhs_assignment\": [\n         \"self\"\n      ],\n      \"test_is_scripting\": [\n         \"self\"\n      ],\n      \"test_is_scripting_metacompile\": [\n         \"self\"\n      ],\n      \"test_isinstance_dynamic\": [\n         \"self\"\n      ],\n      \"test_isinstance_metacompile\": [\n         \"self\"\n      ],\n      \"test_isolated_node\": [\n         \"self\"\n      ],\n      \"test_kwarg_expansion_error\": [\n         \"self\"\n      ],\n      \"test_kwargs_error_msg\": [\n         \"self\"\n      ],\n      \"test_leaf_assignment\": [\n         \"self\"\n      ],\n      \"test_lerp_tensor_weights\": [\n         \"self\"\n      ],\n      \"test_lhs_advanced_indexing_assignment\": [\n         \"self\"\n      ],\n      \"test_lhs_advanced_indexing_augmented_assignment\": [\n         \"self\"\n      ],\n      \"test_lhs_index_fails\": [\n         \"self\"\n      ],\n      \"test_lhs_index_trivial\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing_increment\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing_increment_list\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing_increment_list_prim\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing_list\": [\n         \"self\"\n      ],\n      \"test_lhs_indexing_multi\": [\n         \"self\"\n      ],\n      \"test_list_comprehension_modulelist\": [\n         \"self\"\n      ],\n      \"test_list_comprehension_variable_write\": [\n         \"self\"\n      ],\n      \"test_list_iterables\": [\n         \"self\"\n      ],\n      \"test_list_python_op\": [\n         \"self\"\n      ],\n      \"test_list_unify\": [\n         \"self\"\n      ],\n      \"test_listconstruct_erasure\": [\n         \"self\"\n      ],\n      \"test_loop_unroll_negative\": [\n         \"self\"\n      ],\n      \"test_loop_unroll_unused_counter\": [\n         \"self\"\n      ],\n      \"test_loop_unrolling\": [\n         \"self\"\n      ],\n      \"test_loop_unrolling_const\": [\n         \"self\"\n      ],\n      \"test_loop_unrolling_nested\": [\n         \"self\"\n      ],\n      \"test_lower_nested_tuples\": [\n         \"self\"\n      ],\n      \"test_mark_non_differentiable\": [\n         \"self\"\n      ],\n      \"test_mark_non_differentiable_mixed\": [\n         \"self\"\n      ],\n      \"test_mark_non_differentiable_none\": [\n         \"self\"\n      ],\n      \"test_method_casts_script\": [\n         \"self\"\n      ],\n      \"test_method_no_self\": [\n         \"self\"\n      ],\n      \"test_method_overloading\": [\n         \"self\"\n      ],\n      \"test_missing_getstate\": [\n         \"self\"\n      ],\n      \"test_mixed_requires_grad\": [\n         \"self\"\n      ],\n      \"test_mm_batching\": [\n         \"self\"\n      ],\n      \"test_module_attrs\": [\n         \"self\"\n      ],\n      \"test_module_copying\": [\n         \"self\"\n      ],\n      \"test_module_error\": [\n         \"self\"\n      ],\n      \"test_module_none_attrs\": [\n         \"self\"\n      ],\n      \"test_module_parameters_and_buffers\": [\n         \"self\"\n      ],\n      \"test_module_with_params_called_fails\": [\n         \"self\"\n      ],\n      \"test_mul_out\": [\n         \"self\"\n      ],\n      \"test_mul_out_result_requires_grad\": [\n         \"self\"\n      ],\n      \"test_multi_backward\": [\n         \"self\"\n      ],\n      \"test_multi_backward_no_grad\": [\n         \"self\"\n      ],\n      \"test_multi_reduction\": [\n         \"self\"\n      ],\n      \"test_multi_starred_expr_lhs\": [\n         \"self\"\n      ],\n      \"test_multiline_annot_ast_py3_fn\": [\n         \"self\"\n      ],\n      \"test_multiple_assign\": [\n         \"self\"\n      ],\n      \"test_multiple_backward\": [\n         \"self\"\n      ],\n      \"test_multiple_backward_with_errors\": [\n         \"self\"\n      ],\n      \"test_mutable_dce\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_block\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_graph_input\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_indirect_wildcard_write\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_indirect_wildcards\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_list\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_loop\": [\n         \"self\"\n      ],\n      \"test_mutable_dce_wildcards\": [\n         \"self\"\n      ],\n      \"test_named_tuple_good_error\": [\n         \"self\"\n      ],\n      \"test_named_tuple_py2\": [\n         \"self\"\n      ],\n      \"test_named_tuple_redefine\": [\n         \"self\"\n      ],\n      \"test_namedtuple_attr\": [\n         \"self\"\n      ],\n      \"test_naughty_anomaly_access\": [\n         \"self\"\n      ],\n      \"test_naughty_autograd_function_stashing_ctx\": [\n         \"self\"\n      ],\n      \"test_naughty_legacy_function_backward_before_forward\": [\n         \"self\"\n      ],\n      \"test_naughty_legacy_function_early_access\": [\n         \"self\"\n      ],\n      \"test_naughty_legacy_variable_grad_fn\": [\n         \"self\"\n      ],\n      \"test_nested\": [\n         \"i\",\n         \"pids_queue\",\n         \"nested_child_sleep\",\n         \"start_method\"\n      ],\n      \"test_nested_backward_accumulate_grads\": [\n         \"self\"\n      ],\n      \"test_nested_child_body\": [\n         \"i\",\n         \"ready_queue\",\n         \"nested_child_sleep\"\n      ],\n      \"test_next_functions\": [\n         \"self\"\n      ],\n      \"test_nn_GRU\": [\n         \"self\"\n      ],\n      \"test_nn_LSTM\": [\n         \"self\"\n      ],\n      \"test_nn_LSTM_with_layers\": [\n         \"self\"\n      ],\n      \"test_nn_init\": [\n         \"self\"\n      ],\n      \"test_no_grad\": [\n         \"self\"\n      ],\n      \"test_no_grad_assignment\": [\n         \"self\"\n      ],\n      \"test_no_grad_copy\": [\n         \"self\"\n      ],\n      \"test_no_grad_copy_sparse\": [\n         \"self\"\n      ],\n      \"test_no_grad_input\": [\n         \"self\"\n      ],\n      \"test_no_grad_modifies_version\": [\n         \"self\"\n      ],\n      \"test_no_grad_python_function\": [\n         \"self\"\n      ],\n      \"test_no_requires_grad_inplace\": [\n         \"self\"\n      ],\n      \"test_no_unnecessary_save\": [\n         \"self\"\n      ],\n      \"test_non_final_return\": [\n         \"self\"\n      ],\n      \"test_non_tensor_tracing\": [\n         \"self\"\n      ],\n      \"test_norm_subgradient\": [\n         \"self\"\n      ],\n      \"test_ntuple_builtins\": [\n         \"self\"\n      ],\n      \"test_numpy_requires_grad\": [\n         \"self\"\n      ],\n      \"test_old_models_bc\": [\n         \"self\"\n      ],\n      \"test_only_eval_fn\": [\n         \"model\",\n         \"calib_data\"\n      ],\n      \"test_only_train_fn\": [\n         \"model\",\n         \"train_data\",\n         \"loss_fn\"\n      ],\n      \"test_onnx_aten\": [\n         \"self\"\n      ],\n      \"test_onnx_export_func_with_warnings\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_inline_params\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_inline_script\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_inline_trace\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_module\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_module_if\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_module_loop\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_non_alpha_add_sub\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_python_fail\": [\n         \"self\"\n      ],\n      \"test_onnx_export_script_truediv\": [\n         \"self\"\n      ],\n      \"test_onnx_export_shape_reshape\": [\n         \"self\"\n      ],\n      \"test_onnx_export_speculate\": [\n         \"self\"\n      ],\n      \"test_onnx_multiple_return\": [\n         \"self\"\n      ],\n      \"test_onnx_raw_export_script_truediv\": [\n         \"self\"\n      ],\n      \"test_op_dtype\": [\n         \"self\"\n      ],\n      \"test_optional_conversion\": [\n         \"self\"\n      ],\n      \"test_optional_tuple\": [\n         \"self\"\n      ],\n      \"test_ord\": [\n         \"self\"\n      ],\n      \"test_pack_padded_pad_packed_trace\": [\n         \"self\"\n      ],\n      \"test_pack_tuple_into_non_var\": [\n         \"self\"\n      ],\n      \"test_pack_unpack_nested\": [\n         \"self\"\n      ],\n      \"test_pack_unpack_state\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations_comment\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations_incompatible_expression\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations_subscript_non_ident\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations_subscript_tensor\": [\n         \"self\"\n      ],\n      \"test_parser_type_annotations_unknown_type\": [\n         \"self\"\n      ],\n      \"test_partial_returns\": [\n         \"self\"\n      ],\n      \"test_partial_returns_shape_prop\": [\n         \"self\"\n      ],\n      \"test_pass\": [\n         \"self\"\n      ],\n      \"test_pickle\": [\n         \"self\"\n      ],\n      \"test_pickle_checkpoint\": [\n         \"self\"\n      ],\n      \"test_pickle_checkpoint_cuda\": [\n         \"self\"\n      ],\n      \"test_pickle_checkpoint_tup\": [\n         \"self\"\n      ],\n      \"test_pinverse\": [\n         \"self\"\n      ],\n      \"test_post_hooks\": [\n         \"self\"\n      ],\n      \"test_pow_scalar_base\": [\n         \"self\"\n      ],\n      \"test_pow_zero_tensor_gradient\": [\n         \"self\"\n      ],\n      \"test_power_function\": [\n         \"self\"\n      ],\n      \"test_print_kwargs\": [\n         \"self\"\n      ],\n      \"test_profiler\": [\n         \"self\"\n      ],\n      \"test_profiler_aggregation_fake\": [\n         \"self\"\n      ],\n      \"test_profiler_aggregation_lstm\": [\n         \"self\"\n      ],\n      \"test_profiler_custom_op\": [\n         \"self\"\n      ],\n      \"test_profiler_function_event_avg\": [\n         \"self\"\n      ],\n      \"test_profiler_no_cuda\": [\n         \"self\"\n      ],\n      \"test_profiler_shapes\": [\n         \"self\"\n      ],\n      \"test_profiler_tracing\": [\n         \"self\"\n      ],\n      \"test_profiler_unboxed_only\": [\n         \"self\"\n      ],\n      \"test_protobuf\": [\n         \"self\"\n      ],\n      \"test_put\": [\n         \"self\"\n      ],\n      \"test_put_accumulate\": [\n         \"self\"\n      ],\n      \"test_pyop_exception_message\": [\n         \"self\"\n      ],\n      \"test_python_call_non_tensor\": [\n         \"self\"\n      ],\n      \"test_python_call_non_tensor_wrong\": [\n         \"self\"\n      ],\n      \"test_python_op_exception\": [\n         \"self\"\n      ],\n      \"test_python_op_name\": [\n         \"self\"\n      ],\n      \"test_python_submodule_script\": [\n         \"self\"\n      ],\n      \"test_python_val_doesnt_have_attr\": [\n         \"self\"\n      ],\n      \"test_quantization_modules\": [\n         \"self\"\n      ],\n      \"test_rand\": [\n         \"self\"\n      ],\n      \"test_rand_profiling\": [\n         \"self\"\n      ],\n      \"test_range_args\": [\n         \"self\"\n      ],\n      \"test_reassign_module_lhs\": [\n         \"self\"\n      ],\n      \"test_reassign_module_rhs\": [\n         \"self\"\n      ],\n      \"test_record_function\": [\n         \"self\"\n      ],\n      \"test_record_function_callbacks\": [\n         \"self\"\n      ],\n      \"test_record_function_multithreaded\": [\n         \"self\"\n      ],\n      \"test_reduce_dtype\": [\n         \"self\"\n      ],\n      \"test_reentrant_child_error\": [\n         \"self\"\n      ],\n      \"test_reentrant_priority\": [\n         \"self\"\n      ],\n      \"test_reentrant_with_callbacks_both_depths\": [\n         \"self\"\n      ],\n      \"test_reentrant_with_callbacks_depth_0\": [\n         \"self\"\n      ],\n      \"test_reentrant_with_callbacks_depth_1\": [\n         \"self\"\n      ],\n      \"test_reentrant_with_leaf_variable_hook\": [\n         \"self\"\n      ],\n      \"test_reentrant_with_non_leaf_variable_hook\": [\n         \"self\"\n      ],\n      \"test_requires_grad\": [\n         \"self\"\n      ],\n      \"test_requires_grad_\": [\n         \"self\"\n      ],\n      \"test_requires_grad_inplace\": [\n         \"self\"\n      ],\n      \"test_reshape\": [\n         \"old_shape\",\n         \"new_shape\",\n         \"stride_only\"\n      ],\n      \"test_resize\": [\n         \"self\"\n      ],\n      \"test_retain_grad\": [\n         \"self\"\n      ],\n      \"test_retain_grad_cycle\": [\n         \"self\"\n      ],\n      \"test_return_duplicate\": [\n         \"self\"\n      ],\n      \"test_return_duplicate_inplace\": [\n         \"self\"\n      ],\n      \"test_return_leaf\": [\n         \"self\"\n      ],\n      \"test_return_leaf_inplace\": [\n         \"self\"\n      ],\n      \"test_return_stmt_not_at_end\": [\n         \"self\"\n      ],\n      \"test_return_tuple\": [\n         \"self\"\n      ],\n      \"test_rnn_trace_override\": [\n         \"self\"\n      ],\n      \"test_rnns\": [\n         \"experim_creator\",\n         \"control_creator\",\n         \"check_grad\",\n         \"verbose\",\n         \"seqLength\",\n         \"numLayers\",\n         \"inputSize\",\n         \"hiddenSize\",\n         \"miniBatch\",\n         \"device\",\n         \"seed\"\n      ],\n      \"test_round\": [\n         \"self\"\n      ],\n      \"test_save_none_for_backward\": [\n         \"self\"\n      ],\n      \"test_save_output_nr\": [\n         \"self\"\n      ],\n      \"test_saved_variables_deprecated\": [\n         \"self\"\n      ],\n      \"test_script_chunk\": [\n         \"self\"\n      ],\n      \"test_script_copy\": [\n         \"self\"\n      ],\n      \"test_script_define_order\": [\n         \"self\"\n      ],\n      \"test_script_define_order_recursive_fail\": [\n         \"self\"\n      ],\n      \"test_script_get_device_cuda\": [\n         \"self\"\n      ],\n      \"test_script_get_tracing_state\": [\n         \"self\"\n      ],\n      \"test_script_kwargs_fn_call\": [\n         \"self\"\n      ],\n      \"test_script_module_export_blocks\": [\n         \"self\"\n      ],\n      \"test_script_module_export_shared_storage\": [\n         \"self\"\n      ],\n      \"test_script_module_export_submodule\": [\n         \"self\"\n      ],\n      \"test_script_module_export_tensor_cuda\": [\n         \"self\"\n      ],\n      \"test_script_module_export_tensor_type\": [\n         \"self\"\n      ],\n      \"test_script_module_list_sequential\": [\n         \"self\"\n      ],\n      \"test_script_module_not_tuple\": [\n         \"self\"\n      ],\n      \"test_script_module_star_assign2\": [\n         \"self\"\n      ],\n      \"test_script_module_star_assign2_inplace\": [\n         \"self\"\n      ],\n      \"test_script_module_star_assign_fail_builtin\": [\n         \"self\"\n      ],\n      \"test_script_module_star_assign_fail_pythonop\": [\n         \"self\"\n      ],\n      \"test_script_nested_mod_list\": [\n         \"self\"\n      ],\n      \"test_script_non_tensor_args_outputs\": [\n         \"self\"\n      ],\n      \"test_script_outputs\": [\n         \"self\"\n      ],\n      \"test_script_pack_padded_sequence\": [\n         \"self\"\n      ],\n      \"test_script_rnn_layer\": [\n         \"seq_len\",\n         \"batch\",\n         \"input_size\",\n         \"hidden_size\"\n      ],\n      \"test_script_scope\": [\n         \"self\"\n      ],\n      \"test_script_sequential_for\": [\n         \"self\"\n      ],\n      \"test_script_sequential_in_mod_list\": [\n         \"self\"\n      ],\n      \"test_script_sequential_multi_output_fail\": [\n         \"self\"\n      ],\n      \"test_script_sequential_orderdict\": [\n         \"self\"\n      ],\n      \"test_script_stacked_bidir_rnn\": [\n         \"seq_len\",\n         \"batch\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\"\n      ],\n      \"test_script_stacked_lnlstm\": [\n         \"seq_len\",\n         \"batch\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\"\n      ],\n      \"test_script_stacked_lstm_dropout\": [\n         \"seq_len\",\n         \"batch\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\"\n      ],\n      \"test_script_stacked_rnn\": [\n         \"seq_len\",\n         \"batch\",\n         \"input_size\",\n         \"hidden_size\",\n         \"num_layers\"\n      ],\n      \"test_script_star_assign\": [\n         \"self\"\n      ],\n      \"test_script_star_expr\": [\n         \"self\"\n      ],\n      \"test_script_star_expr_string\": [\n         \"self\"\n      ],\n      \"test_scriptmodule_multi_head_attn_cuda\": [\n         \"self\"\n      ],\n      \"test_scriptmodule_transformer_cuda\": [\n         \"self\"\n      ],\n      \"test_select_after_chunk\": [\n         \"self\"\n      ],\n      \"test_select_sum\": [\n         \"self\"\n      ],\n      \"test_sequential_intermediary_types\": [\n         \"self\"\n      ],\n      \"test_serialization_big_ints\": [\n         \"self\"\n      ],\n      \"test_serialization_sharing\": [\n         \"self\"\n      ],\n      \"test_set_data_preserve_pyobj\": [\n         \"self\"\n      ],\n      \"test_set_data_tensorimpl_type\": [\n         \"self\"\n      ],\n      \"test_set_grad_enabled\": [\n         \"self\"\n      ],\n      \"test_set_grad_generator_functions\": [\n         \"self\"\n      ],\n      \"test_setitem\": [\n         \"self\"\n      ],\n      \"test_setitem_mask\": [\n         \"self\"\n      ],\n      \"test_shape\": [\n         \"self\"\n      ],\n      \"test_shape_analysis_loop\": [\n         \"self\"\n      ],\n      \"test_sharded_grad\": [\n         \"self\"\n      ],\n      \"test_shared_grads\": [\n         \"with_shapes\",\n         \"create_model\",\n         \"conv_blob\",\n         \"last_out_blob\",\n         \"data_blob\",\n         \"label_blob\",\n         \"num_labels\"\n      ],\n      \"test_shared_module\": [\n         \"self\"\n      ],\n      \"test_simple_reentrant\": [\n         \"self\"\n      ],\n      \"test_single_starred_expr_for_loop\": [\n         \"self\"\n      ],\n      \"test_single_starred_lhs\": [\n         \"self\"\n      ],\n      \"test_singleton_tuple_unpack\": [\n         \"self\"\n      ],\n      \"test_slice_dynamic_index\": [\n         \"self\"\n      ],\n      \"test_slogdet_sign\": [\n         \"self\"\n      ],\n      \"test_sparse_backward\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_both_scalar\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_dim0\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_dim1\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_dim_neg\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_ind_scalar\": [\n         \"self\"\n      ],\n      \"test_sparse_gather_x_scalar\": [\n         \"self\"\n      ],\n      \"test_sparse_mm_backward\": [\n         \"self\"\n      ],\n      \"test_split\": [\n         \"self\"\n      ],\n      \"test_stack\": [\n         \"self\"\n      ],\n      \"test_static_if_prop\": [\n         \"self\"\n      ],\n      \"test_string_frontend_elif\": [\n         \"self\"\n      ],\n      \"test_string_index\": [\n         \"self\"\n      ],\n      \"test_string_len\": [\n         \"self\"\n      ],\n      \"test_string_list\": [\n         \"self\"\n      ],\n      \"test_string_slicing\": [\n         \"self\"\n      ],\n      \"test_submodule_attribute_serialization\": [\n         \"self\"\n      ],\n      \"test_success_first_then_exception_func\": [\n         \"i\",\n         \"arg\"\n      ],\n      \"test_success_func\": [\n         \"i\"\n      ],\n      \"test_success_single_arg_func\": [\n         \"i\",\n         \"arg\"\n      ],\n      \"test_sum_list_diff_elms\": [\n         \"self\"\n      ],\n      \"test_sum_list_empty\": [\n         \"self\"\n      ],\n      \"test_sum_list_literal\": [\n         \"self\"\n      ],\n      \"test_sum_list_one\": [\n         \"self\"\n      ],\n      \"test_sum_list_wrong_type\": [\n         \"self\"\n      ],\n      \"test_sum_to_with_empty_dim_grad\": [\n         \"self\"\n      ],\n      \"test_svd_no_singularvectors\": [\n         \"self\"\n      ],\n      \"test_symeig\": [\n         \"self\"\n      ],\n      \"test_symeig_no_eigenvectors\": [\n         \"self\"\n      ],\n      \"test_sys_stdout_override\": [\n         \"self\"\n      ],\n      \"test_tensor_import_export\": [\n         \"self\"\n      ],\n      \"test_tensor_sharing\": [\n         \"self\"\n      ],\n      \"test_tensor_sharing_with_forward\": [\n         \"self\"\n      ],\n      \"test_tensor_with_grad_as_constant\": [\n         \"self\"\n      ],\n      \"test_terminate_exit_func\": [\n         \"i\",\n         \"arg\"\n      ],\n      \"test_terminate_signal_func\": [\n         \"i\"\n      ],\n      \"test_thread_shutdown\": [\n         \"self\"\n      ],\n      \"test_too_many_grads\": [\n         \"self\"\n      ],\n      \"test_torch_functional\": [\n         \"self\"\n      ],\n      \"test_torch_manual_seed\": [\n         \"self\"\n      ],\n      \"test_torchscript_memoryformat\": [\n         \"self\"\n      ],\n      \"test_torchscript_multi_head_attn\": [\n         \"self\"\n      ],\n      \"test_trace_autograd_function\": [\n         \"self\"\n      ],\n      \"test_trace_checker_control_flow\": [\n         \"self\"\n      ],\n      \"test_trace_checker_dot_data\": [\n         \"self\"\n      ],\n      \"test_trace_checker_dropout_notrain\": [\n         \"self\"\n      ],\n      \"test_trace_checker_dropout_train\": [\n         \"self\"\n      ],\n      \"test_trace_checker_inplace_on_view\": [\n         \"self\"\n      ],\n      \"test_trace_checker_memoization\": [\n         \"self\"\n      ],\n      \"test_trace_checker_slice_lhs\": [\n         \"self\"\n      ],\n      \"test_trace_contiguous\": [\n         \"self\"\n      ],\n      \"test_trace_contiguous_short_circuit\": [\n         \"self\"\n      ],\n      \"test_trace_export_fns\": [\n         \"self\"\n      ],\n      \"test_trace_export_fns_recursive\": [\n         \"self\"\n      ],\n      \"test_trace_fork_join_and_module\": [\n         \"self\"\n      ],\n      \"test_trace_hierarchy\": [\n         \"self\"\n      ],\n      \"test_trace_inverse\": [\n         \"self\"\n      ],\n      \"test_trace_invert_module_hierarchy\": [\n         \"self\"\n      ],\n      \"test_trace_mixed_by_script_with_dict_output\": [\n         \"self\"\n      ],\n      \"test_trace_modulelist\": [\n         \"self\"\n      ],\n      \"test_trace_nested_datatypes\": [\n         \"self\"\n      ],\n      \"test_trace_of_script\": [\n         \"self\"\n      ],\n      \"test_trace_optional\": [\n         \"self\"\n      ],\n      \"test_trace_parameter\": [\n         \"self\"\n      ],\n      \"test_trace_with_size\": [\n         \"self\"\n      ],\n      \"test_traced_module\": [\n         \"self\"\n      ],\n      \"test_tracing_indexing\": [\n         \"self\"\n      ],\n      \"test_tracing_slicing\": [\n         \"self\"\n      ],\n      \"test_trapz\": [\n         \"self\"\n      ],\n      \"test_triangular_solve\": [\n         \"self\"\n      ],\n      \"test_tuple_assignments\": [\n         \"self\"\n      ],\n      \"test_tuple_index_to_list\": [\n         \"self\"\n      ],\n      \"test_tuple_indexing\": [\n         \"self\"\n      ],\n      \"test_tuple_len\": [\n         \"self\"\n      ],\n      \"test_tuple_slicing\": [\n         \"self\"\n      ],\n      \"test_tuples\": [\n         \"self\"\n      ],\n      \"test_type_annotation_module\": [\n         \"self\"\n      ],\n      \"test_type_annotation_py3\": [\n         \"self\"\n      ],\n      \"test_type_annotations\": [\n         \"self\"\n      ],\n      \"test_type_annotations_repeated_list\": [\n         \"self\"\n      ],\n      \"test_type_annotations_varargs\": [\n         \"self\"\n      ],\n      \"test_type_comments_in_body\": [\n         \"self\"\n      ],\n      \"test_type_conversions\": [\n         \"self\"\n      ],\n      \"test_unbind\": [\n         \"self\"\n      ],\n      \"test_unicode_comments\": [\n         \"self\"\n      ],\n      \"test_unknown_builtin\": [\n         \"self\"\n      ],\n      \"test_unsupported_builtin_error\": [\n         \"self\"\n      ],\n      \"test_unused_output\": [\n         \"self\"\n      ],\n      \"test_unwrap_optional_builtin\": [\n         \"self\"\n      ],\n      \"test_var_mean_differentiable\": [\n         \"self\"\n      ],\n      \"test_vararg_zeros\": [\n         \"self\"\n      ],\n      \"test_variable_traverse\": [\n         \"self\"\n      ],\n      \"test_version_counter\": [\n         \"self\"\n      ],\n      \"test_view_write\": [\n         \"self\"\n      ],\n      \"test_vl_py\": [],\n      \"test_volatile_deprecated\": [\n         \"self\"\n      ],\n      \"test_weak_cuda\": [\n         \"self\"\n      ],\n      \"test_where\": [\n         \"self\"\n      ],\n      \"test_where_method\": [\n         \"self\"\n      ],\n      \"test_worker_info_init_fn\": [\n         \"worker_id\"\n      ],\n      \"test_wrong_attr_lookup\": [\n         \"self\"\n      ],\n      \"test_wrong_implicit_expand\": [\n         \"self\"\n      ],\n      \"test_wrong_method_call_inputs\": [\n         \"self\"\n      ],\n      \"test_wrong_module_attr_lookup\": [\n         \"self\"\n      ],\n      \"test_wrong_return_type\": [\n         \"self\"\n      ],\n      \"test_wrong_use_as_callable\": [\n         \"self\"\n      ],\n      \"test_wrong_use_as_tuple\": [\n         \"self\"\n      ],\n      \"test_zeros\": [\n         \"self\"\n      ],\n      \"test_zip_enumerate_modulelist\": [\n         \"self\"\n      ],\n      \"test_zipfile\": [\n         \"self\"\n      ],\n      \"text\": [\n         \"tag\",\n         \"text\"\n      ],\n      \"text_lineno\": [\n         \"draw\"\n      ],\n      \"thread_runner\": [\n         \"idx\",\n         \"testobj\"\n      ],\n      \"threshold\": [\n         \"g\",\n         \"self\",\n         \"threshold\",\n         \"value\"\n      ],\n      \"to\": [\n         \"g\",\n         \"self\"\n      ],\n      \"toC\": [\n         \"x\"\n      ],\n      \"to_camel_case\": [\n         \"name\"\n      ],\n      \"to_execution_step\": [\n         \"step_or_nets\",\n         \"default_name\"\n      ],\n      \"to_gpu\": [\n         \"obj\",\n         \"type_map\"\n      ],\n      \"to_mkldnn\": [\n         \"module\"\n      ],\n      \"to_return_type\": [\n         \"arg\",\n         \"option\"\n      ],\n      \"to_str\": [\n         \"item\"\n      ],\n      \"to_string\": [\n         \"obj\"\n      ],\n      \"to_tensor\": [\n         \"X\",\n         \"device\"\n      ],\n      \"topk\": [\n         \"g\",\n         \"self\",\n         \"k\",\n         \"dim\",\n         \"largest\",\n         \"sorted\",\n         \"out\"\n      ],\n      \"topological_sort_traversal\": [\n         \"g\"\n      ],\n      \"topological_sort_traversal_longest_path\": [\n         \"g\"\n      ],\n      \"torch_sumall\": [\n         \"a\",\n         \"iterations\"\n      ],\n      \"trace\": [\n         \"func\",\n         \"example_inputs\",\n         \"optimize\",\n         \"check_trace\",\n         \"check_inputs\",\n         \"check_tolerance\",\n         \"strict\",\n         \"_force_outplace\",\n         \"_module_class\",\n         \"_compilation_unit\"\n      ],\n      \"trace_module\": [\n         \"mod\",\n         \"inputs\",\n         \"optimize\",\n         \"check_trace\",\n         \"check_inputs\",\n         \"check_tolerance\",\n         \"strict\",\n         \"_force_outplace\",\n         \"_module_class\",\n         \"_compilation_unit\"\n      ],\n      \"traceable\": [\n         \"fn_cls\"\n      ],\n      \"trainFun\": [],\n      \"trainbench\": [\n         \"name\",\n         \"rnn_creator\",\n         \"nloops\",\n         \"warmup\",\n         \"seqLength\",\n         \"numLayers\",\n         \"inputSize\",\n         \"hiddenSize\",\n         \"miniBatch\",\n         \"device\",\n         \"seed\"\n      ],\n      \"transFCRelu\": [\n         \"cur\",\n         \"id2node\",\n         \"name2id\",\n         \"ops\",\n         \"model\"\n      ],\n      \"transform_caffe2_net\": [\n         \"pred_net\",\n         \"input_shapes\",\n         \"populate_shapes\",\n         \"max_batch_size\",\n         \"max_workspace_size\",\n         \"verbosity\",\n         \"debug_builder\",\n         \"build_serializable_op\"\n      ],\n      \"transjugate\": [\n         \"A\"\n      ],\n      \"transpose\": [\n         \"A\"\n      ],\n      \"transpose_network\": [\n         \"nn\"\n      ],\n      \"triplet_margin_loss\": [\n         \"anchor\",\n         \"positive\",\n         \"negative\",\n         \"margin\",\n         \"p\",\n         \"eps\",\n         \"swap\",\n         \"size_average\",\n         \"reduce\",\n         \"reduction\"\n      ],\n      \"tripletmarginloss_reference\": [\n         \"anchor\",\n         \"positive\",\n         \"negative\",\n         \"margin\",\n         \"p\",\n         \"eps\",\n         \"swap\",\n         \"reduction\"\n      ],\n      \"true_divide\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"trunc_normal_\": [\n         \"tensor\",\n         \"mean\",\n         \"std\",\n         \"a\",\n         \"b\"\n      ],\n      \"try_ann_to_type\": [\n         \"ann\",\n         \"loc\"\n      ],\n      \"try_compile_fn\": [\n         \"fn\",\n         \"loc\"\n      ],\n      \"try_get_nn_module_compiled_mod_and_inputs\": [],\n      \"try_real_annotations\": [\n         \"fn\",\n         \"loc\"\n      ],\n      \"try_remove_folder\": [\n         \"folder_path\"\n      ],\n      \"tt_svd\": [\n         \"W\",\n         \"sizes\",\n         \"tt_ranks\"\n      ],\n      \"two_args_two_kwargs\": [\n         \"first_arg\",\n         \"second_arg\",\n         \"first_kwarg\",\n         \"second_kwarg\"\n      ],\n      \"type_argument_translations\": [\n         \"arg\"\n      ],\n      \"type_as\": [\n         \"g\",\n         \"self\",\n         \"other\"\n      ],\n      \"type_input_return_pairs\": [\n         \"self\"\n      ],\n      \"type_to_python\": [\n         \"typename\",\n         \"size\"\n      ],\n      \"typename\": [\n         \"o\"\n      ],\n      \"unbind\": [\n         \"g\",\n         \"self\",\n         \"dim\"\n      ],\n      \"unfold\": [\n         \"g\",\n         \"input\",\n         \"dimension\",\n         \"size\",\n         \"step\"\n      ],\n      \"uniform_\": [\n         \"tensor\",\n         \"a\",\n         \"b\"\n      ],\n      \"uniform_scalar\": [\n         \"offset\",\n         \"requires_grad\"\n      ],\n      \"uninplace_api_name\": [\n         \"api_name\"\n      ],\n      \"unique\": [\n         \"input\",\n         \"sorted\",\n         \"return_inverse\",\n         \"return_counts\",\n         \"dim\"\n      ],\n      \"unique_args\": [\n         \"argslist\"\n      ],\n      \"unique_consecutive\": [\n         \"input\",\n         \"return_inverse\",\n         \"return_counts\",\n         \"dim\"\n      ],\n      \"unique_dim\": [\n         \"g\",\n         \"self\",\n         \"dim\",\n         \"sorted\",\n         \"return_inverse\",\n         \"return_counts\"\n      ],\n      \"unique_id\": [],\n      \"unjoined_sigmoid_cross_entropy\": [\n         \"x\",\n         \"z\"\n      ],\n      \"unjoined_sigmoid_cross_entropy_grad\": [\n         \"x\",\n         \"z\"\n      ],\n      \"unpack_args\": [\n         \"env\",\n         \"declaration\"\n      ],\n      \"unpack_optional_dimname_list_hack\": [\n         \"name\",\n         \"expr\"\n      ],\n      \"unpack_variables\": [\n         \"args\"\n      ],\n      \"unroll\": [\n         \"uf\",\n         \"IndexType\",\n         \"InType\",\n         \"OutType\",\n         \"use_weights\",\n         \"isa\",\n         \"fused\",\n         \"use_offsets\"\n      ],\n      \"unscope_name\": [\n         \"blob_name\"\n      ],\n      \"unserializable_hook\": [\n         \"f\"\n      ],\n      \"unsqueeze\": [\n         \"g\",\n         \"self\",\n         \"dim\"\n      ],\n      \"unsupported\": [\n         \"func\"\n      ],\n      \"unused\": [\n         \"fn\"\n      ],\n      \"unzip\": [\n         \"zipped_path\",\n         \"quiet\"\n      ],\n      \"unzip_namedshape\": [\n         \"namedshape\"\n      ],\n      \"update_bn\": [\n         \"loader\",\n         \"model\",\n         \"device\"\n      ],\n      \"update_bn_stats\": [\n         \"mod\"\n      ],\n      \"update_counter_ref\": [\n         \"prev_iter\",\n         \"update_counter\",\n         \"indices\",\n         \"curr_iter\",\n         \"counter_halflife\"\n      ],\n      \"update_hash\": [\n         \"seed\",\n         \"value\"\n      ],\n      \"update_initializer\": [\n         \"initializer_class\",\n         \"operator_name_and_kwargs\",\n         \"default_operator_name_and_kwargs\"\n      ],\n      \"update_names\": [\n         \"tensor\",\n         \"names\",\n         \"rename_map\",\n         \"inplace\"\n      ],\n      \"update_names_with_list\": [\n         \"tensor\",\n         \"names\",\n         \"inplace\"\n      ],\n      \"update_names_with_mapping\": [\n         \"tensor\",\n         \"rename_map\",\n         \"inplace\"\n      ],\n      \"update_placeholder_op_output\": [\n         \"op\",\n         \"blob_to_device\"\n      ],\n      \"upload_models\": [],\n      \"upload_onnx_model\": [\n         \"model_name\",\n         \"zoo_dir\",\n         \"backup\",\n         \"only_local\"\n      ],\n      \"upsample\": [\n         \"input\",\n         \"size\",\n         \"scale_factor\",\n         \"mode\",\n         \"align_corners\"\n      ],\n      \"upsample_bilinear\": [\n         \"input\",\n         \"size\",\n         \"scale_factor\"\n      ],\n      \"upsample_nearest\": [\n         \"input\",\n         \"size\",\n         \"scale_factor\"\n      ],\n      \"upsample_nearest2d\": [\n         \"g\",\n         \"input\",\n         \"output_size\",\n         \"align_corners\",\n         \"scales_h\",\n         \"scales_w\"\n      ],\n      \"used_gradient_indices\": [\n         \"formula\"\n      ],\n      \"user_cache_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"opinion\"\n      ],\n      \"user_config_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"roaming\"\n      ],\n      \"user_data_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"roaming\"\n      ],\n      \"user_log_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"opinion\"\n      ],\n      \"user_state_dir\": [\n         \"appname\",\n         \"appauthor\",\n         \"version\",\n         \"roaming\"\n      ],\n      \"uses_ident\": [\n         \"func\",\n         \"ident\"\n      ],\n      \"uses_retain_variables\": [\n         \"func\"\n      ],\n      \"uses_single_grad\": [\n         \"func\"\n      ],\n      \"validModelName\": [\n         \"name\"\n      ],\n      \"validate_cuda_device\": [\n         \"location\"\n      ],\n      \"value_has_tensors\": [\n         \"v\"\n      ],\n      \"value_is_tensor_type\": [\n         \"v\"\n      ],\n      \"variable\": [],\n      \"varlen_lstm_backward_setup\": [\n         \"forward_output\",\n         \"seed\"\n      ],\n      \"varlen_lstm_creator\": [\n         \"script\"\n      ],\n      \"varlen_lstm_factory\": [\n         \"cell\",\n         \"script\"\n      ],\n      \"varlen_lstm_inputs\": [\n         \"minlen\",\n         \"maxlen\",\n         \"numLayers\",\n         \"inputSize\",\n         \"hiddenSize\",\n         \"miniBatch\",\n         \"return_module\",\n         \"device\",\n         \"seed\"\n      ],\n      \"varlen_pytorch_lstm_creator\": [],\n      \"vector_to_parameters\": [\n         \"vec\",\n         \"parameters\"\n      ],\n      \"verify\": [\n         \"model\",\n         \"args\",\n         \"loss_fn\",\n         \"devices\"\n      ],\n      \"verify_apply_bounding_box\": [\n         \"img\",\n         \"box\"\n      ],\n      \"verify_assignments\": [\n         \"assignments\"\n      ],\n      \"verify_color_normalize\": [\n         \"img\",\n         \"means\",\n         \"stds\"\n      ],\n      \"verify_crop\": [\n         \"img\",\n         \"crop\"\n      ],\n      \"verify_graph_equality\": [\n         \"net_a\",\n         \"net_b\"\n      ],\n      \"verify_inplace_blobs\": [\n         \"net_a\",\n         \"net_b\"\n      ],\n      \"verify_ninja_availability\": [],\n      \"verify_rescale\": [\n         \"img\",\n         \"minsize\"\n      ],\n      \"version\": [],\n      \"vhp\": [\n         \"func\",\n         \"inputs\",\n         \"v\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"video\": [\n         \"tag\",\n         \"tensor\",\n         \"fps\"\n      ],\n      \"video_input\": [\n         \"model\",\n         \"blob_in\",\n         \"blob_out\"\n      ],\n      \"view\": [\n         \"g\",\n         \"self\",\n         \"size\"\n      ],\n      \"visualization\": [\n         \"name\"\n      ],\n      \"visualize\": [\n         \"graph\",\n         \"name_prefix\",\n         \"pb_graph\",\n         \"executors_it\"\n      ],\n      \"visualize_cnn\": [\n         \"cnn\"\n      ],\n      \"visualize_file\": [\n         \"filename\"\n      ],\n      \"visualize_graph_executor\": [\n         \"state\",\n         \"name_prefix\",\n         \"pb_graph\",\n         \"inline_graph\"\n      ],\n      \"visualize_net\": [\n         \"nets\"\n      ],\n      \"visualize_ops\": [\n         \"ops\"\n      ],\n      \"visualize_print_log\": [\n         \"filename\"\n      ],\n      \"visualize_rec\": [\n         \"graph\",\n         \"value_map\",\n         \"name_prefix\",\n         \"pb_graph\",\n         \"executors_it\"\n      ],\n      \"visualize_summary\": [\n         \"filename\"\n      ],\n      \"vjp\": [\n         \"func\",\n         \"inputs\",\n         \"v\",\n         \"create_graph\",\n         \"strict\"\n      ],\n      \"wait_for_process\": [\n         \"p\"\n      ],\n      \"wait_for_value_future\": [],\n      \"wait_until_node_failure\": [\n         \"rank\",\n         \"expected_error_regex\"\n      ],\n      \"wait_until_pending_users_flushed\": [],\n      \"warmup_backward\": [\n         \"f\"\n      ],\n      \"warmup_forward\": [\n         \"f\"\n      ],\n      \"warn_if_has_hooks\": [\n         \"tensor\"\n      ],\n      \"warn_on_static_input_change\": [\n         \"input_states\"\n      ],\n      \"weight_init\": [\n         \"module\"\n      ],\n      \"weight_norm\": [\n         \"module\",\n         \"name\",\n         \"dim\"\n      ],\n      \"weights_init\": [\n         \"m\"\n      ],\n      \"where\": [\n         \"g\",\n         \"condition\",\n         \"self\",\n         \"other\"\n      ],\n      \"which\": [\n         \"thefile\"\n      ],\n      \"whichmodule\": [\n         \"obj\"\n      ],\n      \"white_listed\": [\n         \"schema\",\n         \"white_list\"\n      ],\n      \"with_metaclass\": [\n         \"meta\"\n      ],\n      \"wngrad_sparse_test_helper\": [\n         \"parent_test\",\n         \"inputs\",\n         \"seq_b\",\n         \"lr\",\n         \"epsilon\",\n         \"engine\",\n         \"gc\",\n         \"dc\"\n      ],\n      \"worker_name\": [\n         \"rank\"\n      ],\n      \"worker_set_affinity\": [\n         \"_\"\n      ],\n      \"wrap_check_inputs\": [\n         \"check_inputs\"\n      ],\n      \"wrap_cpp_module\": [\n         \"cpp_module\"\n      ],\n      \"wrap_functional\": [\n         \"fn\"\n      ],\n      \"wrap_logical_op_with_cast_to\": [\n         \"to_type\"\n      ],\n      \"wrap_logical_op_with_cast_to_and_from\": [\n         \"to_type\"\n      ],\n      \"wrap_logical_op_with_negation\": [\n         \"func\"\n      ],\n      \"write\": [\n         \"dirname\",\n         \"name\",\n         \"template\",\n         \"env\"\n      ],\n      \"write_events\": [\n         \"tf_dir\",\n         \"events\"\n      ],\n      \"write_pbtxt\": [\n         \"save_path\",\n         \"contents\"\n      ],\n      \"write_proto\": [\n         \"str_to_compare\",\n         \"function_ptr\"\n      ],\n      \"write_test_to_test_class\": [\n         \"unit_test_class\",\n         \"test_params_dict\",\n         \"test_instance_class\",\n         \"parity_table\",\n         \"devices\"\n      ],\n      \"xavier_normal_\": [\n         \"tensor\",\n         \"gain\"\n      ],\n      \"xavier_uniform_\": [\n         \"tensor\",\n         \"gain\"\n      ],\n      \"zero_gradients\": [\n         \"x\"\n      ],\n      \"zeros\": [\n         \"g\",\n         \"sizes\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\"\n      ],\n      \"zeros_\": [\n         \"tensor\"\n      ],\n      \"zeros_like\": [\n         \"g\",\n         \"input\",\n         \"dtype\",\n         \"layout\",\n         \"device\",\n         \"pin_memory\",\n         \"memory_format\"\n      ]\n   },\n   \"group\": {},\n   \"install\": {\n      \"run\": [\n         \"self\"\n      ]\n   },\n   \"lazy_property\": {\n      \"__get__\": [\n         \"self\",\n         \"instance\",\n         \"obj_type\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"wrapped\"\n      ]\n   },\n   \"leak_checker\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"test_case\"\n      ],\n      \"_get_next_fds\": [\n         \"self\",\n         \"n\"\n      ],\n      \"_has_shm_files\": [\n         \"self\"\n      ],\n      \"check_pid\": [\n         \"self\",\n         \"pid\"\n      ],\n      \"has_shm_files\": [\n         \"self\",\n         \"wait\"\n      ]\n   },\n   \"nested_dict\": {\n      \"__contains__\": [\n         \"self\",\n         \"item\"\n      ],\n      \"__getitem__\": [\n         \"self\",\n         \"x\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"base\",\n         \"parent\"\n      ]\n   },\n   \"no_grad\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ]\n   },\n   \"onlyOn\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"device_type\"\n      ]\n   },\n   \"precisionOverride\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"d\"\n      ]\n   },\n   \"profile\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_val\",\n         \"exc_tb\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"enabled\",\n         \"use_cuda\",\n         \"record_shapes\"\n      ],\n      \"__repr__\": [\n         \"self\"\n      ],\n      \"__str__\": [\n         \"self\"\n      ],\n      \"_check_finish\": [\n         \"self\"\n      ],\n      \"export_chrome_trace\": [\n         \"self\",\n         \"path\"\n      ],\n      \"key_averages\": [\n         \"self\",\n         \"group_by_input_shape\"\n      ],\n      \"self_cpu_time_total\": [\n         \"self\"\n      ],\n      \"table\": [\n         \"self\",\n         \"sort_by\",\n         \"row_limit\",\n         \"header\"\n      ],\n      \"total_average\": [\n         \"self\"\n      ]\n   },\n   \"record_function\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"name\"\n      ],\n      \"_call_end_callbacks_on_future\": [\n         \"self\",\n         \"fut\"\n      ]\n   },\n   \"reduce_op\": {\n      \"__getattribute__\": [\n         \"self\",\n         \"key\"\n      ],\n      \"__init__\": [\n         \"self\"\n      ]\n   },\n   \"serialization_method\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"use_zip\"\n      ]\n   },\n   \"set_detect_anomaly\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"mode\"\n      ]\n   },\n   \"set_grad_enabled\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"mode\"\n      ]\n   },\n   \"skipCPUIf\": {\n      \"__init__\": [\n         \"self\",\n         \"dep\",\n         \"reason\"\n      ]\n   },\n   \"skipCUDAIf\": {\n      \"__init__\": [\n         \"self\",\n         \"dep\",\n         \"reason\"\n      ]\n   },\n   \"skipIf\": {\n      \"__call__\": [\n         \"self\",\n         \"fn\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"dep\",\n         \"reason\",\n         \"device_type\"\n      ]\n   },\n   \"tqdm\": {\n      \"__enter__\": [\n         \"self\"\n      ],\n      \"__exit__\": [\n         \"self\",\n         \"exc_type\",\n         \"exc_val\",\n         \"exc_tb\"\n      ],\n      \"__init__\": [\n         \"self\",\n         \"total\",\n         \"disable\",\n         \"unit\",\n         \"unit_scale\",\n         \"unit_divisor\"\n      ],\n      \"update\": [\n         \"self\",\n         \"n\"\n      ]\n   }\n}"